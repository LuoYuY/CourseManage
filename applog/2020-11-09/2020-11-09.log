2020-11-09 00:35:00 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 00:35:00 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 00:35:00 -<==      Total: 1
2020-11-09 00:35:00 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 00:35:00 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 00:35:00 -<==      Total: 1
2020-11-09 00:35:03 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:35:03 -==> Parameters: 2(Integer)
2020-11-09 00:35:03 -<==      Total: 1
2020-11-09 00:35:03 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 00:35:03 -==> Parameters: 2(Integer)
2020-11-09 00:35:03 -<==      Total: 3
2020-11-09 00:35:04 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:35:04 -==> Parameters: 2(Integer)
2020-11-09 00:35:04 -<==      Total: 1
2020-11-09 00:35:04 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 00:35:04 -==> Parameters: 2(Integer)
2020-11-09 00:35:04 -<==      Total: 1
2020-11-09 00:35:04 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 00:35:04 -==> Parameters: 2(Integer)
2020-11-09 00:35:04 -<==      Total: 2
2020-11-09 00:35:04 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 00:35:04 -==> Parameters: 2(Integer)
2020-11-09 00:35:05 -<==      Total: 3
2020-11-09 00:35:07 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:35:07 -==> Parameters: 2(Integer)
2020-11-09 00:35:07 -<==      Total: 1
2020-11-09 00:35:07 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 00:35:07 -==> Parameters: 6(Integer)
2020-11-09 00:35:07 -<==      Total: 3
2020-11-09 00:35:10 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 00:35:10 -==> Parameters: 4(Integer)
2020-11-09 00:35:10 -<==      Total: 1
2020-11-09 00:35:10 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 00:35:10 -==> Parameters: 4(Integer)
2020-11-09 00:35:10 -<==      Total: 1
2020-11-09 00:35:10 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 00:35:10 -==> Parameters: 4(Integer)
2020-11-09 00:35:11 -<==      Total: 0
2020-11-09 00:35:11 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 00:35:11 -==> Parameters: 4(Integer)
2020-11-09 00:35:11 -<==      Total: 1
2020-11-09 00:35:11 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 00:35:11 -==> Parameters: 6(Integer)
2020-11-09 00:35:11 -<==      Total: 1
2020-11-09 00:35:11 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 00:35:11 -==> Parameters: 6(Integer)
2020-11-09 00:35:11 -<==      Total: 2
2020-11-09 00:35:11 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:35:11 -==> Parameters: 11(Integer)
2020-11-09 00:35:11 -<==      Total: 1
2020-11-09 00:35:11 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:35:11 -==> Parameters: 12(Integer)
2020-11-09 00:35:11 -<==      Total: 1
2020-11-09 00:35:12 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 00:35:12 -==> Parameters: 4(Integer)
2020-11-09 00:35:12 -<==      Total: 1
2020-11-09 00:35:12 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 00:35:12 -==> Parameters: 6(Integer)
2020-11-09 00:35:12 -<==      Total: 1
2020-11-09 00:35:12 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 00:35:12 -==> Parameters: 6(Integer)
2020-11-09 00:35:12 -<==      Total: 2
2020-11-09 00:35:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:35:12 -==> Parameters: 11(Integer)
2020-11-09 00:35:12 -<==      Total: 1
2020-11-09 00:35:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:35:12 -==> Parameters: 12(Integer)
2020-11-09 00:35:12 -<==      Total: 1
2020-11-09 00:36:53 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:36:53 -==> Parameters: 2(Integer)
2020-11-09 00:36:53 -<==      Total: 1
2020-11-09 00:36:53 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 00:36:53 -==> Parameters: 2(Integer)
2020-11-09 00:36:53 -<==      Total: 3
2020-11-09 00:36:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:36:56 -==> Parameters: 2(Integer)
2020-11-09 00:36:56 -<==      Total: 1
2020-11-09 00:36:56 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 00:36:56 -==> Parameters: 2(Integer)
2020-11-09 00:36:56 -<==      Total: 1
2020-11-09 00:36:56 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 00:36:56 -==> Parameters: 2(Integer)
2020-11-09 00:36:56 -<==      Total: 2
2020-11-09 00:36:56 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 00:36:56 -==> Parameters: 2(Integer)
2020-11-09 00:36:56 -<==      Total: 3
2020-11-09 00:36:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:36:58 -==> Parameters: 2(Integer)
2020-11-09 00:36:58 -<==      Total: 1
2020-11-09 00:36:58 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 00:36:58 -==> Parameters: 2(Integer)
2020-11-09 00:36:58 -<==      Total: 0
2020-11-09 00:37:03 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:03 -==> Parameters: 2(Integer)
2020-11-09 00:37:03 -<==      Total: 1
2020-11-09 00:37:03 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 00:37:03 -==> Parameters: 6(Integer)
2020-11-09 00:37:03 -<==      Total: 3
2020-11-09 00:37:05 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 00:37:05 -==> Parameters: 5(Integer)
2020-11-09 00:37:05 -<==      Total: 1
2020-11-09 00:37:05 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 00:37:05 -==> Parameters: 5(Integer)
2020-11-09 00:37:05 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 00:37:05 -==> Parameters: 5(Integer)
2020-11-09 00:37:05 -<==      Total: 0
2020-11-09 00:37:05 -<==      Total: 2
2020-11-09 00:37:05 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 00:37:05 -==> Parameters: 5(Integer)
2020-11-09 00:37:05 -<==      Total: 1
2020-11-09 00:37:05 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 00:37:05 -==> Parameters: 6(Integer)
2020-11-09 00:37:05 -<==      Total: 1
2020-11-09 00:37:05 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 00:37:05 -==> Parameters: 6(Integer)
2020-11-09 00:37:05 -<==      Total: 2
2020-11-09 00:37:05 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:05 -==> Parameters: 11(Integer)
2020-11-09 00:37:05 -<==      Total: 1
2020-11-09 00:37:05 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:05 -==> Parameters: 12(Integer)
2020-11-09 00:37:05 -<==      Total: 1
2020-11-09 00:37:08 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 00:37:08 -==> Parameters: 6(Integer)
2020-11-09 00:37:08 -<==      Total: 1
2020-11-09 00:37:08 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 00:37:08 -==> Parameters: 6(Integer)
2020-11-09 00:37:08 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 00:37:08 -==> Parameters: 6(Integer)
2020-11-09 00:37:08 -<==      Total: 2
2020-11-09 00:37:08 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 00:37:08 -==> Parameters: 6(Integer)
2020-11-09 00:37:08 -<==      Total: 0
2020-11-09 00:37:08 -<==      Total: 1
2020-11-09 00:37:08 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 00:37:08 -==> Parameters: 6(Integer)
2020-11-09 00:37:08 -<==      Total: 1
2020-11-09 00:37:08 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 00:37:08 -==> Parameters: 6(Integer)
2020-11-09 00:37:08 -<==      Total: 2
2020-11-09 00:37:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:08 -==> Parameters: 11(Integer)
2020-11-09 00:37:08 -<==      Total: 1
2020-11-09 00:37:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:08 -==> Parameters: 12(Integer)
2020-11-09 00:37:08 -<==      Total: 1
2020-11-09 00:37:11 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 00:37:11 -==> Parameters: 4(Integer)
2020-11-09 00:37:11 -<==      Total: 1
2020-11-09 00:37:11 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 00:37:11 -==> Parameters: 4(Integer)
2020-11-09 00:37:11 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 00:37:11 -==> Parameters: 4(Integer)
2020-11-09 00:37:11 -<==      Total: 0
2020-11-09 00:37:11 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 00:37:11 -==> Parameters: 4(Integer)
2020-11-09 00:37:11 -<==      Total: 1
2020-11-09 00:37:11 -<==      Total: 1
2020-11-09 00:37:11 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 00:37:11 -==> Parameters: 6(Integer)
2020-11-09 00:37:11 -<==      Total: 1
2020-11-09 00:37:11 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 00:37:11 -==> Parameters: 6(Integer)
2020-11-09 00:37:11 -<==      Total: 2
2020-11-09 00:37:11 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:11 -==> Parameters: 11(Integer)
2020-11-09 00:37:11 -<==      Total: 1
2020-11-09 00:37:11 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:11 -==> Parameters: 12(Integer)
2020-11-09 00:37:11 -<==      Total: 1
2020-11-09 00:37:15 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:15 -==> Parameters: 2(Integer)
2020-11-09 00:37:15 -<==      Total: 1
2020-11-09 00:37:15 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 00:37:15 -==> Parameters: 3(Integer)
2020-11-09 00:37:15 -<==      Total: 1
2020-11-09 00:37:15 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 00:37:15 -==> Parameters: 3(Integer)
2020-11-09 00:37:15 -<==      Total: 2
2020-11-09 00:37:15 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 00:37:15 -==> Parameters: 3(Integer)
2020-11-09 00:37:15 -<==      Total: 5
2020-11-09 00:37:17 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:17 -==> Parameters: 2(Integer)
2020-11-09 00:37:18 -<==      Total: 1
2020-11-09 00:37:18 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 00:37:18 -==> Parameters: 4(Integer)
2020-11-09 00:37:18 -<==      Total: 1
2020-11-09 00:37:18 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 00:37:18 -==> Parameters: 4(Integer)
2020-11-09 00:37:18 -<==      Total: 0
2020-11-09 00:37:18 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 00:37:18 -==> Parameters: 4(Integer)
2020-11-09 00:37:18 -<==      Total: 0
2020-11-09 00:37:19 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:19 -==> Parameters: 2(Integer)
2020-11-09 00:37:19 -<==      Total: 1
2020-11-09 00:37:19 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 00:37:19 -==> Parameters: 3(Integer)
2020-11-09 00:37:19 -<==      Total: 1
2020-11-09 00:37:19 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 00:37:19 -==> Parameters: 3(Integer)
2020-11-09 00:37:19 -<==      Total: 2
2020-11-09 00:37:19 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 00:37:19 -==> Parameters: 3(Integer)
2020-11-09 00:37:19 -<==      Total: 5
2020-11-09 00:37:20 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:20 -==> Parameters: 2(Integer)
2020-11-09 00:37:20 -<==      Total: 1
2020-11-09 00:37:20 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 00:37:20 -==> Parameters: 2(Integer)
2020-11-09 00:37:20 -<==      Total: 1
2020-11-09 00:37:20 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 00:37:20 -==> Parameters: 2(Integer)
2020-11-09 00:37:20 -<==      Total: 2
2020-11-09 00:37:20 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 00:37:20 -==> Parameters: 2(Integer)
2020-11-09 00:37:20 -<==      Total: 3
2020-11-09 00:37:39 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 00:37:39 -==> Parameters: 3304701807@qq.com(String)
2020-11-09 00:37:40 -<==      Total: 1
2020-11-09 00:37:40 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 00:37:40 -==> Parameters: 3304701807@qq.com(String)
2020-11-09 00:37:40 -<==      Total: 1
2020-11-09 00:37:50 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 00:37:50 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 00:37:50 -<==      Total: 1
2020-11-09 00:37:50 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 00:37:50 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 00:37:50 -<==      Total: 1
2020-11-09 00:37:53 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:53 -==> Parameters: 2(Integer)
2020-11-09 00:37:53 -<==      Total: 1
2020-11-09 00:37:53 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 00:37:53 -==> Parameters: 2(Integer)
2020-11-09 00:37:53 -<==      Total: 3
2020-11-09 00:37:55 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:55 -==> Parameters: 2(Integer)
2020-11-09 00:37:55 -<==      Total: 1
2020-11-09 00:37:55 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 00:37:55 -==> Parameters: 2(Integer)
2020-11-09 00:37:55 -<==      Total: 1
2020-11-09 00:37:55 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 00:37:55 -==> Parameters: 2(Integer)
2020-11-09 00:37:55 -<==      Total: 2
2020-11-09 00:37:55 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 00:37:55 -==> Parameters: 2(Integer)
2020-11-09 00:37:56 -<==      Total: 3
2020-11-09 00:37:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:37:56 -==> Parameters: 2(Integer)
2020-11-09 00:37:56 -<==      Total: 1
2020-11-09 00:37:56 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 00:37:56 -==> Parameters: 3(Integer)
2020-11-09 00:37:56 -<==      Total: 1
2020-11-09 00:37:56 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 00:37:56 -==> Parameters: 3(Integer)
2020-11-09 00:37:56 -<==      Total: 2
2020-11-09 00:37:56 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 00:37:56 -==> Parameters: 3(Integer)
2020-11-09 00:37:56 -<==      Total: 5
2020-11-09 00:38:02 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:38:02 -==> Parameters: 2(Integer)
2020-11-09 00:38:02 -<==      Total: 1
2020-11-09 00:38:02 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 00:38:02 -==> Parameters: 2(Integer)
2020-11-09 00:38:02 -<==      Total: 1
2020-11-09 00:38:02 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 00:38:02 -==> Parameters: 2(Integer)
2020-11-09 00:38:02 -<==      Total: 2
2020-11-09 00:38:02 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 00:38:02 -==> Parameters: 2(Integer)
2020-11-09 00:38:02 -<==      Total: 3
2020-11-09 00:38:04 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:38:04 -==> Parameters: 2(Integer)
2020-11-09 00:38:04 -<==      Total: 1
2020-11-09 00:38:04 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 00:38:04 -==> Parameters: 3(Integer)
2020-11-09 00:38:04 -<==      Total: 1
2020-11-09 00:38:04 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 00:38:04 -==> Parameters: 3(Integer)
2020-11-09 00:38:04 -<==      Total: 2
2020-11-09 00:38:04 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 00:38:04 -==> Parameters: 3(Integer)
2020-11-09 00:38:04 -<==      Total: 5
2020-11-09 00:38:06 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:38:06 -==> Parameters: 2(Integer)
2020-11-09 00:38:06 -<==      Total: 1
2020-11-09 00:38:06 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 00:38:06 -==> Parameters: 2(Integer)
2020-11-09 00:38:06 -<==      Total: 1
2020-11-09 00:38:06 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 00:38:06 -==> Parameters: 2(Integer)
2020-11-09 00:38:06 -<==      Total: 2
2020-11-09 00:38:06 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 00:38:06 -==> Parameters: 2(Integer)
2020-11-09 00:38:06 -<==      Total: 3
2020-11-09 00:38:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 00:38:08 -==> Parameters: 2(Integer)
2020-11-09 00:38:08 -<==      Total: 1
2020-11-09 00:38:08 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 00:38:08 -==> Parameters: 6(Integer)
2020-11-09 00:38:09 -<==      Total: 3
2020-11-09 01:00:08 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:00:08 -==> Parameters: 4(Integer)
2020-11-09 01:00:08 -<==      Total: 1
2020-11-09 01:00:08 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:00:08 -==> Parameters: 6(Integer)
2020-11-09 01:00:08 -<==      Total: 1
2020-11-09 01:00:08 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:00:08 -==> Parameters: 6(Integer)
2020-11-09 01:00:08 -<==      Total: 2
2020-11-09 01:00:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:08 -==> Parameters: 11(Integer)
2020-11-09 01:00:08 -<==      Total: 1
2020-11-09 01:00:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:08 -==> Parameters: 12(Integer)
2020-11-09 01:00:08 -<==      Total: 1
2020-11-09 01:00:16 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 01:00:16 -==> Parameters: 5(Integer)
2020-11-09 01:00:16 -<==      Total: 2
2020-11-09 01:00:16 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:00:16 -==> Parameters: 5(Integer)
2020-11-09 01:00:16 -<==      Total: 1
2020-11-09 01:00:16 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:00:16 -==> Parameters: 6(Integer)
2020-11-09 01:00:16 -<==      Total: 1
2020-11-09 01:00:16 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:00:16 -==> Parameters: 6(Integer)
2020-11-09 01:00:16 -<==      Total: 2
2020-11-09 01:00:16 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:16 -==> Parameters: 11(Integer)
2020-11-09 01:00:16 -<==      Total: 1
2020-11-09 01:00:16 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:16 -==> Parameters: 12(Integer)
2020-11-09 01:00:17 -<==      Total: 1
2020-11-09 01:00:17 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:00:17 -==> Parameters: 5(Integer)
2020-11-09 01:00:17 -<==      Total: 1
2020-11-09 01:00:17 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 01:00:17 -==> Parameters: 5(Integer)
2020-11-09 01:00:17 -<==      Total: 0
2020-11-09 01:00:20 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:00:20 -==> Parameters: 6(Integer)
2020-11-09 01:00:20 -<==      Total: 1
2020-11-09 01:00:20 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 01:00:20 -==> Parameters: 6(Integer)
2020-11-09 01:00:20 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 01:00:20 -==> Parameters: 6(Integer)
2020-11-09 01:00:20 -<==      Total: 2
2020-11-09 01:00:20 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:00:20 -==> Parameters: 6(Integer)
2020-11-09 01:00:20 -<==      Total: 0
2020-11-09 01:00:20 -<==      Total: 1
2020-11-09 01:00:20 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:00:20 -==> Parameters: 6(Integer)
2020-11-09 01:00:20 -<==      Total: 1
2020-11-09 01:00:20 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:00:20 -==> Parameters: 6(Integer)
2020-11-09 01:00:20 -<==      Total: 2
2020-11-09 01:00:20 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:20 -==> Parameters: 11(Integer)
2020-11-09 01:00:20 -<==      Total: 1
2020-11-09 01:00:20 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:20 -==> Parameters: 12(Integer)
2020-11-09 01:00:20 -<==      Total: 1
2020-11-09 01:00:27 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:00:27 -==> Parameters: 5(Integer)
2020-11-09 01:00:27 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 01:00:27 -==> Parameters: 5(Integer)
2020-11-09 01:00:27 -<==      Total: 1
2020-11-09 01:00:27 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 01:00:27 -==> Parameters: 5(Integer)
2020-11-09 01:00:27 -<==      Total: 2
2020-11-09 01:00:27 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:00:27 -==> Parameters: 5(Integer)
2020-11-09 01:00:27 -<==      Total: 0
2020-11-09 01:00:27 -<==      Total: 1
2020-11-09 01:00:27 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:00:27 -==> Parameters: 6(Integer)
2020-11-09 01:00:27 -<==      Total: 1
2020-11-09 01:00:27 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:00:27 -==> Parameters: 6(Integer)
2020-11-09 01:00:27 -<==      Total: 2
2020-11-09 01:00:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:27 -==> Parameters: 11(Integer)
2020-11-09 01:00:27 -<==      Total: 1
2020-11-09 01:00:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:27 -==> Parameters: 12(Integer)
2020-11-09 01:00:27 -<==      Total: 1
2020-11-09 01:00:32 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 01:00:32 -==> Parameters: 4(Integer)
2020-11-09 01:00:32 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:00:32 -==> Parameters: 4(Integer)
2020-11-09 01:00:32 -<==      Total: 0
2020-11-09 01:00:32 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:00:32 -<==      Total: 1
2020-11-09 01:00:32 -==> Parameters: 4(Integer)
2020-11-09 01:00:32 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 01:00:32 -==> Parameters: 4(Integer)
2020-11-09 01:00:32 -<==      Total: 1
2020-11-09 01:00:32 -<==      Total: 1
2020-11-09 01:00:32 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:00:32 -==> Parameters: 6(Integer)
2020-11-09 01:00:32 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:00:32 -==> Parameters: 4(Integer)
2020-11-09 01:00:32 -<==      Total: 1
2020-11-09 01:00:32 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:00:32 -==> Parameters: 6(Integer)
2020-11-09 01:00:32 -<==      Total: 1
2020-11-09 01:00:32 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 01:00:32 -==> Parameters: 4(Integer)
2020-11-09 01:00:32 -<==      Total: 2
2020-11-09 01:00:32 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:32 -==> Parameters: 11(Integer)
2020-11-09 01:00:32 -<==      Total: 1
2020-11-09 01:00:32 -<==      Total: 1
2020-11-09 01:00:32 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:32 -==> Parameters: 12(Integer)
2020-11-09 01:00:32 -<==      Total: 1
2020-11-09 01:00:32 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 01:00:32 -==> Parameters: 4(Integer)
2020-11-09 01:00:32 -<==      Total: 0
2020-11-09 01:00:32 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:00:32 -==> Parameters: 4(Integer)
2020-11-09 01:00:32 -<==      Total: 1
2020-11-09 01:00:32 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:00:32 -==> Parameters: 6(Integer)
2020-11-09 01:00:33 -<==      Total: 1
2020-11-09 01:00:33 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:00:33 -==> Parameters: 6(Integer)
2020-11-09 01:00:33 -<==      Total: 2
2020-11-09 01:00:33 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:33 -==> Parameters: 11(Integer)
2020-11-09 01:00:33 -<==      Total: 1
2020-11-09 01:00:33 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:00:33 -==> Parameters: 12(Integer)
2020-11-09 01:00:33 -<==      Total: 1
2020-11-09 01:01:15 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:01:15 -==> Parameters: 4(Integer)
2020-11-09 01:01:15 -<==      Total: 1
2020-11-09 01:01:15 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 01:01:15 -==> Parameters: 4(Integer)
2020-11-09 01:01:15 -<==      Total: 1
2020-11-09 01:01:17 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:01:17 -==> Parameters: 4(Integer)
2020-11-09 01:01:17 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 01:01:17 -==> Parameters: 4(Integer)
2020-11-09 01:01:17 -<==      Total: 1
2020-11-09 01:01:17 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 01:01:17 -==> Parameters: 4(Integer)
2020-11-09 01:01:17 -<==      Total: 0
2020-11-09 01:01:17 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:01:17 -==> Parameters: 4(Integer)
2020-11-09 01:01:17 -<==      Total: 1
2020-11-09 01:01:17 -<==      Total: 1
2020-11-09 01:01:17 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:01:17 -==> Parameters: 6(Integer)
2020-11-09 01:01:17 -<==      Total: 1
2020-11-09 01:01:17 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:01:17 -==> Parameters: 6(Integer)
2020-11-09 01:01:17 -<==      Total: 2
2020-11-09 01:01:17 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:01:17 -==> Parameters: 11(Integer)
2020-11-09 01:01:17 -<==      Total: 1
2020-11-09 01:01:17 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:01:17 -==> Parameters: 12(Integer)
2020-11-09 01:01:17 -<==      Total: 1
2020-11-09 01:01:17 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:01:17 -==> Parameters: 2(Integer)
2020-11-09 01:01:17 -<==      Total: 1
2020-11-09 01:01:17 -Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2020-11-09 01:01:19 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:01:19 -==> Parameters: 4(Integer)
2020-11-09 01:01:19 -<==      Total: 1
2020-11-09 01:01:19 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:01:19 -==> Parameters: 6(Integer)
2020-11-09 01:01:19 -<==      Total: 1
2020-11-09 01:01:19 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:01:19 -==> Parameters: 6(Integer)
2020-11-09 01:01:19 -<==      Total: 2
2020-11-09 01:01:19 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:01:19 -==> Parameters: 11(Integer)
2020-11-09 01:01:19 -<==      Total: 1
2020-11-09 01:01:19 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:01:19 -==> Parameters: 12(Integer)
2020-11-09 01:01:19 -<==      Total: 1
2020-11-09 01:02:12 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:02:12 -==> Parameters: 4(Integer)
2020-11-09 01:02:12 -<==      Total: 1
2020-11-09 01:02:12 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:02:12 -==> Parameters: 6(Integer)
2020-11-09 01:02:12 -<==      Total: 1
2020-11-09 01:02:12 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:02:12 -==> Parameters: 6(Integer)
2020-11-09 01:02:12 -<==      Total: 2
2020-11-09 01:02:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:02:12 -==> Parameters: 11(Integer)
2020-11-09 01:02:12 -<==      Total: 1
2020-11-09 01:02:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:02:12 -==> Parameters: 12(Integer)
2020-11-09 01:02:12 -<==      Total: 1
2020-11-09 01:03:27 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Sun Nov 08 19:01:35 CST 2020]; root of context hierarchy
2020-11-09 01:03:27 -Unregistering JMX-exposed beans on shutdown
2020-11-09 01:03:35 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 24873 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 01:03:35 -No active profile set, falling back to default profiles: default
2020-11-09 01:03:35 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 01:03:35 CST 2020]; root of context hierarchy
2020-11-09 01:03:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 01:03:36 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 01:03:36 -Root WebApplicationContext: initialization completed in 1120 ms
2020-11-09 01:03:36 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 01:03:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 01:03:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 01:03:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 01:03:36 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 01:03:37 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 01:03:35 CST 2020]; root of context hierarchy
2020-11-09 01:03:37 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 01:03:37 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 01:03:37 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 01:03:37 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 01:03:37 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 01:03:37 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 01:03:37 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 01:03:37 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 01:03:37 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 01:03:37 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 01:03:37 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 01:03:37 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 01:03:37 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 01:03:37 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 01:03:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 01:03:37 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 01:03:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 01:03:37 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 01:03:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 01:03:37 -Registering beans for JMX exposure on startup
2020-11-09 01:03:37 -Tomcat started on port(s): 8080 (http)
2020-11-09 01:03:37 -Started SpringBootUserApplication in 2.342 seconds (JVM running for 2.807)
2020-11-09 01:04:54 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 01:04:54 -FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2020-11-09 01:04:58 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:04:58 -==> Parameters: 4(Integer)
2020-11-09 01:04:58 -<==      Total: 1
2020-11-09 01:04:58 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:04:58 -==> Parameters: 6(Integer)
2020-11-09 01:04:58 -<==      Total: 1
2020-11-09 01:04:58 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:04:58 -==> Parameters: 6(Integer)
2020-11-09 01:04:58 -<==      Total: 2
2020-11-09 01:04:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:04:58 -==> Parameters: 11(Integer)
2020-11-09 01:04:58 -<==      Total: 1
2020-11-09 01:04:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:04:58 -==> Parameters: 12(Integer)
2020-11-09 01:04:58 -<==      Total: 1
2020-11-09 01:04:59 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:04:59 -==> Parameters: 4(Integer)
2020-11-09 01:04:59 -<==      Total: 1
2020-11-09 01:04:59 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:04:59 -==> Parameters: 6(Integer)
2020-11-09 01:04:59 -<==      Total: 1
2020-11-09 01:04:59 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:04:59 -==> Parameters: 6(Integer)
2020-11-09 01:04:59 -<==      Total: 2
2020-11-09 01:04:59 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:04:59 -==> Parameters: 11(Integer)
2020-11-09 01:04:59 -<==      Total: 1
2020-11-09 01:04:59 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:04:59 -==> Parameters: 12(Integer)
2020-11-09 01:04:59 -<==      Total: 1
2020-11-09 01:14:04 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:14:04 -==> Parameters: 4(Integer)
2020-11-09 01:14:04 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 01:14:04 -==> Parameters: 4(Integer)
2020-11-09 01:14:04 -<==      Total: 1
2020-11-09 01:14:04 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 01:14:04 -==> Parameters: 4(Integer)
2020-11-09 01:14:04 -<==      Total: 0
2020-11-09 01:14:04 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:14:04 -==> Parameters: 4(Integer)
2020-11-09 01:14:04 -<==      Total: 1
2020-11-09 01:14:04 -<==      Total: 1
2020-11-09 01:14:04 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:14:04 -==> Parameters: 6(Integer)
2020-11-09 01:14:04 -<==      Total: 1
2020-11-09 01:14:04 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 01:14:04 -==> Parameters: 6(Integer)
2020-11-09 01:14:04 -<==      Total: 2
2020-11-09 01:14:04 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:14:04 -==> Parameters: 11(Integer)
2020-11-09 01:14:04 -<==      Total: 1
2020-11-09 01:14:04 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 01:14:04 -==> Parameters: 12(Integer)
2020-11-09 01:14:04 -<==      Total: 1
2020-11-09 01:54:09 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 01:03:35 CST 2020]; root of context hierarchy
2020-11-09 01:54:09 -Unregistering JMX-exposed beans on shutdown
2020-11-09 01:54:13 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 25717 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 01:54:13 -No active profile set, falling back to default profiles: default
2020-11-09 01:54:13 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 01:54:13 CST 2020]; root of context hierarchy
2020-11-09 01:54:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 01:54:14 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 01:54:14 -Root WebApplicationContext: initialization completed in 1033 ms
2020-11-09 01:54:14 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 01:54:14 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 01:54:14 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 01:54:14 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 01:54:14 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 01:54:15 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 01:54:13 CST 2020]; root of context hierarchy
2020-11-09 01:54:15 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 01:54:15 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 01:54:15 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 01:54:15 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 01:54:15 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 01:54:15 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 01:54:15 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 01:54:15 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 01:54:15 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 01:54:15 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 01:54:15 -Mapped "{[/tch/uploadTaskScore],methods=[POST]}" onto public void cn.org.test.controller.TeacherController.uploadTaskScore(java.lang.Integer,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 01:54:15 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 01:54:15 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 01:54:15 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 01:54:15 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 01:54:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 01:54:15 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 01:54:15 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 01:54:15 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 01:54:15 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 01:54:15 -Registering beans for JMX exposure on startup
2020-11-09 01:54:15 -Tomcat started on port(s): 8080 (http)
2020-11-09 01:54:15 -Started SpringBootUserApplication in 2.242 seconds (JVM running for 2.656)
2020-11-09 01:54:42 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 01:54:42 -FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
2020-11-09 01:54:42 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.multipart.MultipartException: Current request is not a multipart request] with root cause
org.springframework.web.multipart.MultipartException: Current request is not a multipart request
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:190)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:109)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 01:55:33 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:55:33 -==> Parameters: 6(Integer)
2020-11-09 01:55:33 -<==      Total: 1
2020-11-09 01:55:33 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:55:33 -==> Parameters: 6(Integer)
2020-11-09 01:55:33 -<==      Total: 1
2020-11-09 01:55:33 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.alibaba.excel.exception.ExcelAnalysisException: com.alibaba.excel.exception.ExcelDataConvertException: Convert data MF20320102 to class java.lang.Integer error ] with root cause
java.lang.NumberFormatException: For input string: "MF20320102"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.valueOf(Integer.java:766)
	at com.alibaba.excel.util.NumberUtils.parseInteger(NumberUtils.java:90)
	at com.alibaba.excel.converters.integer.IntegerStringConverter.convertToJavaData(IntegerStringConverter.java:32)
	at com.alibaba.excel.converters.integer.IntegerStringConverter.convertToJavaData(IntegerStringConverter.java:17)
	at com.alibaba.excel.util.ConverterUtils.doConvertToJavaObject(ConverterUtils.java:133)
	at com.alibaba.excel.util.ConverterUtils.convertToJavaObject(ConverterUtils.java:103)
	at com.alibaba.excel.read.listener.ModelBuildEventListener.buildUserModel(ModelBuildEventListener.java:123)
	at com.alibaba.excel.read.listener.ModelBuildEventListener.invoke(ModelBuildEventListener.java:38)
	at com.alibaba.excel.read.listener.ModelBuildEventListener.invoke(ModelBuildEventListener.java:28)
	at com.alibaba.excel.read.processor.DefaultAnalysisEventProcessor.dealData(DefaultAnalysisEventProcessor.java:100)
	at com.alibaba.excel.read.processor.DefaultAnalysisEventProcessor.endRow(DefaultAnalysisEventProcessor.java:47)
	at com.alibaba.excel.analysis.v07.handlers.RowTagHandler.endElement(RowTagHandler.java:47)
	at com.alibaba.excel.analysis.v07.handlers.sax.XlsxRowHandler.endElement(XlsxRowHandler.java:89)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:609)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEndElement(XMLDocumentFragmentScannerImpl.java:1782)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2967)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:842)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:771)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.parseXmlSource(XlsxSaxAnalyser.java:178)
	at com.alibaba.excel.analysis.v07.XlsxSaxAnalyser.execute(XlsxSaxAnalyser.java:201)
	at com.alibaba.excel.analysis.ExcelAnalyserImpl.analysis(ExcelAnalyserImpl.java:115)
	at com.alibaba.excel.ExcelReader.read(ExcelReader.java:182)
	at com.alibaba.excel.ExcelReader.read(ExcelReader.java:172)
	at com.alibaba.excel.read.builder.ExcelReaderSheetBuilder.doRead(ExcelReaderSheetBuilder.java:65)
	at cn.org.test.controller.TeacherController.uploadTaskScore(TeacherController.java:309)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 01:57:10 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 01:54:13 CST 2020]; root of context hierarchy
2020-11-09 01:57:10 -Unregistering JMX-exposed beans on shutdown
2020-11-09 01:57:14 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 26175 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 01:57:14 -No active profile set, falling back to default profiles: default
2020-11-09 01:57:14 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 01:57:14 CST 2020]; root of context hierarchy
2020-11-09 01:57:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 01:57:15 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 01:57:15 -Root WebApplicationContext: initialization completed in 1213 ms
2020-11-09 01:57:15 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 01:57:15 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 01:57:15 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 01:57:15 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 01:57:15 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 01:57:16 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 01:57:14 CST 2020]; root of context hierarchy
2020-11-09 01:57:16 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 01:57:16 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 01:57:16 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 01:57:16 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 01:57:16 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 01:57:16 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 01:57:16 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 01:57:16 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 01:57:16 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 01:57:16 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 01:57:16 -Mapped "{[/tch/uploadTaskScore],methods=[POST]}" onto public void cn.org.test.controller.TeacherController.uploadTaskScore(java.lang.Integer,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 01:57:16 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 01:57:16 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 01:57:16 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 01:57:16 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 01:57:16 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 01:57:16 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 01:57:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 01:57:16 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 01:57:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 01:57:16 -Registering beans for JMX exposure on startup
2020-11-09 01:57:16 -Tomcat started on port(s): 8080 (http)
2020-11-09 01:57:16 -Started SpringBootUserApplication in 2.529 seconds (JVM running for 3.11)
2020-11-09 01:57:19 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 01:57:19 -FrameworkServlet 'dispatcherServlet': initialization completed in 13 ms
2020-11-09 01:57:22 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 01:57:22 -==> Parameters: 6(Integer)
2020-11-09 01:57:22 -<==      Total: 1
2020-11-09 01:57:22 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 01:57:22 -==> Parameters: 6(Integer)
2020-11-09 01:57:23 -<==      Total: 1
2020-11-09 01:57:23 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":3,"userId":"MF20320102"}
2020-11-09 01:57:23 -解析到一条数据:{"id":12,"name":"ddd","score":4,"userId":"MF20123232"}
2020-11-09 01:57:23 -2条数据，开始存储数据库！
2020-11-09 01:57:23 -存储数据库成功！
2020-11-09 01:57:23 -所有数据解析完成！
2020-11-09 02:07:04 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 01:57:14 CST 2020]; root of context hierarchy
2020-11-09 02:07:04 -Unregistering JMX-exposed beans on shutdown
2020-11-09 02:07:07 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 26427 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 02:07:07 -No active profile set, falling back to default profiles: default
2020-11-09 02:07:07 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:07:07 CST 2020]; root of context hierarchy
2020-11-09 02:07:07 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 02:07:08 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 02:07:08 -Root WebApplicationContext: initialization completed in 1028 ms
2020-11-09 02:07:08 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 02:07:08 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 02:07:08 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 02:07:08 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 02:07:08 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 02:07:09 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:07:07 CST 2020]; root of context hierarchy
2020-11-09 02:07:09 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 02:07:09 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 02:07:09 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 02:07:09 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 02:07:09 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 02:07:09 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 02:07:09 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 02:07:09 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 02:07:09 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 02:07:09 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 02:07:09 -Mapped "{[/tch/uploadTaskScore],methods=[POST]}" onto public void cn.org.test.controller.TeacherController.uploadTaskScore(java.lang.Integer,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 02:07:09 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 02:07:09 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 02:07:09 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 02:07:09 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 02:07:09 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:07:09 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 02:07:09 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:07:09 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:07:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:07:09 -Registering beans for JMX exposure on startup
2020-11-09 02:07:09 -Tomcat started on port(s): 8080 (http)
2020-11-09 02:07:09 -Started SpringBootUserApplication in 2.164 seconds (JVM running for 2.561)
2020-11-09 02:07:14 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 02:07:14 -FrameworkServlet 'dispatcherServlet': initialization completed in 14 ms
2020-11-09 02:07:17 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:07:17 -==> Parameters: 6(Integer)
2020-11-09 02:07:18 -<==      Total: 1
2020-11-09 02:07:18 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:07:18 -==> Parameters: 6(Integer)
2020-11-09 02:07:18 -<==      Total: 1
2020-11-09 02:07:18 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":3,"userId":"MF20320102"}
2020-11-09 02:07:18 -解析到一条数据:{"id":12,"name":"ddd","score":4,"userId":"MF20123232"}
2020-11-09 02:07:18 -2条数据，开始存储数据库！
2020-11-09 02:07:18 -==>  Preparing: INSERT into scoreReport(taskId,classId,studentId,score) values(?,?, ?, ?) 
2020-11-09 02:07:18 -==> Parameters: 6(Integer), 6(Integer), 11(Integer), 3(Integer)
2020-11-09 02:07:18 -<==    Updates: 1
2020-11-09 02:07:18 -==>  Preparing: INSERT into scoreReport(taskId,classId,studentId,score) values(?,?, ?, ?) 
2020-11-09 02:07:18 -==> Parameters: 6(Integer), 6(Integer), 12(Integer), 4(Integer)
2020-11-09 02:07:18 -<==    Updates: 1
2020-11-09 02:07:18 -存储数据库成功！
2020-11-09 02:07:18 -所有数据解析完成！
2020-11-09 02:12:59 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:07:07 CST 2020]; root of context hierarchy
2020-11-09 02:12:59 -Unregistering JMX-exposed beans on shutdown
2020-11-09 02:13:02 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 26638 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 02:13:02 -No active profile set, falling back to default profiles: default
2020-11-09 02:13:02 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:13:02 CST 2020]; root of context hierarchy
2020-11-09 02:13:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 02:13:03 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 02:13:04 -Root WebApplicationContext: initialization completed in 1228 ms
2020-11-09 02:13:04 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 02:13:04 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 02:13:04 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 02:13:04 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 02:13:04 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 02:13:04 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:13:02 CST 2020]; root of context hierarchy
2020-11-09 02:13:04 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 02:13:04 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 02:13:04 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 02:13:04 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 02:13:04 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 02:13:04 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 02:13:04 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 02:13:04 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 02:13:04 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 02:13:04 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 02:13:04 -Mapped "{[/tch/uploadTaskScore],methods=[POST]}" onto public void cn.org.test.controller.TeacherController.uploadTaskScore(java.lang.Integer,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 02:13:04 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 02:13:04 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 02:13:04 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 02:13:04 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 02:13:04 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:13:04 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 02:13:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:13:04 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:13:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:13:05 -Registering beans for JMX exposure on startup
2020-11-09 02:13:05 -Tomcat started on port(s): 8080 (http)
2020-11-09 02:13:05 -Started SpringBootUserApplication in 2.613 seconds (JVM running for 3.023)
2020-11-09 02:13:07 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 02:13:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 9 ms
2020-11-09 02:13:11 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:13:11 -==> Parameters: 6(Integer)
2020-11-09 02:13:11 -<==      Total: 1
2020-11-09 02:13:11 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:13:11 -==> Parameters: 6(Integer)
2020-11-09 02:13:11 -<==      Total: 1
2020-11-09 02:13:11 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":3,"userId":"MF20320102"}
2020-11-09 02:13:11 -解析到一条数据:{"id":12,"name":"ddd","score":4,"userId":"MF20123232"}
2020-11-09 02:13:11 -2条数据，开始存储数据库！
2020-11-09 02:13:11 -==>  Preparing: INSERT into scoreReport(taskId,classId,studentId,score) values(?,?, ?, ?) 
2020-11-09 02:13:11 -==> Parameters: 6(Integer), 6(Integer), 11(Integer), 3(Integer)
2020-11-09 02:13:11 -<==    Updates: 1
2020-11-09 02:13:11 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:13:11 -==> Parameters: 3(Integer), 6(Integer), 11(Integer)
2020-11-09 02:13:11 -<==    Updates: 1
2020-11-09 02:13:11 -==>  Preparing: INSERT into scoreReport(taskId,classId,studentId,score) values(?,?, ?, ?) 
2020-11-09 02:13:11 -==> Parameters: 6(Integer), 6(Integer), 12(Integer), 4(Integer)
2020-11-09 02:13:12 -<==    Updates: 1
2020-11-09 02:13:12 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:13:12 -==> Parameters: 4(Integer), 6(Integer), 12(Integer)
2020-11-09 02:13:12 -<==    Updates: 1
2020-11-09 02:13:12 -存储数据库成功！
2020-11-09 02:13:12 -所有数据解析完成！
2020-11-09 02:19:46 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:13:02 CST 2020]; root of context hierarchy
2020-11-09 02:19:46 -Unregistering JMX-exposed beans on shutdown
2020-11-09 02:19:49 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 26839 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 02:19:49 -No active profile set, falling back to default profiles: default
2020-11-09 02:19:49 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:19:49 CST 2020]; root of context hierarchy
2020-11-09 02:19:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 02:19:50 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 02:19:50 -Root WebApplicationContext: initialization completed in 1110 ms
2020-11-09 02:19:51 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 02:19:51 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 02:19:51 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 02:19:51 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 02:19:51 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 02:19:51 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:19:49 CST 2020]; root of context hierarchy
2020-11-09 02:19:51 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 02:19:51 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 02:19:51 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 02:19:51 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 02:19:51 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 02:19:51 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 02:19:51 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 02:19:51 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 02:19:51 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 02:19:51 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 02:19:51 -Mapped "{[/tch/uploadTaskScore],methods=[POST]}" onto public void cn.org.test.controller.TeacherController.uploadTaskScore(java.lang.Integer,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 02:19:51 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 02:19:51 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 02:19:51 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 02:19:51 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 02:19:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:19:51 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 02:19:51 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:19:51 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:19:51 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:19:51 -Registering beans for JMX exposure on startup
2020-11-09 02:19:51 -Tomcat started on port(s): 8080 (http)
2020-11-09 02:19:51 -Started SpringBootUserApplication in 2.232 seconds (JVM running for 2.634)
2020-11-09 02:20:33 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 02:20:33 -FrameworkServlet 'dispatcherServlet': initialization completed in 9 ms
2020-11-09 02:20:37 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:20:37 -==> Parameters: 6(Integer)
2020-11-09 02:20:37 -<==      Total: 1
2020-11-09 02:20:37 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:20:37 -==> Parameters: 6(Integer)
2020-11-09 02:20:37 -<==      Total: 1
2020-11-09 02:20:37 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":30,"userId":"MF20320102"}
2020-11-09 02:20:37 -解析到一条数据:{"id":12,"name":"ddd","score":30,"userId":"MF20123232"}
2020-11-09 02:20:37 -2条数据，开始存储数据库！
2020-11-09 02:20:37 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:20:37 -==> Parameters: 11(Integer), 6(Integer)
2020-11-09 02:20:37 -<==      Total: 1
2020-11-09 02:20:37 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:20:37 -==> Parameters: 30(Integer), 6(Integer), 11(Integer)
2020-11-09 02:20:37 -<==    Updates: 1
2020-11-09 02:20:37 -==>  Preparing: INSERT into scoreReport(taskId,classId,studentId,score) values(?,?, ?, ?) 
2020-11-09 02:20:37 -==> Parameters: 6(Integer), 6(Integer), 11(Integer), 30(Integer)
2020-11-09 02:20:37 -<==    Updates: 1
2020-11-09 02:20:37 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:20:37 -==> Parameters: 30(Integer), 6(Integer), 11(Integer)
2020-11-09 02:20:37 -<==    Updates: 1
2020-11-09 02:20:37 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:20:37 -==> Parameters: 12(Integer), 6(Integer)
2020-11-09 02:20:37 -<==      Total: 1
2020-11-09 02:20:37 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:20:37 -==> Parameters: 30(Integer), 6(Integer), 12(Integer)
2020-11-09 02:20:38 -<==    Updates: 1
2020-11-09 02:20:38 -==>  Preparing: INSERT into scoreReport(taskId,classId,studentId,score) values(?,?, ?, ?) 
2020-11-09 02:20:38 -==> Parameters: 6(Integer), 6(Integer), 12(Integer), 30(Integer)
2020-11-09 02:20:38 -<==    Updates: 1
2020-11-09 02:20:38 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:20:38 -==> Parameters: 30(Integer), 6(Integer), 12(Integer)
2020-11-09 02:20:38 -<==    Updates: 1
2020-11-09 02:20:38 -存储数据库成功！
2020-11-09 02:20:38 -所有数据解析完成！
2020-11-09 02:22:00 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:19:49 CST 2020]; root of context hierarchy
2020-11-09 02:22:00 -Unregistering JMX-exposed beans on shutdown
2020-11-09 02:22:03 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 27056 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 02:22:03 -No active profile set, falling back to default profiles: default
2020-11-09 02:22:03 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:22:03 CST 2020]; root of context hierarchy
2020-11-09 02:22:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 02:22:04 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 02:22:04 -Root WebApplicationContext: initialization completed in 971 ms
2020-11-09 02:22:04 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 02:22:04 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 02:22:04 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 02:22:04 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 02:22:04 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 02:22:05 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:22:03 CST 2020]; root of context hierarchy
2020-11-09 02:22:05 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 02:22:05 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 02:22:05 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 02:22:05 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 02:22:05 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 02:22:05 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 02:22:05 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 02:22:05 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 02:22:05 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 02:22:05 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 02:22:05 -Mapped "{[/tch/uploadTaskScore],methods=[POST]}" onto public void cn.org.test.controller.TeacherController.uploadTaskScore(java.lang.Integer,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 02:22:05 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 02:22:05 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 02:22:05 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 02:22:05 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 02:22:05 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:22:05 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 02:22:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:22:05 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:22:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:22:05 -Registering beans for JMX exposure on startup
2020-11-09 02:22:05 -Tomcat started on port(s): 8080 (http)
2020-11-09 02:22:05 -Started SpringBootUserApplication in 2.07 seconds (JVM running for 2.412)
2020-11-09 02:22:38 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 02:22:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
2020-11-09 02:22:41 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:22:41 -==> Parameters: 6(Integer)
2020-11-09 02:22:41 -<==      Total: 1
2020-11-09 02:22:41 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:22:41 -==> Parameters: 6(Integer)
2020-11-09 02:22:41 -<==      Total: 1
2020-11-09 02:22:41 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":30,"userId":"MF20320102"}
2020-11-09 02:22:41 -解析到一条数据:{"id":12,"name":"ddd","score":30,"userId":"MF20123232"}
2020-11-09 02:22:41 -2条数据，开始存储数据库！
2020-11-09 02:22:41 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:22:41 -==> Parameters: 11(Integer), 6(Integer)
2020-11-09 02:22:42 -<==      Total: 1
2020-11-09 02:22:42 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:22:42 -==> Parameters: 30(Integer), 6(Integer), 11(Integer)
2020-11-09 02:22:42 -<==    Updates: 1
2020-11-09 02:22:42 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:22:42 -==> Parameters: 30(Integer), 6(Integer), 11(Integer)
2020-11-09 02:22:42 -<==    Updates: 1
2020-11-09 02:22:42 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:22:42 -==> Parameters: 12(Integer), 6(Integer)
2020-11-09 02:22:42 -<==      Total: 1
2020-11-09 02:22:42 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:22:42 -==> Parameters: 30(Integer), 6(Integer), 12(Integer)
2020-11-09 02:22:42 -<==    Updates: 1
2020-11-09 02:22:42 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:22:42 -==> Parameters: 30(Integer), 6(Integer), 12(Integer)
2020-11-09 02:22:42 -<==    Updates: 1
2020-11-09 02:22:42 -存储数据库成功！
2020-11-09 02:22:42 -所有数据解析完成！
2020-11-09 02:23:47 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:23:47 -==> Parameters: 4(Integer)
2020-11-09 02:23:47 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:23:47 -==> Parameters: 4(Integer)
2020-11-09 02:23:47 -<==      Total: 1
2020-11-09 02:23:47 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:23:47 -==> Parameters: 4(Integer)
2020-11-09 02:23:47 -<==      Total: 0
2020-11-09 02:23:47 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:23:47 -==> Parameters: 4(Integer)
2020-11-09 02:23:47 -<==      Total: 1
2020-11-09 02:23:47 -<==      Total: 1
2020-11-09 02:23:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:23:47 -==> Parameters: 6(Integer)
2020-11-09 02:23:47 -<==      Total: 1
2020-11-09 02:23:47 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:23:47 -==> Parameters: 6(Integer)
2020-11-09 02:23:47 -<==      Total: 2
2020-11-09 02:23:47 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:23:47 -==> Parameters: 11(Integer)
2020-11-09 02:23:48 -<==      Total: 1
2020-11-09 02:23:48 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:23:48 -==> Parameters: 12(Integer)
2020-11-09 02:23:48 -<==      Total: 1
2020-11-09 02:24:18 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:24:18 -==> Parameters: 4(Integer)
2020-11-09 02:24:18 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:24:18 -==> Parameters: 4(Integer)
2020-11-09 02:24:18 -<==      Total: 1
2020-11-09 02:24:18 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:24:18 -==> Parameters: 4(Integer)
2020-11-09 02:24:18 -<==      Total: 0
2020-11-09 02:24:18 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:24:18 -==> Parameters: 4(Integer)
2020-11-09 02:24:18 -<==      Total: 1
2020-11-09 02:24:18 -<==      Total: 1
2020-11-09 02:24:18 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:24:18 -==> Parameters: 6(Integer)
2020-11-09 02:24:18 -<==      Total: 1
2020-11-09 02:24:18 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:24:18 -==> Parameters: 6(Integer)
2020-11-09 02:24:18 -<==      Total: 2
2020-11-09 02:24:18 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:24:18 -==> Parameters: 11(Integer)
2020-11-09 02:24:18 -<==      Total: 1
2020-11-09 02:24:18 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:24:18 -==> Parameters: 12(Integer)
2020-11-09 02:24:18 -<==      Total: 1
2020-11-09 02:24:24 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:24:24 -==> Parameters: 2(Integer)
2020-11-09 02:24:25 -<==      Total: 1
2020-11-09 02:24:25 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 02:24:34 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 02:24:34 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 02:24:35 -<==      Total: 1
2020-11-09 02:24:35 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 02:24:35 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 02:24:35 -<==      Total: 1
2020-11-09 02:24:40 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:24:40 -==> Parameters: 2(Integer)
2020-11-09 02:24:40 -<==      Total: 1
2020-11-09 02:24:40 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 02:24:40 -==> Parameters: 2(Integer)
2020-11-09 02:24:40 -<==      Total: 3
2020-11-09 02:24:42 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:24:42 -==> Parameters: 2(Integer)
2020-11-09 02:24:42 -<==      Total: 1
2020-11-09 02:24:42 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 02:24:42 -==> Parameters: 2(Integer)
2020-11-09 02:24:42 -<==      Total: 1
2020-11-09 02:24:42 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 02:24:42 -==> Parameters: 2(Integer)
2020-11-09 02:24:42 -<==      Total: 2
2020-11-09 02:24:42 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 02:24:42 -==> Parameters: 2(Integer)
2020-11-09 02:24:42 -<==      Total: 3
2020-11-09 02:24:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:24:45 -==> Parameters: 2(Integer)
2020-11-09 02:24:45 -<==      Total: 1
2020-11-09 02:24:45 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 02:24:45 -==> Parameters: 6(Integer)
2020-11-09 02:24:45 -<==      Total: 3
2020-11-09 02:24:49 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:24:49 -==> Parameters: 4(Integer)
2020-11-09 02:24:49 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:24:49 -==> Parameters: 4(Integer)
2020-11-09 02:24:49 -<==      Total: 0
2020-11-09 02:24:49 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:24:49 -==> Parameters: 4(Integer)
2020-11-09 02:24:49 -<==      Total: 1
2020-11-09 02:24:49 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:24:49 -==> Parameters: 4(Integer)
2020-11-09 02:24:49 -<==      Total: 1
2020-11-09 02:24:49 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:24:49 -==> Parameters: 6(Integer)
2020-11-09 02:24:49 -<==      Total: 1
2020-11-09 02:24:49 -<==      Total: 1
2020-11-09 02:24:49 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:24:49 -==> Parameters: 6(Integer)
2020-11-09 02:24:49 -<==      Total: 2
2020-11-09 02:24:49 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:24:49 -==> Parameters: 11(Integer)
2020-11-09 02:24:49 -<==      Total: 1
2020-11-09 02:24:49 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:24:49 -==> Parameters: 12(Integer)
2020-11-09 02:24:49 -<==      Total: 1
2020-11-09 02:24:56 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:24:56 -==> Parameters: 5(Integer)
2020-11-09 02:24:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:24:56 -==> Parameters: 5(Integer)
2020-11-09 02:24:56 -<==      Total: 2
2020-11-09 02:24:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:24:56 -==> Parameters: 5(Integer)
2020-11-09 02:24:56 -<==      Total: 1
2020-11-09 02:24:56 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:24:56 -==> Parameters: 5(Integer)
2020-11-09 02:24:56 -<==      Total: 1
2020-11-09 02:24:56 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:24:56 -==> Parameters: 6(Integer)
2020-11-09 02:24:56 -<==      Total: 0
2020-11-09 02:24:56 -<==      Total: 1
2020-11-09 02:24:56 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:24:56 -==> Parameters: 6(Integer)
2020-11-09 02:24:56 -<==      Total: 2
2020-11-09 02:24:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:24:56 -==> Parameters: 11(Integer)
2020-11-09 02:24:56 -<==      Total: 1
2020-11-09 02:24:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:24:56 -==> Parameters: 12(Integer)
2020-11-09 02:24:56 -<==      Total: 1
2020-11-09 02:25:12 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:25:12 -==> Parameters: 5(Integer)
2020-11-09 02:25:12 -<==      Total: 1
2020-11-09 02:25:12 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:25:12 -==> Parameters: 6(Integer)
2020-11-09 02:25:12 -<==      Total: 1
2020-11-09 02:25:12 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:25:12 -==> Parameters: 6(Integer)
2020-11-09 02:25:12 -<==      Total: 2
2020-11-09 02:25:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:25:12 -==> Parameters: 11(Integer)
2020-11-09 02:25:12 -<==      Total: 1
2020-11-09 02:25:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:25:12 -==> Parameters: 12(Integer)
2020-11-09 02:25:12 -<==      Total: 1
2020-11-09 02:25:23 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:25:23 -==> Parameters: 4(Integer)
2020-11-09 02:25:23 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:25:23 -==> Parameters: 4(Integer)
2020-11-09 02:25:23 -<==      Total: 1
2020-11-09 02:25:23 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:25:23 -==> Parameters: 4(Integer)
2020-11-09 02:25:23 -<==      Total: 0
2020-11-09 02:25:23 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:25:23 -==> Parameters: 4(Integer)
2020-11-09 02:25:23 -<==      Total: 1
2020-11-09 02:25:23 -<==      Total: 1
2020-11-09 02:25:23 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:25:23 -==> Parameters: 6(Integer)
2020-11-09 02:25:23 -<==      Total: 1
2020-11-09 02:25:23 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:25:23 -==> Parameters: 6(Integer)
2020-11-09 02:25:23 -<==      Total: 2
2020-11-09 02:25:23 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:25:23 -==> Parameters: 11(Integer)
2020-11-09 02:25:23 -<==      Total: 1
2020-11-09 02:25:23 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:25:23 -==> Parameters: 12(Integer)
2020-11-09 02:25:23 -<==      Total: 1
2020-11-09 02:25:26 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:25:26 -==> Parameters: 5(Integer)
2020-11-09 02:25:26 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:25:26 -==> Parameters: 5(Integer)
2020-11-09 02:25:26 -<==      Total: 1
2020-11-09 02:25:26 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:25:26 -==> Parameters: 5(Integer)
2020-11-09 02:25:26 -<==      Total: 2
2020-11-09 02:25:26 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:25:26 -==> Parameters: 5(Integer)
2020-11-09 02:25:26 -<==      Total: 0
2020-11-09 02:25:26 -<==      Total: 1
2020-11-09 02:25:26 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:25:26 -==> Parameters: 6(Integer)
2020-11-09 02:25:26 -<==      Total: 1
2020-11-09 02:25:26 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:25:26 -==> Parameters: 6(Integer)
2020-11-09 02:25:26 -<==      Total: 2
2020-11-09 02:25:26 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:25:26 -==> Parameters: 11(Integer)
2020-11-09 02:25:26 -<==      Total: 1
2020-11-09 02:25:26 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:25:26 -==> Parameters: 12(Integer)
2020-11-09 02:25:26 -<==      Total: 1
2020-11-09 02:25:28 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:25:28 -==> Parameters: 5(Integer)
2020-11-09 02:25:28 -<==      Total: 1
2020-11-09 02:25:28 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:25:28 -==> Parameters: 6(Integer)
2020-11-09 02:25:28 -<==      Total: 1
2020-11-09 02:25:28 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:25:28 -==> Parameters: 6(Integer)
2020-11-09 02:25:28 -<==      Total: 2
2020-11-09 02:25:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:25:28 -==> Parameters: 11(Integer)
2020-11-09 02:25:28 -<==      Total: 1
2020-11-09 02:25:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:25:28 -==> Parameters: 12(Integer)
2020-11-09 02:25:28 -<==      Total: 1
2020-11-09 02:26:17 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:26:17 -==> Parameters: 5(Integer)
2020-11-09 02:26:17 -<==      Total: 1
2020-11-09 02:26:17 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:26:17 -==> Parameters: 6(Integer)
2020-11-09 02:26:17 -<==      Total: 1
2020-11-09 02:26:17 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":15,"userId":"MF20320102"}
2020-11-09 02:26:17 -解析到一条数据:{"id":12,"name":"ddd","score":30,"userId":"MF20123232"}
2020-11-09 02:26:17 -2条数据，开始存储数据库！
2020-11-09 02:26:17 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:26:17 -==> Parameters: 11(Integer), 5(Integer)
2020-11-09 02:26:17 -<==      Total: 0
2020-11-09 02:26:17 -==>  Preparing: INSERT into scoreReport(taskId,classId,studentId,score) values(?,?, ?, ?) 
2020-11-09 02:26:17 -==> Parameters: 5(Integer), 6(Integer), 11(Integer), 15(Integer)
2020-11-09 02:26:17 -<==    Updates: 1
2020-11-09 02:26:17 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:26:17 -==> Parameters: 15(Integer), 5(Integer), 11(Integer)
2020-11-09 02:26:17 -<==    Updates: 1
2020-11-09 02:26:17 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:26:17 -==> Parameters: 12(Integer), 5(Integer)
2020-11-09 02:26:17 -<==      Total: 0
2020-11-09 02:26:17 -==>  Preparing: INSERT into scoreReport(taskId,classId,studentId,score) values(?,?, ?, ?) 
2020-11-09 02:26:17 -==> Parameters: 5(Integer), 6(Integer), 12(Integer), 30(Integer)
2020-11-09 02:26:17 -<==    Updates: 1
2020-11-09 02:26:17 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:26:17 -==> Parameters: 30(Integer), 5(Integer), 12(Integer)
2020-11-09 02:26:17 -<==    Updates: 1
2020-11-09 02:26:17 -存储数据库成功！
2020-11-09 02:26:17 -所有数据解析完成！
2020-11-09 02:29:05 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:22:03 CST 2020]; root of context hierarchy
2020-11-09 02:29:05 -Unregistering JMX-exposed beans on shutdown
2020-11-09 02:29:10 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 27455 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 02:29:10 -No active profile set, falling back to default profiles: default
2020-11-09 02:29:10 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:29:10 CST 2020]; root of context hierarchy
2020-11-09 02:29:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 02:29:11 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 02:29:11 -Root WebApplicationContext: initialization completed in 1576 ms
2020-11-09 02:29:11 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 02:29:11 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 02:29:11 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 02:29:11 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 02:29:11 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 02:29:12 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:29:10 CST 2020]; root of context hierarchy
2020-11-09 02:29:12 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 02:29:12 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 02:29:12 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 02:29:12 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 02:29:12 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 02:29:12 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 02:29:12 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 02:29:12 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 02:29:12 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 02:29:12 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 02:29:12 -Mapped "{[/tch/uploadTaskScore],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadTaskScore(java.lang.Integer,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 02:29:12 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 02:29:12 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 02:29:12 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 02:29:12 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 02:29:12 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 02:29:12 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 02:29:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:29:12 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:29:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 02:29:12 -Registering beans for JMX exposure on startup
2020-11-09 02:29:13 -Tomcat started on port(s): 8080 (http)
2020-11-09 02:29:13 -Started SpringBootUserApplication in 3.319 seconds (JVM running for 3.888)
2020-11-09 02:29:18 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 02:29:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2020-11-09 02:29:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:22 -==> Parameters: 2(Integer)
2020-11-09 02:29:22 -<==      Total: 1
2020-11-09 02:29:22 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 02:29:22 -==> Parameters: 2(Integer)
2020-11-09 02:29:22 -<==      Total: 3
2020-11-09 02:29:25 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:25 -==> Parameters: 2(Integer)
2020-11-09 02:29:25 -<==      Total: 1
2020-11-09 02:29:25 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 02:29:25 -==> Parameters: 2(Integer)
2020-11-09 02:29:25 -<==      Total: 1
2020-11-09 02:29:25 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 02:29:25 -==> Parameters: 2(Integer)
2020-11-09 02:29:25 -<==      Total: 2
2020-11-09 02:29:25 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 02:29:25 -==> Parameters: 2(Integer)
2020-11-09 02:29:25 -<==      Total: 3
2020-11-09 02:29:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:28 -==> Parameters: 2(Integer)
2020-11-09 02:29:28 -<==      Total: 1
2020-11-09 02:29:28 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 02:29:28 -==> Parameters: 6(Integer)
2020-11-09 02:29:28 -<==      Total: 3
2020-11-09 02:29:32 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:29:32 -==> Parameters: 5(Integer)
2020-11-09 02:29:32 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:29:32 -==> Parameters: 5(Integer)
2020-11-09 02:29:32 -<==      Total: 1
2020-11-09 02:29:32 -<==      Total: 2
2020-11-09 02:29:32 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:29:32 -==> Parameters: 5(Integer)
2020-11-09 02:29:32 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:29:32 -==> Parameters: 5(Integer)
2020-11-09 02:29:32 -<==      Total: 0
2020-11-09 02:29:32 -<==      Total: 1
2020-11-09 02:29:32 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:29:32 -==> Parameters: 6(Integer)
2020-11-09 02:29:32 -<==      Total: 1
2020-11-09 02:29:32 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:29:32 -==> Parameters: 6(Integer)
2020-11-09 02:29:32 -<==      Total: 2
2020-11-09 02:29:32 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:32 -==> Parameters: 11(Integer)
2020-11-09 02:29:32 -<==      Total: 1
2020-11-09 02:29:32 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:32 -==> Parameters: 12(Integer)
2020-11-09 02:29:32 -<==      Total: 1
2020-11-09 02:29:39 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:29:39 -==> Parameters: 4(Integer)
2020-11-09 02:29:39 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:29:39 -==> Parameters: 4(Integer)
2020-11-09 02:29:39 -<==      Total: 1
2020-11-09 02:29:39 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:29:39 -==> Parameters: 4(Integer)
2020-11-09 02:29:39 -<==      Total: 0
2020-11-09 02:29:39 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:29:39 -==> Parameters: 4(Integer)
2020-11-09 02:29:39 -<==      Total: 1
2020-11-09 02:29:39 -<==      Total: 1
2020-11-09 02:29:39 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:29:39 -==> Parameters: 6(Integer)
2020-11-09 02:29:39 -<==      Total: 1
2020-11-09 02:29:39 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:29:39 -==> Parameters: 6(Integer)
2020-11-09 02:29:39 -<==      Total: 2
2020-11-09 02:29:39 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:39 -==> Parameters: 11(Integer)
2020-11-09 02:29:39 -<==      Total: 1
2020-11-09 02:29:39 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:39 -==> Parameters: 12(Integer)
2020-11-09 02:29:39 -<==      Total: 1
2020-11-09 02:29:47 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:29:47 -==> Parameters: 6(Integer)
2020-11-09 02:29:47 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:29:47 -==> Parameters: 6(Integer)
2020-11-09 02:29:47 -<==      Total: 1
2020-11-09 02:29:47 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:29:47 -==> Parameters: 6(Integer)
2020-11-09 02:29:47 -<==      Total: 2
2020-11-09 02:29:47 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:29:47 -==> Parameters: 6(Integer)
2020-11-09 02:29:47 -<==      Total: 0
2020-11-09 02:29:47 -<==      Total: 1
2020-11-09 02:29:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:29:47 -==> Parameters: 6(Integer)
2020-11-09 02:29:47 -<==      Total: 1
2020-11-09 02:29:47 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:29:47 -==> Parameters: 6(Integer)
2020-11-09 02:29:47 -<==      Total: 2
2020-11-09 02:29:47 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:47 -==> Parameters: 11(Integer)
2020-11-09 02:29:47 -<==      Total: 1
2020-11-09 02:29:47 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:47 -==> Parameters: 12(Integer)
2020-11-09 02:29:47 -<==      Total: 1
2020-11-09 02:29:52 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:29:52 -==> Parameters: 5(Integer)
2020-11-09 02:29:52 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:29:52 -==> Parameters: 5(Integer)
2020-11-09 02:29:52 -<==      Total: 1
2020-11-09 02:29:52 -<==      Total: 2
2020-11-09 02:29:52 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:29:52 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:29:52 -==> Parameters: 5(Integer)
2020-11-09 02:29:52 -==> Parameters: 5(Integer)
2020-11-09 02:29:52 -<==      Total: 0
2020-11-09 02:29:52 -<==      Total: 1
2020-11-09 02:29:52 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:29:52 -==> Parameters: 6(Integer)
2020-11-09 02:29:52 -<==      Total: 1
2020-11-09 02:29:52 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:29:52 -==> Parameters: 6(Integer)
2020-11-09 02:29:52 -<==      Total: 2
2020-11-09 02:29:52 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:52 -==> Parameters: 11(Integer)
2020-11-09 02:29:52 -<==      Total: 1
2020-11-09 02:29:52 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:52 -==> Parameters: 12(Integer)
2020-11-09 02:29:52 -<==      Total: 1
2020-11-09 02:29:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:29:56 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:29:56 -==> Parameters: 4(Integer)
2020-11-09 02:29:56 -==> Parameters: 4(Integer)
2020-11-09 02:29:56 -<==      Total: 0
2020-11-09 02:29:56 -<==      Total: 1
2020-11-09 02:29:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:29:56 -==> Parameters: 4(Integer)
2020-11-09 02:29:56 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:29:56 -==> Parameters: 4(Integer)
2020-11-09 02:29:56 -<==      Total: 1
2020-11-09 02:29:56 -<==      Total: 1
2020-11-09 02:29:56 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:29:56 -==> Parameters: 6(Integer)
2020-11-09 02:29:56 -<==      Total: 1
2020-11-09 02:29:56 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:29:56 -==> Parameters: 6(Integer)
2020-11-09 02:29:56 -<==      Total: 2
2020-11-09 02:29:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:56 -==> Parameters: 11(Integer)
2020-11-09 02:29:56 -<==      Total: 1
2020-11-09 02:29:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:56 -==> Parameters: 12(Integer)
2020-11-09 02:29:56 -<==      Total: 1
2020-11-09 02:29:57 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:29:57 -==> Parameters: 4(Integer)
2020-11-09 02:29:57 -<==      Total: 1
2020-11-09 02:29:57 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:29:57 -==> Parameters: 6(Integer)
2020-11-09 02:29:57 -<==      Total: 1
2020-11-09 02:29:57 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:29:57 -==> Parameters: 6(Integer)
2020-11-09 02:29:57 -<==      Total: 2
2020-11-09 02:29:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:57 -==> Parameters: 11(Integer)
2020-11-09 02:29:57 -<==      Total: 1
2020-11-09 02:29:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:29:57 -==> Parameters: 12(Integer)
2020-11-09 02:29:58 -<==      Total: 1
2020-11-09 02:32:09 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:32:09 -==> Parameters: 4(Integer)
2020-11-09 02:32:09 -<==      Total: 1
2020-11-09 02:32:09 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:32:09 -==> Parameters: 6(Integer)
2020-11-09 02:32:09 -<==      Total: 1
2020-11-09 02:32:09 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:32:09 -==> Parameters: 6(Integer)
2020-11-09 02:32:09 -<==      Total: 2
2020-11-09 02:32:09 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:32:09 -==> Parameters: 11(Integer)
2020-11-09 02:32:09 -<==      Total: 1
2020-11-09 02:32:09 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:32:09 -==> Parameters: 12(Integer)
2020-11-09 02:32:09 -<==      Total: 1
2020-11-09 02:32:44 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:32:44 -==> Parameters: 4(Integer)
2020-11-09 02:32:44 -<==      Total: 1
2020-11-09 02:32:44 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:32:44 -==> Parameters: 6(Integer)
2020-11-09 02:32:44 -<==      Total: 1
2020-11-09 02:32:44 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":0,"userId":"MF20320102"}
2020-11-09 02:32:44 -解析到一条数据:{"id":12,"name":"ddd","score":0,"userId":"MF20123232"}
2020-11-09 02:32:44 -2条数据，开始存储数据库！
2020-11-09 02:32:44 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:32:44 -==> Parameters: 11(Integer), 4(Integer)
2020-11-09 02:32:44 -<==      Total: 0
2020-11-09 02:32:44 -==>  Preparing: INSERT into scoreReport(taskId,classId,studentId,score) values(?,?, ?, ?) 
2020-11-09 02:32:44 -==> Parameters: 4(Integer), 6(Integer), 11(Integer), 0(Integer)
2020-11-09 02:32:44 -<==    Updates: 1
2020-11-09 02:32:44 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:32:44 -==> Parameters: 0(Integer), 4(Integer), 11(Integer)
2020-11-09 02:32:44 -<==    Updates: 0
2020-11-09 02:32:44 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:32:44 -==> Parameters: 12(Integer), 4(Integer)
2020-11-09 02:32:44 -<==      Total: 0
2020-11-09 02:32:44 -==>  Preparing: INSERT into scoreReport(taskId,classId,studentId,score) values(?,?, ?, ?) 
2020-11-09 02:32:44 -==> Parameters: 4(Integer), 6(Integer), 12(Integer), 0(Integer)
2020-11-09 02:32:44 -<==    Updates: 1
2020-11-09 02:32:44 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:32:44 -==> Parameters: 0(Integer), 4(Integer), 12(Integer)
2020-11-09 02:32:44 -<==    Updates: 0
2020-11-09 02:32:44 -存储数据库成功！
2020-11-09 02:32:44 -所有数据解析完成！
2020-11-09 02:32:45 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:32:45 -==> Parameters: 4(Integer)
2020-11-09 02:32:45 -<==      Total: 0
2020-11-09 02:32:45 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:32:45 -==> Parameters: 4(Integer)
2020-11-09 02:32:45 -<==      Total: 1
2020-11-09 02:32:45 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:32:45 -==> Parameters: 6(Integer)
2020-11-09 02:32:45 -<==      Total: 1
2020-11-09 02:32:45 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:32:45 -==> Parameters: 6(Integer)
2020-11-09 02:32:45 -<==      Total: 2
2020-11-09 02:32:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:32:45 -==> Parameters: 11(Integer)
2020-11-09 02:32:45 -<==      Total: 1
2020-11-09 02:32:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:32:45 -==> Parameters: 12(Integer)
2020-11-09 02:32:45 -<==      Total: 1
2020-11-09 02:32:53 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:32:53 -==> Parameters: 4(Integer)
2020-11-09 02:32:53 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:32:53 -==> Parameters: 2(Integer)
2020-11-09 02:32:53 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:32:53 -==> Parameters: 4(Integer)
2020-11-09 02:32:53 -<==      Total: 1
2020-11-09 02:32:53 -<==      Total: 1
2020-11-09 02:32:53 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:32:53 -==> Parameters: 4(Integer)
2020-11-09 02:32:53 -<==      Total: 0
2020-11-09 02:32:53 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:32:53 -==> Parameters: 4(Integer)
2020-11-09 02:32:53 -Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2020-11-09 02:32:53 -<==      Total: 1
2020-11-09 02:32:53 -<==      Total: 1
2020-11-09 02:32:53 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:32:53 -==> Parameters: 6(Integer)
2020-11-09 02:32:53 -<==      Total: 1
2020-11-09 02:32:53 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:32:53 -==> Parameters: 6(Integer)
2020-11-09 02:32:53 -<==      Total: 2
2020-11-09 02:32:53 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:32:53 -==> Parameters: 11(Integer)
2020-11-09 02:32:53 -<==      Total: 1
2020-11-09 02:32:53 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:32:53 -==> Parameters: 12(Integer)
2020-11-09 02:32:53 -<==      Total: 1
2020-11-09 02:33:00 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:33:00 -==> Parameters: 2(Integer)
2020-11-09 02:33:00 -<==      Total: 1
2020-11-09 02:33:00 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 02:33:00 -==> Parameters: 2(Integer)
2020-11-09 02:33:00 -<==      Total: 3
2020-11-09 02:33:02 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:33:02 -==> Parameters: 2(Integer)
2020-11-09 02:33:02 -<==      Total: 1
2020-11-09 02:33:02 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 02:33:02 -==> Parameters: 2(Integer)
2020-11-09 02:33:02 -<==      Total: 1
2020-11-09 02:33:02 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 02:33:02 -==> Parameters: 2(Integer)
2020-11-09 02:33:02 -<==      Total: 2
2020-11-09 02:33:02 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 02:33:02 -==> Parameters: 2(Integer)
2020-11-09 02:33:02 -<==      Total: 3
2020-11-09 02:33:05 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:33:05 -==> Parameters: 2(Integer)
2020-11-09 02:33:05 -<==      Total: 1
2020-11-09 02:33:05 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 02:33:05 -==> Parameters: 2(Integer)
2020-11-09 02:33:05 -<==      Total: 0
2020-11-09 02:33:11 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:33:11 -==> Parameters: 2(Integer)
2020-11-09 02:33:11 -<==      Total: 1
2020-11-09 02:33:11 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 02:33:11 -==> Parameters: 6(Integer)
2020-11-09 02:33:11 -<==      Total: 3
2020-11-09 02:33:14 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:33:14 -==> Parameters: 4(Integer)
2020-11-09 02:33:14 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:33:14 -==> Parameters: 4(Integer)
2020-11-09 02:33:14 -<==      Total: 0
2020-11-09 02:33:14 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:33:14 -==> Parameters: 4(Integer)
2020-11-09 02:33:14 -<==      Total: 1
2020-11-09 02:33:14 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:33:14 -==> Parameters: 4(Integer)
2020-11-09 02:33:14 -<==      Total: 1
2020-11-09 02:33:14 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:33:14 -==> Parameters: 6(Integer)
2020-11-09 02:33:14 -<==      Total: 1
2020-11-09 02:33:14 -<==      Total: 1
2020-11-09 02:33:14 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:33:14 -==> Parameters: 6(Integer)
2020-11-09 02:33:14 -<==      Total: 2
2020-11-09 02:33:14 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:33:14 -==> Parameters: 11(Integer)
2020-11-09 02:33:14 -<==      Total: 1
2020-11-09 02:33:14 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:33:14 -==> Parameters: 12(Integer)
2020-11-09 02:33:15 -<==      Total: 1
2020-11-09 02:35:18 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:35:18 -==> Parameters: 4(Integer)
2020-11-09 02:35:18 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:35:18 -==> Parameters: 4(Integer)
2020-11-09 02:35:18 -<==      Total: 1
2020-11-09 02:35:18 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:35:18 -==> Parameters: 4(Integer)
2020-11-09 02:35:18 -<==      Total: 0
2020-11-09 02:35:18 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:35:18 -==> Parameters: 4(Integer)
2020-11-09 02:35:18 -<==      Total: 1
2020-11-09 02:35:18 -<==      Total: 1
2020-11-09 02:35:18 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:35:18 -==> Parameters: 6(Integer)
2020-11-09 02:35:18 -<==      Total: 1
2020-11-09 02:35:18 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:35:18 -==> Parameters: 6(Integer)
2020-11-09 02:35:18 -<==      Total: 2
2020-11-09 02:35:18 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:35:18 -==> Parameters: 11(Integer)
2020-11-09 02:35:18 -<==      Total: 1
2020-11-09 02:35:18 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:35:18 -==> Parameters: 12(Integer)
2020-11-09 02:35:18 -<==      Total: 1
2020-11-09 02:35:27 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:35:27 -==> Parameters: 5(Integer)
2020-11-09 02:35:27 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:35:27 -==> Parameters: 5(Integer)
2020-11-09 02:35:27 -<==      Total: 2
2020-11-09 02:35:27 -<==      Total: 1
2020-11-09 02:35:27 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:35:27 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:35:27 -==> Parameters: 5(Integer)
2020-11-09 02:35:27 -==> Parameters: 5(Integer)
2020-11-09 02:35:27 -<==      Total: 1
2020-11-09 02:35:27 -<==      Total: 0
2020-11-09 02:35:27 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:35:27 -==> Parameters: 6(Integer)
2020-11-09 02:35:27 -<==      Total: 1
2020-11-09 02:35:27 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:35:27 -==> Parameters: 6(Integer)
2020-11-09 02:35:27 -<==      Total: 2
2020-11-09 02:35:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:35:27 -==> Parameters: 11(Integer)
2020-11-09 02:35:27 -<==      Total: 1
2020-11-09 02:35:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:35:27 -==> Parameters: 12(Integer)
2020-11-09 02:35:27 -<==      Total: 1
2020-11-09 02:37:00 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:00 -==> Parameters: 5(Integer)
2020-11-09 02:37:00 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:37:00 -==> Parameters: 5(Integer)
2020-11-09 02:37:00 -<==      Total: 1
2020-11-09 02:37:00 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:37:00 -==> Parameters: 5(Integer)
2020-11-09 02:37:00 -<==      Total: 2
2020-11-09 02:37:00 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:00 -==> Parameters: 5(Integer)
2020-11-09 02:37:00 -<==      Total: 0
2020-11-09 02:37:00 -<==      Total: 1
2020-11-09 02:37:00 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:37:00 -==> Parameters: 6(Integer)
2020-11-09 02:37:00 -<==      Total: 1
2020-11-09 02:37:00 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:37:00 -==> Parameters: 6(Integer)
2020-11-09 02:37:00 -<==      Total: 2
2020-11-09 02:37:00 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:00 -==> Parameters: 11(Integer)
2020-11-09 02:37:00 -<==      Total: 1
2020-11-09 02:37:00 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:00 -==> Parameters: 12(Integer)
2020-11-09 02:37:00 -<==      Total: 1
2020-11-09 02:37:11 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:11 -==> Parameters: 5(Integer)
2020-11-09 02:37:11 -<==      Total: 1
2020-11-09 02:37:11 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:37:11 -==> Parameters: 6(Integer)
2020-11-09 02:37:11 -<==      Total: 1
2020-11-09 02:37:11 -解析到一条数据:{"id":11,"name":"LUO YUYING","userId":"MF20320102"}
2020-11-09 02:37:11 -解析到一条数据:{"id":12,"name":"ddd","userId":"MF20123232"}
2020-11-09 02:37:11 -2条数据，开始存储数据库！
2020-11-09 02:37:11 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:37:11 -==> Parameters: 11(Integer), 5(Integer)
2020-11-09 02:37:11 -<==      Total: 1
2020-11-09 02:37:11 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:37:11 -==> Parameters: null, 5(Integer), 11(Integer)
2020-11-09 02:37:11 -<==    Updates: 1
2020-11-09 02:37:11 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:37:11 -==> Parameters: null, 5(Integer), 11(Integer)
2020-11-09 02:37:11 -<==    Updates: 1
2020-11-09 02:37:11 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:37:11 -==> Parameters: 12(Integer), 5(Integer)
2020-11-09 02:37:11 -<==      Total: 1
2020-11-09 02:37:11 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:37:11 -==> Parameters: null, 5(Integer), 12(Integer)
2020-11-09 02:37:11 -<==    Updates: 1
2020-11-09 02:37:11 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:37:11 -==> Parameters: null, 5(Integer), 12(Integer)
2020-11-09 02:37:12 -<==    Updates: 1
2020-11-09 02:37:12 -存储数据库成功！
2020-11-09 02:37:12 -所有数据解析完成！
2020-11-09 02:37:12 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:37:12 -==> Parameters: 5(Integer)
2020-11-09 02:37:12 -<==      Total: 2
2020-11-09 02:37:12 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:12 -==> Parameters: 5(Integer)
2020-11-09 02:37:12 -<==      Total: 1
2020-11-09 02:37:12 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:37:12 -==> Parameters: 6(Integer)
2020-11-09 02:37:12 -<==      Total: 1
2020-11-09 02:37:12 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:37:12 -==> Parameters: 6(Integer)
2020-11-09 02:37:12 -<==      Total: 2
2020-11-09 02:37:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:12 -==> Parameters: 11(Integer)
2020-11-09 02:37:12 -<==      Total: 1
2020-11-09 02:37:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:12 -==> Parameters: 12(Integer)
2020-11-09 02:37:12 -<==      Total: 1
2020-11-09 02:37:26 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:26 -==> Parameters: 4(Integer)
2020-11-09 02:37:26 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:37:26 -==> Parameters: 4(Integer)
2020-11-09 02:37:26 -<==      Total: 1
2020-11-09 02:37:26 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:37:26 -==> Parameters: 4(Integer)
2020-11-09 02:37:26 -<==      Total: 0
2020-11-09 02:37:26 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:26 -==> Parameters: 4(Integer)
2020-11-09 02:37:27 -<==      Total: 1
2020-11-09 02:37:27 -<==      Total: 1
2020-11-09 02:37:27 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:37:27 -==> Parameters: 6(Integer)
2020-11-09 02:37:27 -<==      Total: 1
2020-11-09 02:37:27 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:37:27 -==> Parameters: 6(Integer)
2020-11-09 02:37:27 -<==      Total: 2
2020-11-09 02:37:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:27 -==> Parameters: 11(Integer)
2020-11-09 02:37:27 -<==      Total: 1
2020-11-09 02:37:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:27 -==> Parameters: 12(Integer)
2020-11-09 02:37:27 -<==      Total: 1
2020-11-09 02:37:30 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:30 -==> Parameters: 5(Integer)
2020-11-09 02:37:30 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:37:30 -==> Parameters: 5(Integer)
2020-11-09 02:37:30 -<==      Total: 1
2020-11-09 02:37:30 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:37:30 -<==      Total: 2
2020-11-09 02:37:30 -==> Parameters: 5(Integer)
2020-11-09 02:37:30 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:30 -==> Parameters: 5(Integer)
2020-11-09 02:37:30 -<==      Total: 0
2020-11-09 02:37:30 -<==      Total: 1
2020-11-09 02:37:30 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:37:30 -==> Parameters: 6(Integer)
2020-11-09 02:37:30 -<==      Total: 1
2020-11-09 02:37:30 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:37:30 -==> Parameters: 6(Integer)
2020-11-09 02:37:30 -<==      Total: 2
2020-11-09 02:37:30 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:30 -==> Parameters: 11(Integer)
2020-11-09 02:37:30 -<==      Total: 1
2020-11-09 02:37:30 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:30 -==> Parameters: 12(Integer)
2020-11-09 02:37:30 -<==      Total: 1
2020-11-09 02:37:49 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:49 -==> Parameters: 5(Integer)
2020-11-09 02:37:49 -<==      Total: 1
2020-11-09 02:37:49 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:37:49 -==> Parameters: 6(Integer)
2020-11-09 02:37:49 -<==      Total: 1
2020-11-09 02:37:49 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":0,"userId":"MF20320102"}
2020-11-09 02:37:49 -解析到一条数据:{"id":12,"name":"ddd","score":0,"userId":"MF20123232"}
2020-11-09 02:37:49 -2条数据，开始存储数据库！
2020-11-09 02:37:49 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:37:49 -==> Parameters: 11(Integer), 5(Integer)
2020-11-09 02:37:49 -<==      Total: 1
2020-11-09 02:37:49 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:37:49 -==> Parameters: 0(Integer), 5(Integer), 11(Integer)
2020-11-09 02:37:49 -<==    Updates: 1
2020-11-09 02:37:49 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:37:49 -==> Parameters: 0(Integer), 5(Integer), 11(Integer)
2020-11-09 02:37:50 -<==    Updates: 1
2020-11-09 02:37:50 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:37:50 -==> Parameters: 12(Integer), 5(Integer)
2020-11-09 02:37:50 -<==      Total: 1
2020-11-09 02:37:50 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:37:50 -==> Parameters: 0(Integer), 5(Integer), 12(Integer)
2020-11-09 02:37:50 -<==    Updates: 1
2020-11-09 02:37:50 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:37:50 -==> Parameters: 0(Integer), 5(Integer), 12(Integer)
2020-11-09 02:37:50 -<==    Updates: 1
2020-11-09 02:37:50 -存储数据库成功！
2020-11-09 02:37:50 -所有数据解析完成！
2020-11-09 02:37:50 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:37:50 -==> Parameters: 5(Integer)
2020-11-09 02:37:50 -<==      Total: 2
2020-11-09 02:37:50 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:50 -==> Parameters: 5(Integer)
2020-11-09 02:37:50 -<==      Total: 1
2020-11-09 02:37:50 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:37:50 -==> Parameters: 6(Integer)
2020-11-09 02:37:50 -<==      Total: 1
2020-11-09 02:37:50 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:37:50 -==> Parameters: 6(Integer)
2020-11-09 02:37:50 -<==      Total: 2
2020-11-09 02:37:50 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:50 -==> Parameters: 11(Integer)
2020-11-09 02:37:50 -<==      Total: 1
2020-11-09 02:37:50 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:50 -==> Parameters: 12(Integer)
2020-11-09 02:37:50 -<==      Total: 1
2020-11-09 02:37:58 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:58 -==> Parameters: 4(Integer)
2020-11-09 02:37:58 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:37:58 -==> Parameters: 4(Integer)
2020-11-09 02:37:58 -<==      Total: 1
2020-11-09 02:37:58 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:37:58 -==> Parameters: 4(Integer)
2020-11-09 02:37:58 -<==      Total: 0
2020-11-09 02:37:58 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:37:58 -==> Parameters: 4(Integer)
2020-11-09 02:37:58 -<==      Total: 1
2020-11-09 02:37:58 -<==      Total: 1
2020-11-09 02:37:58 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:37:58 -==> Parameters: 6(Integer)
2020-11-09 02:37:58 -<==      Total: 1
2020-11-09 02:37:58 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:37:58 -==> Parameters: 6(Integer)
2020-11-09 02:37:58 -<==      Total: 2
2020-11-09 02:37:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:58 -==> Parameters: 11(Integer)
2020-11-09 02:37:58 -<==      Total: 1
2020-11-09 02:37:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:37:58 -==> Parameters: 12(Integer)
2020-11-09 02:37:58 -<==      Total: 1
2020-11-09 02:38:01 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:38:01 -==> Parameters: 5(Integer)
2020-11-09 02:38:01 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:38:01 -==> Parameters: 5(Integer)
2020-11-09 02:38:01 -<==      Total: 2
2020-11-09 02:38:01 -<==      Total: 1
2020-11-09 02:38:01 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:38:01 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:38:01 -==> Parameters: 5(Integer)
2020-11-09 02:38:01 -==> Parameters: 5(Integer)
2020-11-09 02:38:01 -<==      Total: 1
2020-11-09 02:38:01 -<==      Total: 0
2020-11-09 02:38:01 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:38:01 -==> Parameters: 6(Integer)
2020-11-09 02:38:01 -<==      Total: 1
2020-11-09 02:38:01 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:38:01 -==> Parameters: 6(Integer)
2020-11-09 02:38:01 -<==      Total: 2
2020-11-09 02:38:01 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:38:01 -==> Parameters: 11(Integer)
2020-11-09 02:38:01 -<==      Total: 1
2020-11-09 02:38:01 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:38:01 -==> Parameters: 12(Integer)
2020-11-09 02:38:01 -<==      Total: 1
2020-11-09 02:38:36 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:38:36 -==> Parameters: 5(Integer)
2020-11-09 02:38:36 -<==      Total: 1
2020-11-09 02:38:36 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:38:36 -==> Parameters: 6(Integer)
2020-11-09 02:38:36 -<==      Total: 1
2020-11-09 02:38:36 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":100,"userId":"MF20320102"}
2020-11-09 02:38:36 -解析到一条数据:{"id":12,"name":"ddd","score":100,"userId":"MF20123232"}
2020-11-09 02:38:36 -2条数据，开始存储数据库！
2020-11-09 02:38:36 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:38:36 -==> Parameters: 11(Integer), 5(Integer)
2020-11-09 02:38:36 -<==      Total: 1
2020-11-09 02:38:36 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:38:36 -==> Parameters: 100(Integer), 5(Integer), 11(Integer)
2020-11-09 02:38:36 -<==    Updates: 1
2020-11-09 02:38:36 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:38:36 -==> Parameters: 100(Integer), 5(Integer), 11(Integer)
2020-11-09 02:38:36 -<==    Updates: 1
2020-11-09 02:38:36 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:38:36 -==> Parameters: 12(Integer), 5(Integer)
2020-11-09 02:38:36 -<==      Total: 1
2020-11-09 02:38:36 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:38:36 -==> Parameters: 100(Integer), 5(Integer), 12(Integer)
2020-11-09 02:38:36 -<==    Updates: 1
2020-11-09 02:38:36 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:38:36 -==> Parameters: 100(Integer), 5(Integer), 12(Integer)
2020-11-09 02:38:36 -<==    Updates: 1
2020-11-09 02:38:36 -存储数据库成功！
2020-11-09 02:38:36 -所有数据解析完成！
2020-11-09 02:38:36 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:38:36 -==> Parameters: 5(Integer)
2020-11-09 02:38:36 -<==      Total: 2
2020-11-09 02:38:36 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:38:36 -==> Parameters: 5(Integer)
2020-11-09 02:38:37 -<==      Total: 1
2020-11-09 02:38:37 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:38:37 -==> Parameters: 6(Integer)
2020-11-09 02:38:37 -<==      Total: 1
2020-11-09 02:38:37 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:38:37 -==> Parameters: 6(Integer)
2020-11-09 02:38:37 -<==      Total: 2
2020-11-09 02:38:37 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:38:37 -==> Parameters: 11(Integer)
2020-11-09 02:38:37 -<==      Total: 1
2020-11-09 02:38:37 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:38:37 -==> Parameters: 12(Integer)
2020-11-09 02:38:37 -<==      Total: 1
2020-11-09 02:38:43 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:38:43 -==> Parameters: 5(Integer)
2020-11-09 02:38:43 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:38:43 -==> Parameters: 5(Integer)
2020-11-09 02:38:43 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:38:43 -==> Parameters: 2(Integer)
2020-11-09 02:38:43 -<==      Total: 1
2020-11-09 02:38:43 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:38:43 -==> Parameters: 5(Integer)
2020-11-09 02:38:43 -<==      Total: 2
2020-11-09 02:38:43 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:38:43 -==> Parameters: 5(Integer)
2020-11-09 02:38:43 -<==      Total: 1
2020-11-09 02:38:43 -Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2020-11-09 02:38:43 -<==      Total: 0
2020-11-09 02:38:43 -<==      Total: 1
2020-11-09 02:38:43 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:38:43 -==> Parameters: 6(Integer)
2020-11-09 02:38:43 -<==      Total: 1
2020-11-09 02:38:43 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:38:43 -==> Parameters: 6(Integer)
2020-11-09 02:38:43 -<==      Total: 2
2020-11-09 02:38:43 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:38:43 -==> Parameters: 11(Integer)
2020-11-09 02:38:43 -<==      Total: 1
2020-11-09 02:38:43 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:38:43 -==> Parameters: 12(Integer)
2020-11-09 02:38:43 -<==      Total: 1
2020-11-09 02:38:49 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:38:49 -==> Parameters: 2(Integer)
2020-11-09 02:38:49 -<==      Total: 1
2020-11-09 02:38:49 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 02:38:49 -==> Parameters: 6(Integer)
2020-11-09 02:38:49 -<==      Total: 3
2020-11-09 02:38:54 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:38:54 -==> Parameters: 5(Integer)
2020-11-09 02:38:54 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:38:54 -==> Parameters: 5(Integer)
2020-11-09 02:38:54 -<==      Total: 1
2020-11-09 02:38:54 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:38:54 -==> Parameters: 5(Integer)
2020-11-09 02:38:54 -<==      Total: 2
2020-11-09 02:38:54 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:38:54 -==> Parameters: 5(Integer)
2020-11-09 02:38:54 -<==      Total: 0
2020-11-09 02:38:54 -<==      Total: 1
2020-11-09 02:38:54 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:38:54 -==> Parameters: 6(Integer)
2020-11-09 02:38:54 -<==      Total: 1
2020-11-09 02:38:54 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:38:54 -==> Parameters: 6(Integer)
2020-11-09 02:38:54 -<==      Total: 2
2020-11-09 02:38:54 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:38:54 -==> Parameters: 11(Integer)
2020-11-09 02:38:54 -<==      Total: 1
2020-11-09 02:38:54 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:38:54 -==> Parameters: 12(Integer)
2020-11-09 02:38:54 -<==      Total: 1
2020-11-09 02:39:02 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:39:02 -==> Parameters: 4(Integer)
2020-11-09 02:39:02 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:39:02 -==> Parameters: 4(Integer)
2020-11-09 02:39:02 -<==      Total: 1
2020-11-09 02:39:02 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:39:02 -==> Parameters: 4(Integer)
2020-11-09 02:39:02 -<==      Total: 0
2020-11-09 02:39:02 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:39:02 -==> Parameters: 4(Integer)
2020-11-09 02:39:02 -<==      Total: 1
2020-11-09 02:39:02 -<==      Total: 1
2020-11-09 02:39:02 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:39:02 -==> Parameters: 6(Integer)
2020-11-09 02:39:02 -<==      Total: 1
2020-11-09 02:39:02 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:39:02 -==> Parameters: 6(Integer)
2020-11-09 02:39:02 -<==      Total: 2
2020-11-09 02:39:02 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:39:02 -==> Parameters: 11(Integer)
2020-11-09 02:39:02 -<==      Total: 1
2020-11-09 02:39:02 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:39:02 -==> Parameters: 12(Integer)
2020-11-09 02:39:02 -<==      Total: 1
2020-11-09 02:39:06 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:39:06 -==> Parameters: 5(Integer)
2020-11-09 02:39:06 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:39:06 -==> Parameters: 5(Integer)
2020-11-09 02:39:06 -<==      Total: 1
2020-11-09 02:39:06 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:39:06 -==> Parameters: 5(Integer)
2020-11-09 02:39:06 -<==      Total: 2
2020-11-09 02:39:06 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:39:06 -==> Parameters: 5(Integer)
2020-11-09 02:39:06 -<==      Total: 0
2020-11-09 02:39:06 -<==      Total: 1
2020-11-09 02:39:06 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:39:06 -==> Parameters: 6(Integer)
2020-11-09 02:39:06 -<==      Total: 1
2020-11-09 02:39:06 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:39:06 -==> Parameters: 6(Integer)
2020-11-09 02:39:06 -<==      Total: 2
2020-11-09 02:39:06 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:39:06 -==> Parameters: 11(Integer)
2020-11-09 02:39:06 -<==      Total: 1
2020-11-09 02:39:06 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:39:06 -==> Parameters: 12(Integer)
2020-11-09 02:39:06 -<==      Total: 1
2020-11-09 02:40:13 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:40:13 -==> Parameters: 5(Integer)
2020-11-09 02:40:13 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:40:13 -==> Parameters: 5(Integer)
2020-11-09 02:40:13 -<==      Total: 2
2020-11-09 02:40:13 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:40:13 -==> Parameters: 5(Integer)
2020-11-09 02:40:13 -<==      Total: 1
2020-11-09 02:40:13 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:40:13 -==> Parameters: 5(Integer)
2020-11-09 02:40:13 -<==      Total: 1
2020-11-09 02:40:13 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:40:13 -==> Parameters: 6(Integer)
2020-11-09 02:40:13 -<==      Total: 0
2020-11-09 02:40:13 -<==      Total: 1
2020-11-09 02:40:13 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:40:13 -==> Parameters: 6(Integer)
2020-11-09 02:40:13 -<==      Total: 2
2020-11-09 02:40:13 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:40:13 -==> Parameters: 11(Integer)
2020-11-09 02:40:13 -<==      Total: 1
2020-11-09 02:40:13 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:40:13 -==> Parameters: 12(Integer)
2020-11-09 02:40:13 -<==      Total: 1
2020-11-09 02:40:48 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:40:48 -==> Parameters: 5(Integer)
2020-11-09 02:40:48 -<==      Total: 1
2020-11-09 02:40:48 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:40:48 -==> Parameters: 6(Integer)
2020-11-09 02:40:48 -<==      Total: 1
2020-11-09 02:40:48 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":100,"userId":"MF20320102"}
2020-11-09 02:40:48 -解析到一条数据:{"id":12,"name":"ddd","score":60,"userId":"MF20123232"}
2020-11-09 02:40:48 -2条数据，开始存储数据库！
2020-11-09 02:40:48 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:40:48 -==> Parameters: 11(Integer), 5(Integer)
2020-11-09 02:40:48 -<==      Total: 1
2020-11-09 02:40:48 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:40:48 -==> Parameters: 100(Integer), 5(Integer), 11(Integer)
2020-11-09 02:40:48 -<==    Updates: 1
2020-11-09 02:40:48 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:40:48 -==> Parameters: 100(Integer), 5(Integer), 11(Integer)
2020-11-09 02:40:49 -<==    Updates: 1
2020-11-09 02:40:49 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:40:49 -==> Parameters: 12(Integer), 5(Integer)
2020-11-09 02:40:49 -<==      Total: 1
2020-11-09 02:40:49 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:40:49 -==> Parameters: 60(Integer), 5(Integer), 12(Integer)
2020-11-09 02:40:49 -<==    Updates: 1
2020-11-09 02:40:49 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:40:49 -==> Parameters: 60(Integer), 5(Integer), 12(Integer)
2020-11-09 02:40:49 -<==    Updates: 1
2020-11-09 02:40:49 -存储数据库成功！
2020-11-09 02:40:49 -所有数据解析完成！
2020-11-09 02:40:51 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:40:51 -==> Parameters: 5(Integer)
2020-11-09 02:40:51 -<==      Total: 2
2020-11-09 02:40:51 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:40:51 -==> Parameters: 5(Integer)
2020-11-09 02:40:51 -<==      Total: 1
2020-11-09 02:40:51 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:40:51 -==> Parameters: 6(Integer)
2020-11-09 02:40:51 -<==      Total: 1
2020-11-09 02:40:51 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:40:51 -==> Parameters: 6(Integer)
2020-11-09 02:40:51 -<==      Total: 2
2020-11-09 02:40:51 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:40:51 -==> Parameters: 11(Integer)
2020-11-09 02:40:51 -<==      Total: 1
2020-11-09 02:40:51 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:40:51 -==> Parameters: 12(Integer)
2020-11-09 02:40:51 -<==      Total: 1
2020-11-09 02:40:57 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:40:57 -==> Parameters: 4(Integer)
2020-11-09 02:40:57 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:40:57 -==> Parameters: 4(Integer)
2020-11-09 02:40:57 -<==      Total: 1
2020-11-09 02:40:57 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:40:57 -==> Parameters: 4(Integer)
2020-11-09 02:40:57 -<==      Total: 0
2020-11-09 02:40:57 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:40:57 -==> Parameters: 4(Integer)
2020-11-09 02:40:57 -<==      Total: 1
2020-11-09 02:40:57 -<==      Total: 1
2020-11-09 02:40:57 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:40:57 -==> Parameters: 6(Integer)
2020-11-09 02:40:57 -<==      Total: 1
2020-11-09 02:40:57 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:40:57 -==> Parameters: 6(Integer)
2020-11-09 02:40:57 -<==      Total: 2
2020-11-09 02:40:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:40:57 -==> Parameters: 11(Integer)
2020-11-09 02:40:57 -<==      Total: 1
2020-11-09 02:40:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:40:57 -==> Parameters: 12(Integer)
2020-11-09 02:40:57 -<==      Total: 1
2020-11-09 02:41:00 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:41:00 -==> Parameters: 5(Integer)
2020-11-09 02:41:00 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:41:00 -==> Parameters: 5(Integer)
2020-11-09 02:41:00 -<==      Total: 2
2020-11-09 02:41:00 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:41:00 -==> Parameters: 5(Integer)
2020-11-09 02:41:00 -<==      Total: 1
2020-11-09 02:41:00 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:41:00 -==> Parameters: 5(Integer)
2020-11-09 02:41:00 -<==      Total: 1
2020-11-09 02:41:00 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:41:00 -==> Parameters: 6(Integer)
2020-11-09 02:41:00 -<==      Total: 0
2020-11-09 02:41:00 -<==      Total: 1
2020-11-09 02:41:00 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:41:00 -==> Parameters: 6(Integer)
2020-11-09 02:41:00 -<==      Total: 2
2020-11-09 02:41:00 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:41:00 -==> Parameters: 11(Integer)
2020-11-09 02:41:00 -<==      Total: 1
2020-11-09 02:41:00 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:41:00 -==> Parameters: 12(Integer)
2020-11-09 02:41:00 -<==      Total: 1
2020-11-09 02:43:22 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:43:22 -==> Parameters: 5(Integer)
2020-11-09 02:43:22 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:43:22 -==> Parameters: 5(Integer)
2020-11-09 02:43:22 -<==      Total: 1
2020-11-09 02:43:22 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:43:22 -==> Parameters: 5(Integer)
2020-11-09 02:43:22 -<==      Total: 2
2020-11-09 02:43:22 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:43:22 -==> Parameters: 5(Integer)
2020-11-09 02:43:22 -<==      Total: 0
2020-11-09 02:43:22 -<==      Total: 1
2020-11-09 02:43:22 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:43:22 -==> Parameters: 6(Integer)
2020-11-09 02:43:22 -<==      Total: 1
2020-11-09 02:43:22 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:43:22 -==> Parameters: 6(Integer)
2020-11-09 02:43:22 -<==      Total: 2
2020-11-09 02:43:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:43:22 -==> Parameters: 11(Integer)
2020-11-09 02:43:22 -<==      Total: 1
2020-11-09 02:43:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:43:22 -==> Parameters: 12(Integer)
2020-11-09 02:43:22 -<==      Total: 1
2020-11-09 02:44:38 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:44:38 -==> Parameters: 5(Integer)
2020-11-09 02:44:38 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:44:38 -==> Parameters: 5(Integer)
2020-11-09 02:44:38 -<==      Total: 1
2020-11-09 02:44:38 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:44:38 -==> Parameters: 5(Integer)
2020-11-09 02:44:38 -<==      Total: 2
2020-11-09 02:44:38 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:44:38 -==> Parameters: 5(Integer)
2020-11-09 02:44:38 -<==      Total: 0
2020-11-09 02:44:38 -<==      Total: 1
2020-11-09 02:44:38 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:44:38 -==> Parameters: 6(Integer)
2020-11-09 02:44:38 -<==      Total: 1
2020-11-09 02:44:38 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:44:38 -==> Parameters: 6(Integer)
2020-11-09 02:44:38 -<==      Total: 2
2020-11-09 02:44:38 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:44:38 -==> Parameters: 11(Integer)
2020-11-09 02:44:38 -<==      Total: 1
2020-11-09 02:44:38 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:44:38 -==> Parameters: 12(Integer)
2020-11-09 02:44:38 -<==      Total: 1
2020-11-09 02:45:03 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:45:03 -==> Parameters: 4(Integer)
2020-11-09 02:45:03 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:45:03 -==> Parameters: 4(Integer)
2020-11-09 02:45:03 -<==      Total: 0
2020-11-09 02:45:03 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:45:03 -==> Parameters: 4(Integer)
2020-11-09 02:45:03 -<==      Total: 1
2020-11-09 02:45:03 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:45:03 -==> Parameters: 4(Integer)
2020-11-09 02:45:03 -<==      Total: 1
2020-11-09 02:45:03 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:45:03 -<==      Total: 1
2020-11-09 02:45:03 -==> Parameters: 6(Integer)
2020-11-09 02:45:03 -<==      Total: 1
2020-11-09 02:45:03 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:45:03 -==> Parameters: 6(Integer)
2020-11-09 02:45:04 -<==      Total: 2
2020-11-09 02:45:04 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:45:04 -==> Parameters: 11(Integer)
2020-11-09 02:45:04 -<==      Total: 1
2020-11-09 02:45:04 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:45:04 -==> Parameters: 12(Integer)
2020-11-09 02:45:04 -<==      Total: 1
2020-11-09 02:47:12 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:47:12 -==> Parameters: 4(Integer)
2020-11-09 02:47:12 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:47:12 -==> Parameters: 4(Integer)
2020-11-09 02:47:13 -<==      Total: 1
2020-11-09 02:47:13 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:47:13 -==> Parameters: 4(Integer)
2020-11-09 02:47:13 -<==      Total: 0
2020-11-09 02:47:13 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:47:13 -==> Parameters: 4(Integer)
2020-11-09 02:47:13 -<==      Total: 1
2020-11-09 02:47:13 -<==      Total: 1
2020-11-09 02:47:13 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:47:13 -==> Parameters: 6(Integer)
2020-11-09 02:47:13 -<==      Total: 1
2020-11-09 02:47:13 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:47:13 -==> Parameters: 6(Integer)
2020-11-09 02:47:13 -<==      Total: 2
2020-11-09 02:47:13 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:47:13 -==> Parameters: 11(Integer)
2020-11-09 02:47:13 -<==      Total: 1
2020-11-09 02:47:13 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:47:13 -==> Parameters: 12(Integer)
2020-11-09 02:47:13 -<==      Total: 1
2020-11-09 02:48:10 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:48:10 -==> Parameters: 4(Integer)
2020-11-09 02:48:10 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:48:10 -==> Parameters: 4(Integer)
2020-11-09 02:48:10 -<==      Total: 1
2020-11-09 02:48:10 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:48:10 -==> Parameters: 4(Integer)
2020-11-09 02:48:10 -<==      Total: 0
2020-11-09 02:48:10 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:48:10 -==> Parameters: 4(Integer)
2020-11-09 02:48:11 -<==      Total: 1
2020-11-09 02:48:11 -<==      Total: 1
2020-11-09 02:48:11 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:48:11 -==> Parameters: 6(Integer)
2020-11-09 02:48:11 -<==      Total: 1
2020-11-09 02:48:11 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:48:11 -==> Parameters: 6(Integer)
2020-11-09 02:48:11 -<==      Total: 2
2020-11-09 02:48:11 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:48:11 -==> Parameters: 11(Integer)
2020-11-09 02:48:11 -<==      Total: 1
2020-11-09 02:48:11 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:48:11 -==> Parameters: 12(Integer)
2020-11-09 02:48:11 -<==      Total: 1
2020-11-09 02:48:13 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:48:13 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:48:13 -==> Parameters: 4(Integer)
2020-11-09 02:48:13 -==> Parameters: 4(Integer)
2020-11-09 02:48:13 -<==      Total: 1
2020-11-09 02:48:13 -<==      Total: 0
2020-11-09 02:48:13 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:48:13 -==> Parameters: 4(Integer)
2020-11-09 02:48:13 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:48:13 -==> Parameters: 4(Integer)
2020-11-09 02:48:13 -<==      Total: 1
2020-11-09 02:48:13 -<==      Total: 1
2020-11-09 02:48:13 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:48:13 -==> Parameters: 6(Integer)
2020-11-09 02:48:13 -<==      Total: 1
2020-11-09 02:48:13 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:48:13 -==> Parameters: 6(Integer)
2020-11-09 02:48:13 -<==      Total: 2
2020-11-09 02:48:13 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:48:13 -==> Parameters: 11(Integer)
2020-11-09 02:48:13 -<==      Total: 1
2020-11-09 02:48:13 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:48:13 -==> Parameters: 12(Integer)
2020-11-09 02:48:13 -<==      Total: 1
2020-11-09 02:48:39 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:48:39 -==> Parameters: 5(Integer)
2020-11-09 02:48:39 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:48:39 -==> Parameters: 5(Integer)
2020-11-09 02:48:39 -<==      Total: 1
2020-11-09 02:48:39 -<==      Total: 2
2020-11-09 02:48:39 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:48:39 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:48:39 -==> Parameters: 5(Integer)
2020-11-09 02:48:39 -==> Parameters: 5(Integer)
2020-11-09 02:48:40 -<==      Total: 0
2020-11-09 02:48:40 -<==      Total: 1
2020-11-09 02:48:40 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:48:40 -==> Parameters: 6(Integer)
2020-11-09 02:48:40 -<==      Total: 1
2020-11-09 02:48:40 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:48:40 -==> Parameters: 6(Integer)
2020-11-09 02:48:40 -<==      Total: 2
2020-11-09 02:48:40 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:48:40 -==> Parameters: 11(Integer)
2020-11-09 02:48:40 -<==      Total: 1
2020-11-09 02:48:40 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:48:40 -==> Parameters: 12(Integer)
2020-11-09 02:48:40 -<==      Total: 1
2020-11-09 02:49:57 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:49:57 -==> Parameters: 6(Integer)
2020-11-09 02:49:57 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:49:57 -==> Parameters: 6(Integer)
2020-11-09 02:49:57 -<==      Total: 1
2020-11-09 02:49:57 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:49:57 -==> Parameters: 6(Integer)
2020-11-09 02:49:57 -<==      Total: 2
2020-11-09 02:49:57 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:49:57 -==> Parameters: 6(Integer)
2020-11-09 02:49:57 -<==      Total: 0
2020-11-09 02:49:57 -<==      Total: 1
2020-11-09 02:49:57 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:49:57 -==> Parameters: 6(Integer)
2020-11-09 02:49:57 -<==      Total: 1
2020-11-09 02:49:57 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:49:57 -==> Parameters: 6(Integer)
2020-11-09 02:49:57 -<==      Total: 2
2020-11-09 02:49:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:49:57 -==> Parameters: 11(Integer)
2020-11-09 02:49:57 -<==      Total: 1
2020-11-09 02:49:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:49:57 -==> Parameters: 12(Integer)
2020-11-09 02:49:57 -<==      Total: 1
2020-11-09 02:50:54 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:50:54 -==> Parameters: 6(Integer)
2020-11-09 02:50:54 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:50:54 -==> Parameters: 6(Integer)
2020-11-09 02:50:54 -<==      Total: 1
2020-11-09 02:50:54 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:50:54 -==> Parameters: 6(Integer)
2020-11-09 02:50:54 -<==      Total: 2
2020-11-09 02:50:54 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:50:54 -==> Parameters: 6(Integer)
2020-11-09 02:50:54 -<==      Total: 0
2020-11-09 02:50:54 -<==      Total: 1
2020-11-09 02:50:54 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:50:54 -==> Parameters: 6(Integer)
2020-11-09 02:50:54 -<==      Total: 1
2020-11-09 02:50:54 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:50:54 -==> Parameters: 6(Integer)
2020-11-09 02:50:54 -<==      Total: 2
2020-11-09 02:50:54 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:50:54 -==> Parameters: 11(Integer)
2020-11-09 02:50:54 -<==      Total: 1
2020-11-09 02:50:54 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:50:54 -==> Parameters: 12(Integer)
2020-11-09 02:50:54 -<==      Total: 1
2020-11-09 02:51:28 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:51:28 -==> Parameters: 6(Integer)
2020-11-09 02:51:28 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:51:28 -==> Parameters: 6(Integer)
2020-11-09 02:51:28 -<==      Total: 1
2020-11-09 02:51:28 -<==      Total: 2
2020-11-09 02:51:28 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:51:28 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:51:28 -==> Parameters: 6(Integer)
2020-11-09 02:51:28 -==> Parameters: 6(Integer)
2020-11-09 02:51:28 -<==      Total: 0
2020-11-09 02:51:28 -<==      Total: 1
2020-11-09 02:51:28 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:51:28 -==> Parameters: 6(Integer)
2020-11-09 02:51:28 -<==      Total: 1
2020-11-09 02:51:28 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:51:28 -==> Parameters: 6(Integer)
2020-11-09 02:51:28 -<==      Total: 2
2020-11-09 02:51:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:51:28 -==> Parameters: 11(Integer)
2020-11-09 02:51:29 -<==      Total: 1
2020-11-09 02:51:29 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:51:29 -==> Parameters: 12(Integer)
2020-11-09 02:51:29 -<==      Total: 1
2020-11-09 02:52:03 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:52:03 -==> Parameters: 6(Integer)
2020-11-09 02:52:03 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:52:03 -==> Parameters: 6(Integer)
2020-11-09 02:52:03 -<==      Total: 2
2020-11-09 02:52:03 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:52:03 -<==      Total: 1
2020-11-09 02:52:03 -==> Parameters: 6(Integer)
2020-11-09 02:52:03 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:52:03 -==> Parameters: 6(Integer)
2020-11-09 02:52:03 -<==      Total: 1
2020-11-09 02:52:03 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:52:03 -==> Parameters: 6(Integer)
2020-11-09 02:52:03 -<==      Total: 0
2020-11-09 02:52:03 -<==      Total: 1
2020-11-09 02:52:03 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:52:03 -==> Parameters: 6(Integer)
2020-11-09 02:52:03 -<==      Total: 2
2020-11-09 02:52:03 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:52:03 -==> Parameters: 11(Integer)
2020-11-09 02:52:03 -<==      Total: 1
2020-11-09 02:52:03 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:52:03 -==> Parameters: 12(Integer)
2020-11-09 02:52:03 -<==      Total: 1
2020-11-09 02:53:03 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:53:03 -==> Parameters: 6(Integer)
2020-11-09 02:53:03 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:53:03 -==> Parameters: 6(Integer)
2020-11-09 02:53:03 -<==      Total: 2
2020-11-09 02:53:03 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:53:03 -==> Parameters: 6(Integer)
2020-11-09 02:53:03 -<==      Total: 1
2020-11-09 02:53:03 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:53:03 -==> Parameters: 6(Integer)
2020-11-09 02:53:03 -<==      Total: 1
2020-11-09 02:53:03 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:53:03 -==> Parameters: 6(Integer)
2020-11-09 02:53:03 -<==      Total: 0
2020-11-09 02:53:03 -<==      Total: 1
2020-11-09 02:53:03 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:53:03 -==> Parameters: 6(Integer)
2020-11-09 02:53:04 -<==      Total: 2
2020-11-09 02:53:04 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:53:04 -==> Parameters: 11(Integer)
2020-11-09 02:53:04 -<==      Total: 1
2020-11-09 02:53:04 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:53:04 -==> Parameters: 12(Integer)
2020-11-09 02:53:04 -<==      Total: 1
2020-11-09 02:54:10 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:54:10 -==> Parameters: 6(Integer)
2020-11-09 02:54:10 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:54:10 -==> Parameters: 6(Integer)
2020-11-09 02:54:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:54:10 -==> Parameters: 2(Integer)
2020-11-09 02:54:10 -<==      Total: 1
2020-11-09 02:54:10 -<==      Total: 2
2020-11-09 02:54:10 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:54:10 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:54:10 -==> Parameters: 6(Integer)
2020-11-09 02:54:10 -==> Parameters: 6(Integer)
2020-11-09 02:54:10 -<==      Total: 1
2020-11-09 02:54:10 -Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2020-11-09 02:54:10 -<==      Total: 1
2020-11-09 02:54:10 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:54:10 -==> Parameters: 6(Integer)
2020-11-09 02:54:10 -<==      Total: 0
2020-11-09 02:54:10 -<==      Total: 1
2020-11-09 02:54:10 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:54:10 -==> Parameters: 6(Integer)
2020-11-09 02:54:10 -<==      Total: 2
2020-11-09 02:54:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:54:10 -==> Parameters: 11(Integer)
2020-11-09 02:54:10 -<==      Total: 1
2020-11-09 02:54:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:54:10 -==> Parameters: 12(Integer)
2020-11-09 02:54:10 -<==      Total: 1
2020-11-09 02:54:51 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:54:51 -==> Parameters: 6(Integer)
2020-11-09 02:54:51 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:54:51 -==> Parameters: 6(Integer)
2020-11-09 02:54:51 -<==      Total: 1
2020-11-09 02:54:51 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:54:51 -==> Parameters: 6(Integer)
2020-11-09 02:54:51 -<==      Total: 2
2020-11-09 02:54:51 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:54:51 -==> Parameters: 6(Integer)
2020-11-09 02:54:51 -<==      Total: 0
2020-11-09 02:54:51 -<==      Total: 1
2020-11-09 02:54:51 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:54:51 -==> Parameters: 6(Integer)
2020-11-09 02:54:51 -<==      Total: 1
2020-11-09 02:54:51 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:54:51 -==> Parameters: 6(Integer)
2020-11-09 02:54:51 -<==      Total: 2
2020-11-09 02:54:51 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:54:51 -==> Parameters: 11(Integer)
2020-11-09 02:54:51 -<==      Total: 1
2020-11-09 02:54:51 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:54:51 -==> Parameters: 12(Integer)
2020-11-09 02:54:51 -<==      Total: 1
2020-11-09 02:54:52 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:54:52 -==> Parameters: 6(Integer)
2020-11-09 02:54:52 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:54:52 -==> Parameters: 6(Integer)
2020-11-09 02:54:52 -<==      Total: 1
2020-11-09 02:54:52 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:54:52 -==> Parameters: 6(Integer)
2020-11-09 02:54:52 -<==      Total: 2
2020-11-09 02:54:52 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:54:52 -==> Parameters: 6(Integer)
2020-11-09 02:54:52 -<==      Total: 0
2020-11-09 02:54:52 -<==      Total: 1
2020-11-09 02:54:52 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:54:52 -==> Parameters: 6(Integer)
2020-11-09 02:54:52 -<==      Total: 1
2020-11-09 02:54:52 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:54:52 -==> Parameters: 6(Integer)
2020-11-09 02:54:52 -<==      Total: 2
2020-11-09 02:54:52 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:54:52 -==> Parameters: 11(Integer)
2020-11-09 02:54:52 -<==      Total: 1
2020-11-09 02:54:52 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:54:52 -==> Parameters: 12(Integer)
2020-11-09 02:54:52 -<==      Total: 1
2020-11-09 02:55:11 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:55:11 -==> Parameters: 2(Integer)
2020-11-09 02:55:11 -<==      Total: 1
2020-11-09 02:55:11 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 02:55:11 -==> Parameters: 6(Integer)
2020-11-09 02:55:11 -<==      Total: 3
2020-11-09 02:55:14 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:55:14 -==> Parameters: 5(Integer)
2020-11-09 02:55:14 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:55:14 -==> Parameters: 5(Integer)
2020-11-09 02:55:14 -<==      Total: 1
2020-11-09 02:55:14 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:55:14 -==> Parameters: 5(Integer)
2020-11-09 02:55:14 -<==      Total: 2
2020-11-09 02:55:14 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:55:14 -==> Parameters: 5(Integer)
2020-11-09 02:55:14 -<==      Total: 0
2020-11-09 02:55:14 -<==      Total: 1
2020-11-09 02:55:14 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:55:14 -==> Parameters: 6(Integer)
2020-11-09 02:55:15 -<==      Total: 1
2020-11-09 02:55:15 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:55:15 -==> Parameters: 6(Integer)
2020-11-09 02:55:15 -<==      Total: 2
2020-11-09 02:55:15 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:55:15 -==> Parameters: 11(Integer)
2020-11-09 02:55:15 -<==      Total: 1
2020-11-09 02:55:15 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:55:15 -==> Parameters: 12(Integer)
2020-11-09 02:55:15 -<==      Total: 1
2020-11-09 02:55:34 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:55:34 -==> Parameters: 5(Integer)
2020-11-09 02:55:34 -<==      Total: 1
2020-11-09 02:55:34 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:55:34 -==> Parameters: 6(Integer)
2020-11-09 02:55:34 -<==      Total: 1
2020-11-09 02:55:34 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":100,"userId":"MF20320102"}
2020-11-09 02:55:34 -解析到一条数据:{"id":12,"name":"ddd","score":60,"userId":"MF20123232"}
2020-11-09 02:55:34 -2条数据，开始存储数据库！
2020-11-09 02:55:34 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:55:34 -==> Parameters: 11(Integer), 5(Integer)
2020-11-09 02:55:34 -<==      Total: 1
2020-11-09 02:55:34 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:55:34 -==> Parameters: 100(Integer), 5(Integer), 11(Integer)
2020-11-09 02:55:34 -<==    Updates: 1
2020-11-09 02:55:34 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:55:34 -==> Parameters: 100(Integer), 5(Integer), 11(Integer)
2020-11-09 02:55:34 -<==    Updates: 1
2020-11-09 02:55:34 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:55:34 -==> Parameters: 12(Integer), 5(Integer)
2020-11-09 02:55:34 -<==      Total: 1
2020-11-09 02:55:34 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:55:34 -==> Parameters: 60(Integer), 5(Integer), 12(Integer)
2020-11-09 02:55:34 -<==    Updates: 1
2020-11-09 02:55:34 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:55:34 -==> Parameters: 60(Integer), 5(Integer), 12(Integer)
2020-11-09 02:55:34 -<==    Updates: 1
2020-11-09 02:55:34 -存储数据库成功！
2020-11-09 02:55:34 -所有数据解析完成！
2020-11-09 02:55:36 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:55:36 -==> Parameters: 5(Integer)
2020-11-09 02:55:36 -<==      Total: 2
2020-11-09 02:55:36 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:55:36 -==> Parameters: 5(Integer)
2020-11-09 02:55:36 -<==      Total: 1
2020-11-09 02:55:36 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:55:36 -==> Parameters: 6(Integer)
2020-11-09 02:55:36 -<==      Total: 1
2020-11-09 02:55:36 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:55:36 -==> Parameters: 6(Integer)
2020-11-09 02:55:36 -<==      Total: 2
2020-11-09 02:55:36 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:55:36 -==> Parameters: 11(Integer)
2020-11-09 02:55:36 -<==      Total: 1
2020-11-09 02:55:36 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:55:36 -==> Parameters: 12(Integer)
2020-11-09 02:55:36 -<==      Total: 1
2020-11-09 02:55:52 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:55:52 -==> Parameters: 5(Integer)
2020-11-09 02:55:52 -<==      Total: 1
2020-11-09 02:55:52 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:55:52 -==> Parameters: 6(Integer)
2020-11-09 02:55:52 -<==      Total: 1
2020-11-09 02:55:52 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":0,"userId":"MF20320102"}
2020-11-09 02:55:52 -解析到一条数据:{"id":12,"name":"ddd","score":0,"userId":"MF20123232"}
2020-11-09 02:55:52 -2条数据，开始存储数据库！
2020-11-09 02:55:52 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:55:52 -==> Parameters: 11(Integer), 5(Integer)
2020-11-09 02:55:52 -<==      Total: 1
2020-11-09 02:55:52 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:55:52 -==> Parameters: 0(Integer), 5(Integer), 11(Integer)
2020-11-09 02:55:53 -<==    Updates: 1
2020-11-09 02:55:53 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:55:53 -==> Parameters: 0(Integer), 5(Integer), 11(Integer)
2020-11-09 02:55:53 -<==    Updates: 1
2020-11-09 02:55:53 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 02:55:53 -==> Parameters: 12(Integer), 5(Integer)
2020-11-09 02:55:53 -<==      Total: 1
2020-11-09 02:55:53 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:55:53 -==> Parameters: 0(Integer), 5(Integer), 12(Integer)
2020-11-09 02:55:53 -<==    Updates: 1
2020-11-09 02:55:53 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 02:55:53 -==> Parameters: 0(Integer), 5(Integer), 12(Integer)
2020-11-09 02:55:53 -<==    Updates: 1
2020-11-09 02:55:53 -存储数据库成功！
2020-11-09 02:55:53 -所有数据解析完成！
2020-11-09 02:55:54 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:55:54 -==> Parameters: 5(Integer)
2020-11-09 02:55:54 -<==      Total: 2
2020-11-09 02:55:54 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:55:54 -==> Parameters: 5(Integer)
2020-11-09 02:55:54 -<==      Total: 1
2020-11-09 02:55:54 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:55:54 -==> Parameters: 6(Integer)
2020-11-09 02:55:54 -<==      Total: 1
2020-11-09 02:55:54 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:55:54 -==> Parameters: 6(Integer)
2020-11-09 02:55:54 -<==      Total: 2
2020-11-09 02:55:54 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:55:54 -==> Parameters: 11(Integer)
2020-11-09 02:55:54 -<==      Total: 1
2020-11-09 02:55:54 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:55:54 -==> Parameters: 12(Integer)
2020-11-09 02:55:54 -<==      Total: 1
2020-11-09 02:57:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:57:10 -==> Parameters: 2(Integer)
2020-11-09 02:57:10 -<==      Total: 1
2020-11-09 02:57:10 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 02:57:10 -==> Parameters: 2(Integer)
2020-11-09 02:57:10 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:57:10 -==> Parameters: 5(Integer)
2020-11-09 02:57:10 -<==      Total: 3
2020-11-09 02:57:10 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 02:57:10 -==> Parameters: 5(Integer)
2020-11-09 02:57:10 -<==      Total: 1
2020-11-09 02:57:10 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:57:10 -==> Parameters: 5(Integer)
2020-11-09 02:57:10 -<==      Total: 2
2020-11-09 02:57:10 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:57:10 -==> Parameters: 5(Integer)
2020-11-09 02:57:10 -<==      Total: 0
2020-11-09 02:57:10 -<==      Total: 1
2020-11-09 02:57:10 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:57:10 -==> Parameters: 6(Integer)
2020-11-09 02:57:10 -<==      Total: 1
2020-11-09 02:57:10 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 02:57:10 -==> Parameters: 6(Integer)
2020-11-09 02:57:10 -<==      Total: 2
2020-11-09 02:57:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:57:10 -==> Parameters: 11(Integer)
2020-11-09 02:57:10 -<==      Total: 1
2020-11-09 02:57:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:57:10 -==> Parameters: 12(Integer)
2020-11-09 02:57:10 -<==      Total: 1
2020-11-09 02:58:03 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 02:58:03 -==> Parameters: 3304701807@qq.com(String)
2020-11-09 02:58:03 -<==      Total: 1
2020-11-09 02:58:03 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 02:58:03 -==> Parameters: 3304701807@qq.com(String)
2020-11-09 02:58:03 -<==      Total: 1
2020-11-09 02:58:08 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 02:58:08 -==> Parameters: 12(Integer)
2020-11-09 02:58:08 -<==      Total: 1
2020-11-09 02:58:08 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:58:08 -==> Parameters: 6(Integer)
2020-11-09 02:58:08 -<==      Total: 1
2020-11-09 02:58:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:58:10 -==> Parameters: 12(Integer)
2020-11-09 02:58:10 -<==      Total: 1
2020-11-09 02:58:10 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 02:58:10 -==> Parameters: 6(Integer)
2020-11-09 02:58:10 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 02:58:10 -==> Parameters: 2(Integer)
2020-11-09 02:58:10 -<==      Total: 3
2020-11-09 02:58:10 -<==      Total: 1
2020-11-09 02:58:10 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 02:58:10 -==> Parameters: 2(Integer)
2020-11-09 02:58:10 -<==      Total: 2
2020-11-09 02:58:10 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 02:58:10 -==> Parameters: 2(Integer)
2020-11-09 02:58:10 -<==      Total: 3
2020-11-09 02:58:13 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 02:58:13 -==> Parameters: 4(Integer), 12(Integer)
2020-11-09 02:58:13 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:58:13 -==> Parameters: 4(Integer)
2020-11-09 02:58:13 -<==      Total: 0
2020-11-09 02:58:13 -<==      Total: 1
2020-11-09 02:58:13 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:58:13 -==> Parameters: 4(Integer)
2020-11-09 02:58:13 -<==      Total: 1
2020-11-09 02:58:19 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 02:58:19 -==> Parameters: 5(Integer), 12(Integer)
2020-11-09 02:58:19 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:58:19 -==> Parameters: 5(Integer)
2020-11-09 02:58:19 -<==      Total: 1
2020-11-09 02:58:19 -<==      Total: 1
2020-11-09 02:58:19 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:58:19 -==> Parameters: 5(Integer)
2020-11-09 02:58:19 -<==      Total: 0
2020-11-09 02:58:42 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 02:58:42 -==> Parameters: 1586880804@163.com(String)
2020-11-09 02:58:42 -<==      Total: 0
2020-11-09 02:58:42 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at cn.org.test.controller.UserController.loginPwd(UserController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 02:58:43 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 02:58:43 -==> Parameters: 1586880804@163.com(String)
2020-11-09 02:58:43 -<==      Total: 0
2020-11-09 02:58:43 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at cn.org.test.controller.UserController.loginPwd(UserController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 02:58:51 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 02:58:51 -==> Parameters: 15868808504@163.com(String)
2020-11-09 02:58:51 -<==      Total: 1
2020-11-09 02:58:51 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 02:58:51 -==> Parameters: 15868808504@163.com(String)
2020-11-09 02:58:51 -<==      Total: 1
2020-11-09 02:58:56 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 02:58:56 -==> Parameters: 11(Integer)
2020-11-09 02:58:56 -<==      Total: 2
2020-11-09 02:58:56 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:58:56 -==> Parameters: 6(Integer)
2020-11-09 02:58:56 -<==      Total: 1
2020-11-09 02:58:56 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 02:58:56 -==> Parameters: 1(Integer)
2020-11-09 02:58:56 -<==      Total: 1
2020-11-09 02:58:58 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 02:58:58 -==> Parameters: 6(Integer)
2020-11-09 02:58:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 02:58:58 -==> Parameters: 11(Integer)
2020-11-09 02:58:58 -<==      Total: 3
2020-11-09 02:58:58 -<==      Total: 1
2020-11-09 02:58:58 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 02:58:58 -==> Parameters: 2(Integer)
2020-11-09 02:58:58 -<==      Total: 1
2020-11-09 02:58:58 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 02:58:58 -==> Parameters: 2(Integer)
2020-11-09 02:58:58 -<==      Total: 2
2020-11-09 02:58:58 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 02:58:58 -==> Parameters: 2(Integer)
2020-11-09 02:58:58 -<==      Total: 3
2020-11-09 02:59:01 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 02:59:01 -==> Parameters: 4(Integer)
2020-11-09 02:59:01 -<==      Total: 1
2020-11-09 02:59:01 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 02:59:01 -==> Parameters: 4(Integer)
2020-11-09 02:59:01 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 02:59:01 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 02:59:01 -<==      Total: 1
2020-11-09 02:59:01 -<==      Total: 0
2020-11-09 03:02:13 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 03:02:13 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 03:02:13 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 03:02:13 -==> Parameters: 4(Integer)
2020-11-09 03:02:13 -<==      Total: 0
2020-11-09 03:02:13 -<==      Total: 1
2020-11-09 03:02:13 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 03:02:13 -==> Parameters: 4(Integer)
2020-11-09 03:02:13 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 03:02:13 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 03:02:13 -<==      Total: 0
2020-11-09 03:02:13 -<==      Total: 1
2020-11-09 03:02:13 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 03:02:13 -==> Parameters: 4(Integer)
2020-11-09 03:02:13 -<==      Total: 1
2020-11-09 03:02:13 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 03:02:13 -==> Parameters: 4(Integer)
2020-11-09 03:02:13 -<==      Total: 1
2020-11-09 03:02:16 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 03:02:16 -==> Parameters: 4(Integer)
2020-11-09 03:02:16 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 03:02:16 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 03:02:16 -<==      Total: 1
2020-11-09 03:02:16 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 03:02:16 -==> Parameters: 4(Integer)
2020-11-09 03:02:16 -<==      Total: 0
2020-11-09 03:02:16 -<==      Total: 1
2020-11-09 03:02:21 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 03:02:21 -==> Parameters: 5(Integer), 11(Integer)
2020-11-09 03:02:21 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 03:02:21 -==> Parameters: 5(Integer)
2020-11-09 03:02:21 -<==      Total: 1
2020-11-09 03:02:21 -<==      Total: 1
2020-11-09 03:02:21 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 03:02:21 -==> Parameters: 5(Integer)
2020-11-09 03:02:21 -<==      Total: 0
2020-11-09 03:02:28 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 03:02:28 -==> Parameters: 6(Integer), 11(Integer)
2020-11-09 03:02:28 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 03:02:28 -==> Parameters: 6(Integer)
2020-11-09 03:02:28 -<==      Total: 1
2020-11-09 03:02:28 -<==      Total: 1
2020-11-09 03:02:28 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 03:02:28 -==> Parameters: 6(Integer)
2020-11-09 03:02:28 -<==      Total: 0
2020-11-09 03:02:32 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 03:02:32 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 03:02:32 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 03:02:32 -==> Parameters: 4(Integer)
2020-11-09 03:02:32 -<==      Total: 0
2020-11-09 03:02:32 -<==      Total: 1
2020-11-09 03:02:32 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 03:02:32 -==> Parameters: 4(Integer)
2020-11-09 03:02:32 -<==      Total: 1
2020-11-09 03:02:40 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 03:02:40 -==> Parameters: 6(Integer)
2020-11-09 03:02:40 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 03:02:40 -==> Parameters: 6(Integer), 11(Integer)
2020-11-09 03:02:40 -<==      Total: 1
2020-11-09 03:02:40 -<==      Total: 1
2020-11-09 03:02:40 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 03:02:40 -==> Parameters: 6(Integer)
2020-11-09 03:02:40 -<==      Total: 0
2020-11-09 12:24:04 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 02:29:10 CST 2020]; root of context hierarchy
2020-11-09 12:24:04 -Unregistering JMX-exposed beans on shutdown
2020-11-09 14:55:46 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 2858 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 14:55:46 -No active profile set, falling back to default profiles: default
2020-11-09 14:55:46 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 14:55:46 CST 2020]; root of context hierarchy
2020-11-09 14:55:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 14:55:47 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 14:55:47 -Root WebApplicationContext: initialization completed in 1241 ms
2020-11-09 14:55:47 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 14:55:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 14:55:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 14:55:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 14:55:47 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 14:55:48 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 14:55:46 CST 2020]; root of context hierarchy
2020-11-09 14:55:48 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 14:55:48 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 14:55:48 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 14:55:48 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 14:55:48 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 14:55:48 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 14:55:48 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 14:55:48 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 14:55:48 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 14:55:48 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 14:55:48 -Mapped "{[/tch/uploadTaskScore],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadTaskScore(java.lang.Integer,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 14:55:48 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 14:55:48 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 14:55:48 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 14:55:48 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 14:55:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 14:55:48 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 14:55:48 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 14:55:48 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 14:55:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 14:55:48 -Registering beans for JMX exposure on startup
2020-11-09 14:55:48 -Tomcat started on port(s): 8080 (http)
2020-11-09 14:55:48 -Started SpringBootUserApplication in 2.684 seconds (JVM running for 3.238)
2020-11-09 14:56:13 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 14:56:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2020-11-09 14:56:17 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 14:56:17 -==> Parameters: 11(Integer)
2020-11-09 14:56:17 -<==      Total: 1
2020-11-09 14:56:17 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 15:05:21 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 15:05:21 -==> Parameters: 15868808504@163.com(String)
2020-11-09 15:05:21 -<==      Total: 1
2020-11-09 15:05:26 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 15:05:26 -==> Parameters: 15868808504@163.com(String)
2020-11-09 15:05:26 -<==      Total: 1
2020-11-09 15:05:30 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 15:05:30 -==> Parameters: 15868808504@163.com(String)
2020-11-09 15:05:30 -<==      Total: 1
2020-11-09 15:05:30 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 15:05:30 -==> Parameters: 15868808504@163.com(String)
2020-11-09 15:05:30 -<==      Total: 1
2020-11-09 15:28:50 ---------------------start registerStudent----------------------
2020-11-09 15:28:50 -verifyCodeEtAemn
2020-11-09 15:28:50 -codeEtAemn
2020-11-09 15:28:57 ---------------------start registerStudent----------------------
2020-11-09 15:28:57 -verifyCodeEtAemn
2020-11-09 15:28:57 -codeEtAemn
2020-11-09 15:29:44 ---------------------start registerStudent----------------------
2020-11-09 15:29:44 -verifyCodeEtAemn
2020-11-09 15:29:44 -codenull
2020-11-09 15:45:04 -==>  Preparing: INSERT into USER(user_id,user_name,password,address,age,role_id) values(?, ?, ?,?,?,?) 
2020-11-09 15:45:04 -==> Parameters: MF363527(String), 王小明(String), 123(String), mf20320102@smail.nju.edu.cn(String), 0(Integer), 0(Integer)
2020-11-09 15:45:04 -<==    Updates: 1
2020-11-09 15:45:04 ---------------------user registered----------------------
2020-11-09 15:45:10 -==>  Preparing: INSERT into USER(user_id,user_name,password,address,age,role_id) values(?, ?, ?,?,?,?) 
2020-11-09 15:45:10 -==> Parameters: MF363527(String), 王小明(String), 123(String), mf20320102@smail.nju.edu.cn(String), 0(Integer), 0(Integer)
2020-11-09 15:45:11 -<==    Updates: 1
2020-11-09 15:45:11 ---------------------user registered----------------------
2020-11-09 15:45:19 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 15:45:19 -==> Parameters: 15868808504@163.com(String)
2020-11-09 15:45:19 -<==      Total: 1
2020-11-09 15:45:19 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 15:45:19 -==> Parameters: 15868808504@163.com(String)
2020-11-09 15:45:19 -<==      Total: 1
2020-11-09 15:45:22 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:45:22 -==> Parameters: 
2020-11-09 15:45:22 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:45:22 -==> Parameters: 11(Integer)
2020-11-09 15:45:22 -<==      Total: 3
2020-11-09 15:45:22 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:45:22 -==> Parameters: 3(Integer)
2020-11-09 15:45:22 -<==      Total: 2
2020-11-09 15:45:22 -<==      Total: 1
2020-11-09 15:45:22 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:45:22 -==> Parameters: 5(Integer)
2020-11-09 15:45:22 -<==      Total: 1
2020-11-09 15:45:22 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:45:22 -==> Parameters: 2(Integer)
2020-11-09 15:45:22 -<==      Total: 1
2020-11-09 15:45:22 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:45:22 -==> Parameters: 3(Integer)
2020-11-09 15:45:22 -<==      Total: 1
2020-11-09 15:45:22 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:45:22 -==> Parameters: 2(Integer)
2020-11-09 15:45:22 -<==      Total: 1
2020-11-09 15:45:22 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:45:22 -==> Parameters: 2(Integer)
2020-11-09 15:45:22 -<==      Total: 1
2020-11-09 15:45:34 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:45:34 -==> Parameters: 11(Integer)
2020-11-09 15:45:34 -<==      Total: 2
2020-11-09 15:45:34 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 15:45:34 -==> Parameters: 6(Integer)
2020-11-09 15:45:34 -<==      Total: 1
2020-11-09 15:45:34 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 15:45:34 -==> Parameters: 1(Integer)
2020-11-09 15:45:34 -<==      Total: 1
2020-11-09 15:45:36 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:45:36 -==> Parameters: 
2020-11-09 15:45:36 -<==      Total: 3
2020-11-09 15:45:36 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:45:36 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:45:36 -==> Parameters: 3(Integer)
2020-11-09 15:45:36 -==> Parameters: 11(Integer)
2020-11-09 15:45:36 -<==      Total: 1
2020-11-09 15:45:36 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:45:36 -==> Parameters: 5(Integer)
2020-11-09 15:45:36 -<==      Total: 2
2020-11-09 15:45:36 -<==      Total: 1
2020-11-09 15:45:36 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:45:36 -==> Parameters: 2(Integer)
2020-11-09 15:45:36 -<==      Total: 1
2020-11-09 15:45:36 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:45:36 -==> Parameters: 3(Integer)
2020-11-09 15:45:36 -<==      Total: 1
2020-11-09 15:45:36 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:45:36 -==> Parameters: 2(Integer)
2020-11-09 15:45:36 -<==      Total: 1
2020-11-09 15:45:36 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:45:36 -==> Parameters: 2(Integer)
2020-11-09 15:45:36 -<==      Total: 1
2020-11-09 15:51:48 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:51:48 -==> Parameters: 
2020-11-09 15:51:48 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:51:48 -==> Parameters: 11(Integer)
2020-11-09 15:51:48 -<==      Total: 3
2020-11-09 15:51:48 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:51:48 -==> Parameters: 3(Integer)
2020-11-09 15:51:48 -<==      Total: 2
2020-11-09 15:51:48 -<==      Total: 1
2020-11-09 15:51:48 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:51:48 -==> Parameters: 5(Integer)
2020-11-09 15:51:48 -<==      Total: 1
2020-11-09 15:51:48 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:51:48 -==> Parameters: 2(Integer)
2020-11-09 15:51:48 -<==      Total: 1
2020-11-09 15:51:48 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:51:48 -==> Parameters: 3(Integer)
2020-11-09 15:51:48 -<==      Total: 1
2020-11-09 15:51:48 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:51:48 -==> Parameters: 2(Integer)
2020-11-09 15:51:48 -<==      Total: 1
2020-11-09 15:51:48 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:51:48 -==> Parameters: 2(Integer)
2020-11-09 15:51:48 -<==      Total: 1
2020-11-09 15:52:27 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:52:27 -==> Parameters: 
2020-11-09 15:52:27 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:52:27 -==> Parameters: 11(Integer)
2020-11-09 15:52:27 -<==      Total: 3
2020-11-09 15:52:27 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:27 -==> Parameters: 3(Integer)
2020-11-09 15:52:27 -<==      Total: 2
2020-11-09 15:52:27 -<==      Total: 1
2020-11-09 15:52:27 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:27 -==> Parameters: 5(Integer)
2020-11-09 15:52:27 -<==      Total: 1
2020-11-09 15:52:27 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:27 -==> Parameters: 2(Integer)
2020-11-09 15:52:27 -<==      Total: 1
2020-11-09 15:52:27 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:27 -==> Parameters: 3(Integer)
2020-11-09 15:52:27 -<==      Total: 1
2020-11-09 15:52:27 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:27 -==> Parameters: 2(Integer)
2020-11-09 15:52:27 -<==      Total: 1
2020-11-09 15:52:27 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:27 -==> Parameters: 2(Integer)
2020-11-09 15:52:27 -<==      Total: 1
2020-11-09 15:52:42 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:52:42 -==> Parameters: 
2020-11-09 15:52:42 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:52:42 -==> Parameters: 11(Integer)
2020-11-09 15:52:42 -<==      Total: 2
2020-11-09 15:52:42 -<==      Total: 3
2020-11-09 15:52:42 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:42 -==> Parameters: 3(Integer)
2020-11-09 15:52:42 -<==      Total: 1
2020-11-09 15:52:42 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:42 -==> Parameters: 5(Integer)
2020-11-09 15:52:42 -<==      Total: 1
2020-11-09 15:52:42 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:42 -==> Parameters: 2(Integer)
2020-11-09 15:52:42 -<==      Total: 1
2020-11-09 15:52:42 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:42 -==> Parameters: 3(Integer)
2020-11-09 15:52:42 -<==      Total: 1
2020-11-09 15:52:42 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:42 -==> Parameters: 2(Integer)
2020-11-09 15:52:42 -<==      Total: 1
2020-11-09 15:52:42 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:42 -==> Parameters: 2(Integer)
2020-11-09 15:52:43 -<==      Total: 1
2020-11-09 15:52:49 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:52:49 -==> Parameters: 11(Integer)
2020-11-09 15:52:49 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:52:49 -==> Parameters: 
2020-11-09 15:52:49 -<==      Total: 2
2020-11-09 15:52:49 -<==      Total: 3
2020-11-09 15:52:49 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:49 -==> Parameters: 3(Integer)
2020-11-09 15:52:49 -<==      Total: 1
2020-11-09 15:52:49 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:49 -==> Parameters: 5(Integer)
2020-11-09 15:52:49 -<==      Total: 1
2020-11-09 15:52:49 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:49 -==> Parameters: 2(Integer)
2020-11-09 15:52:49 -<==      Total: 1
2020-11-09 15:52:49 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:49 -==> Parameters: 3(Integer)
2020-11-09 15:52:49 -<==      Total: 1
2020-11-09 15:52:49 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:49 -==> Parameters: 2(Integer)
2020-11-09 15:52:49 -<==      Total: 1
2020-11-09 15:52:49 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:49 -==> Parameters: 2(Integer)
2020-11-09 15:52:49 -<==      Total: 1
2020-11-09 15:52:57 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:52:57 -==> Parameters: 
2020-11-09 15:52:57 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:52:57 -==> Parameters: 11(Integer)
2020-11-09 15:52:57 -<==      Total: 3
2020-11-09 15:52:57 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:57 -==> Parameters: 3(Integer)
2020-11-09 15:52:57 -<==      Total: 2
2020-11-09 15:52:57 -<==      Total: 1
2020-11-09 15:52:57 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:57 -==> Parameters: 5(Integer)
2020-11-09 15:52:57 -<==      Total: 1
2020-11-09 15:52:57 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:57 -==> Parameters: 2(Integer)
2020-11-09 15:52:57 -<==      Total: 1
2020-11-09 15:52:57 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:57 -==> Parameters: 3(Integer)
2020-11-09 15:52:57 -<==      Total: 1
2020-11-09 15:52:57 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:52:57 -==> Parameters: 2(Integer)
2020-11-09 15:52:57 -<==      Total: 1
2020-11-09 15:52:57 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:52:57 -==> Parameters: 2(Integer)
2020-11-09 15:52:57 -<==      Total: 1
2020-11-09 15:53:23 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:53:23 -==> Parameters: 
2020-11-09 15:53:23 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:53:23 -==> Parameters: 11(Integer)
2020-11-09 15:53:23 -<==      Total: 3
2020-11-09 15:53:23 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:53:23 -==> Parameters: 3(Integer)
2020-11-09 15:53:23 -<==      Total: 2
2020-11-09 15:53:23 -<==      Total: 1
2020-11-09 15:53:23 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:53:23 -==> Parameters: 5(Integer)
2020-11-09 15:53:23 -<==      Total: 1
2020-11-09 15:53:23 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:53:23 -==> Parameters: 2(Integer)
2020-11-09 15:53:23 -<==      Total: 1
2020-11-09 15:53:23 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:53:23 -==> Parameters: 3(Integer)
2020-11-09 15:53:23 -<==      Total: 1
2020-11-09 15:53:23 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:53:23 -==> Parameters: 2(Integer)
2020-11-09 15:53:23 -<==      Total: 1
2020-11-09 15:53:23 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:53:23 -==> Parameters: 2(Integer)
2020-11-09 15:53:23 -<==      Total: 1
2020-11-09 15:53:32 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:53:32 -==> Parameters: 11(Integer)
2020-11-09 15:53:32 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:53:32 -==> Parameters: 
2020-11-09 15:53:33 -<==      Total: 2
2020-11-09 15:53:33 -<==      Total: 3
2020-11-09 15:53:33 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:53:33 -==> Parameters: 3(Integer)
2020-11-09 15:53:33 -<==      Total: 1
2020-11-09 15:53:33 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:53:33 -==> Parameters: 5(Integer)
2020-11-09 15:53:33 -<==      Total: 1
2020-11-09 15:53:33 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:53:33 -==> Parameters: 2(Integer)
2020-11-09 15:53:33 -<==      Total: 1
2020-11-09 15:53:33 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:53:33 -==> Parameters: 3(Integer)
2020-11-09 15:53:33 -<==      Total: 1
2020-11-09 15:53:33 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:53:33 -==> Parameters: 2(Integer)
2020-11-09 15:53:33 -<==      Total: 1
2020-11-09 15:53:33 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:53:33 -==> Parameters: 2(Integer)
2020-11-09 15:53:33 -<==      Total: 1
2020-11-09 15:54:33 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:54:33 -==> Parameters: 11(Integer)
2020-11-09 15:54:33 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:54:33 -==> Parameters: 
2020-11-09 15:54:33 -<==      Total: 2
2020-11-09 15:54:33 -<==      Total: 3
2020-11-09 15:54:33 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:54:33 -==> Parameters: 3(Integer)
2020-11-09 15:54:33 -<==      Total: 1
2020-11-09 15:54:33 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:54:33 -==> Parameters: 5(Integer)
2020-11-09 15:54:33 -<==      Total: 1
2020-11-09 15:54:33 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:54:33 -==> Parameters: 2(Integer)
2020-11-09 15:54:33 -<==      Total: 1
2020-11-09 15:54:33 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:54:33 -==> Parameters: 3(Integer)
2020-11-09 15:54:33 -<==      Total: 1
2020-11-09 15:54:33 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:54:33 -==> Parameters: 2(Integer)
2020-11-09 15:54:33 -<==      Total: 1
2020-11-09 15:54:33 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:54:33 -==> Parameters: 2(Integer)
2020-11-09 15:54:33 -<==      Total: 1
2020-11-09 15:54:43 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:54:43 -==> Parameters: 11(Integer)
2020-11-09 15:54:43 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:54:43 -==> Parameters: 
2020-11-09 15:54:43 -<==      Total: 2
2020-11-09 15:54:43 -<==      Total: 3
2020-11-09 15:54:43 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:54:43 -==> Parameters: 3(Integer)
2020-11-09 15:54:43 -<==      Total: 1
2020-11-09 15:54:43 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:54:43 -==> Parameters: 5(Integer)
2020-11-09 15:54:43 -<==      Total: 1
2020-11-09 15:54:43 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:54:43 -==> Parameters: 2(Integer)
2020-11-09 15:54:43 -<==      Total: 1
2020-11-09 15:54:43 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:54:43 -==> Parameters: 3(Integer)
2020-11-09 15:54:43 -<==      Total: 1
2020-11-09 15:54:43 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:54:43 -==> Parameters: 2(Integer)
2020-11-09 15:54:43 -<==      Total: 1
2020-11-09 15:54:43 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:54:43 -==> Parameters: 2(Integer)
2020-11-09 15:54:43 -<==      Total: 1
2020-11-09 15:55:06 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:55:06 -==> Parameters: 11(Integer)
2020-11-09 15:55:06 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:55:06 -==> Parameters: 
2020-11-09 15:55:06 -<==      Total: 2
2020-11-09 15:55:06 -<==      Total: 3
2020-11-09 15:55:06 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:06 -==> Parameters: 3(Integer)
2020-11-09 15:55:06 -<==      Total: 1
2020-11-09 15:55:06 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:06 -==> Parameters: 5(Integer)
2020-11-09 15:55:06 -<==      Total: 1
2020-11-09 15:55:06 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:06 -==> Parameters: 2(Integer)
2020-11-09 15:55:07 -<==      Total: 1
2020-11-09 15:55:07 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:07 -==> Parameters: 3(Integer)
2020-11-09 15:55:07 -<==      Total: 1
2020-11-09 15:55:07 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:07 -==> Parameters: 2(Integer)
2020-11-09 15:55:07 -<==      Total: 1
2020-11-09 15:55:07 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:07 -==> Parameters: 2(Integer)
2020-11-09 15:55:07 -<==      Total: 1
2020-11-09 15:55:13 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:55:13 -==> Parameters: 11(Integer)
2020-11-09 15:55:13 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:55:13 -==> Parameters: 
2020-11-09 15:55:13 -<==      Total: 2
2020-11-09 15:55:13 -<==      Total: 3
2020-11-09 15:55:13 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:13 -==> Parameters: 3(Integer)
2020-11-09 15:55:13 -<==      Total: 1
2020-11-09 15:55:13 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:13 -==> Parameters: 5(Integer)
2020-11-09 15:55:13 -<==      Total: 1
2020-11-09 15:55:13 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:13 -==> Parameters: 2(Integer)
2020-11-09 15:55:13 -<==      Total: 1
2020-11-09 15:55:13 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:13 -==> Parameters: 3(Integer)
2020-11-09 15:55:14 -<==      Total: 1
2020-11-09 15:55:14 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:14 -==> Parameters: 2(Integer)
2020-11-09 15:55:14 -<==      Total: 1
2020-11-09 15:55:14 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:14 -==> Parameters: 2(Integer)
2020-11-09 15:55:14 -<==      Total: 1
2020-11-09 15:55:29 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:55:29 -==> Parameters: 11(Integer)
2020-11-09 15:55:29 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:55:29 -==> Parameters: 
2020-11-09 15:55:29 -<==      Total: 2
2020-11-09 15:55:29 -<==      Total: 3
2020-11-09 15:55:29 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:29 -==> Parameters: 3(Integer)
2020-11-09 15:55:29 -<==      Total: 1
2020-11-09 15:55:29 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:29 -==> Parameters: 5(Integer)
2020-11-09 15:55:30 -<==      Total: 1
2020-11-09 15:55:30 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:30 -==> Parameters: 2(Integer)
2020-11-09 15:55:30 -<==      Total: 1
2020-11-09 15:55:30 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:30 -==> Parameters: 3(Integer)
2020-11-09 15:55:30 -<==      Total: 1
2020-11-09 15:55:30 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:30 -==> Parameters: 2(Integer)
2020-11-09 15:55:30 -<==      Total: 1
2020-11-09 15:55:30 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:30 -==> Parameters: 2(Integer)
2020-11-09 15:55:30 -<==      Total: 1
2020-11-09 15:55:54 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:55:54 -==> Parameters: 11(Integer)
2020-11-09 15:55:54 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:55:54 -==> Parameters: 
2020-11-09 15:55:54 -<==      Total: 2
2020-11-09 15:55:54 -<==      Total: 3
2020-11-09 15:55:54 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:54 -==> Parameters: 3(Integer)
2020-11-09 15:55:54 -<==      Total: 1
2020-11-09 15:55:54 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:54 -==> Parameters: 5(Integer)
2020-11-09 15:55:54 -<==      Total: 1
2020-11-09 15:55:54 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:54 -==> Parameters: 2(Integer)
2020-11-09 15:55:54 -<==      Total: 1
2020-11-09 15:55:54 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:54 -==> Parameters: 3(Integer)
2020-11-09 15:55:54 -<==      Total: 1
2020-11-09 15:55:54 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:55:54 -==> Parameters: 2(Integer)
2020-11-09 15:55:54 -<==      Total: 1
2020-11-09 15:55:54 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:55:54 -==> Parameters: 2(Integer)
2020-11-09 15:55:54 -<==      Total: 1
2020-11-09 15:56:03 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:56:03 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:56:03 -==> Parameters: 11(Integer)
2020-11-09 15:56:03 -==> Parameters: 
2020-11-09 15:56:03 -<==      Total: 2
2020-11-09 15:56:03 -<==      Total: 3
2020-11-09 15:56:03 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:03 -==> Parameters: 3(Integer)
2020-11-09 15:56:04 -<==      Total: 1
2020-11-09 15:56:04 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:04 -==> Parameters: 5(Integer)
2020-11-09 15:56:04 -<==      Total: 1
2020-11-09 15:56:04 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:04 -==> Parameters: 2(Integer)
2020-11-09 15:56:04 -<==      Total: 1
2020-11-09 15:56:04 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:04 -==> Parameters: 3(Integer)
2020-11-09 15:56:04 -<==      Total: 1
2020-11-09 15:56:04 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:04 -==> Parameters: 2(Integer)
2020-11-09 15:56:04 -<==      Total: 1
2020-11-09 15:56:04 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:04 -==> Parameters: 2(Integer)
2020-11-09 15:56:04 -<==      Total: 1
2020-11-09 15:56:21 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:56:21 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:56:21 -==> Parameters: 
2020-11-09 15:56:21 -==> Parameters: 11(Integer)
2020-11-09 15:56:21 -<==      Total: 2
2020-11-09 15:56:21 -<==      Total: 3
2020-11-09 15:56:21 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:21 -==> Parameters: 3(Integer)
2020-11-09 15:56:21 -<==      Total: 1
2020-11-09 15:56:21 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:21 -==> Parameters: 5(Integer)
2020-11-09 15:56:22 -<==      Total: 1
2020-11-09 15:56:22 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:22 -==> Parameters: 2(Integer)
2020-11-09 15:56:22 -<==      Total: 1
2020-11-09 15:56:22 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:22 -==> Parameters: 3(Integer)
2020-11-09 15:56:22 -<==      Total: 1
2020-11-09 15:56:22 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:22 -==> Parameters: 2(Integer)
2020-11-09 15:56:22 -<==      Total: 1
2020-11-09 15:56:22 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:22 -==> Parameters: 2(Integer)
2020-11-09 15:56:22 -<==      Total: 1
2020-11-09 15:56:35 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:56:35 -==> Parameters: 11(Integer)
2020-11-09 15:56:35 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:56:35 -==> Parameters: 
2020-11-09 15:56:35 -<==      Total: 2
2020-11-09 15:56:35 -<==      Total: 3
2020-11-09 15:56:35 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:35 -==> Parameters: 3(Integer)
2020-11-09 15:56:35 -<==      Total: 1
2020-11-09 15:56:35 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:35 -==> Parameters: 5(Integer)
2020-11-09 15:56:35 -<==      Total: 1
2020-11-09 15:56:35 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:35 -==> Parameters: 2(Integer)
2020-11-09 15:56:35 -<==      Total: 1
2020-11-09 15:56:35 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:35 -==> Parameters: 3(Integer)
2020-11-09 15:56:36 -<==      Total: 1
2020-11-09 15:56:36 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:36 -==> Parameters: 2(Integer)
2020-11-09 15:56:36 -<==      Total: 1
2020-11-09 15:56:36 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:36 -==> Parameters: 2(Integer)
2020-11-09 15:56:36 -<==      Total: 1
2020-11-09 15:56:51 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:56:51 -==> Parameters: 11(Integer)
2020-11-09 15:56:51 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:56:51 -==> Parameters: 
2020-11-09 15:56:51 -<==      Total: 2
2020-11-09 15:56:51 -<==      Total: 3
2020-11-09 15:56:51 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:51 -==> Parameters: 3(Integer)
2020-11-09 15:56:51 -<==      Total: 1
2020-11-09 15:56:51 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:51 -==> Parameters: 5(Integer)
2020-11-09 15:56:52 -<==      Total: 1
2020-11-09 15:56:52 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:52 -==> Parameters: 2(Integer)
2020-11-09 15:56:52 -<==      Total: 1
2020-11-09 15:56:52 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:52 -==> Parameters: 3(Integer)
2020-11-09 15:56:52 -<==      Total: 1
2020-11-09 15:56:52 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:56:52 -==> Parameters: 2(Integer)
2020-11-09 15:56:52 -<==      Total: 1
2020-11-09 15:56:52 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:56:52 -==> Parameters: 2(Integer)
2020-11-09 15:56:52 -<==      Total: 1
2020-11-09 15:57:07 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:57:07 -==> Parameters: 11(Integer)
2020-11-09 15:57:07 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:57:07 -==> Parameters: 
2020-11-09 15:57:07 -<==      Total: 2
2020-11-09 15:57:08 -<==      Total: 3
2020-11-09 15:57:08 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:08 -==> Parameters: 3(Integer)
2020-11-09 15:57:08 -<==      Total: 1
2020-11-09 15:57:08 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:08 -==> Parameters: 5(Integer)
2020-11-09 15:57:08 -<==      Total: 1
2020-11-09 15:57:08 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:08 -==> Parameters: 2(Integer)
2020-11-09 15:57:08 -<==      Total: 1
2020-11-09 15:57:08 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:08 -==> Parameters: 3(Integer)
2020-11-09 15:57:08 -<==      Total: 1
2020-11-09 15:57:08 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:08 -==> Parameters: 2(Integer)
2020-11-09 15:57:08 -<==      Total: 1
2020-11-09 15:57:08 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:08 -==> Parameters: 2(Integer)
2020-11-09 15:57:08 -<==      Total: 1
2020-11-09 15:57:23 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:57:23 -==> Parameters: 11(Integer)
2020-11-09 15:57:23 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:57:23 -==> Parameters: 
2020-11-09 15:57:23 -<==      Total: 2
2020-11-09 15:57:23 -<==      Total: 3
2020-11-09 15:57:23 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:23 -==> Parameters: 3(Integer)
2020-11-09 15:57:23 -<==      Total: 1
2020-11-09 15:57:23 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:23 -==> Parameters: 5(Integer)
2020-11-09 15:57:24 -<==      Total: 1
2020-11-09 15:57:24 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:24 -==> Parameters: 2(Integer)
2020-11-09 15:57:24 -<==      Total: 1
2020-11-09 15:57:24 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:24 -==> Parameters: 3(Integer)
2020-11-09 15:57:24 -<==      Total: 1
2020-11-09 15:57:24 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:24 -==> Parameters: 2(Integer)
2020-11-09 15:57:24 -<==      Total: 1
2020-11-09 15:57:24 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:24 -==> Parameters: 2(Integer)
2020-11-09 15:57:24 -<==      Total: 1
2020-11-09 15:57:34 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:57:34 -==> Parameters: 11(Integer)
2020-11-09 15:57:34 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:57:34 -==> Parameters: 
2020-11-09 15:57:34 -<==      Total: 2
2020-11-09 15:57:34 -<==      Total: 3
2020-11-09 15:57:34 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:34 -==> Parameters: 3(Integer)
2020-11-09 15:57:34 -<==      Total: 1
2020-11-09 15:57:34 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:34 -==> Parameters: 5(Integer)
2020-11-09 15:57:35 -<==      Total: 1
2020-11-09 15:57:35 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:35 -==> Parameters: 2(Integer)
2020-11-09 15:57:35 -<==      Total: 1
2020-11-09 15:57:35 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:35 -==> Parameters: 3(Integer)
2020-11-09 15:57:35 -<==      Total: 1
2020-11-09 15:57:35 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:35 -==> Parameters: 2(Integer)
2020-11-09 15:57:35 -<==      Total: 1
2020-11-09 15:57:35 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:35 -==> Parameters: 2(Integer)
2020-11-09 15:57:35 -<==      Total: 1
2020-11-09 15:57:50 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:57:50 -==> Parameters: 11(Integer)
2020-11-09 15:57:50 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:57:50 -==> Parameters: 
2020-11-09 15:57:50 -<==      Total: 2
2020-11-09 15:57:50 -<==      Total: 3
2020-11-09 15:57:50 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:50 -==> Parameters: 3(Integer)
2020-11-09 15:57:50 -<==      Total: 1
2020-11-09 15:57:50 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:50 -==> Parameters: 5(Integer)
2020-11-09 15:57:50 -<==      Total: 1
2020-11-09 15:57:50 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:50 -==> Parameters: 2(Integer)
2020-11-09 15:57:50 -<==      Total: 1
2020-11-09 15:57:50 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:50 -==> Parameters: 3(Integer)
2020-11-09 15:57:50 -<==      Total: 1
2020-11-09 15:57:50 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:57:50 -==> Parameters: 2(Integer)
2020-11-09 15:57:50 -<==      Total: 1
2020-11-09 15:57:50 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:57:50 -==> Parameters: 2(Integer)
2020-11-09 15:57:50 -<==      Total: 1
2020-11-09 15:57:56 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:57:56 -==> Parameters: 11(Integer)
2020-11-09 15:57:56 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:57:56 -==> Parameters: 11(Integer)
2020-11-09 15:57:56 -<==      Total: 2
2020-11-09 15:57:56 -<==      Total: 2
2020-11-09 15:57:56 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 15:57:56 -==> Parameters: 6(Integer)
2020-11-09 15:57:57 -<==      Total: 1
2020-11-09 15:57:57 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 15:57:57 -==> Parameters: 1(Integer)
2020-11-09 15:57:57 -<==      Total: 1
2020-11-09 15:58:01 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:58:01 -==> Parameters: 
2020-11-09 15:58:01 -<==      Total: 3
2020-11-09 15:58:01 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:01 -==> Parameters: 3(Integer)
2020-11-09 15:58:01 -<==      Total: 1
2020-11-09 15:58:01 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:01 -==> Parameters: 5(Integer)
2020-11-09 15:58:01 -<==      Total: 1
2020-11-09 15:58:01 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:01 -==> Parameters: 2(Integer)
2020-11-09 15:58:01 -<==      Total: 1
2020-11-09 15:58:01 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:01 -==> Parameters: 3(Integer)
2020-11-09 15:58:01 -<==      Total: 1
2020-11-09 15:58:01 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:01 -==> Parameters: 2(Integer)
2020-11-09 15:58:01 -<==      Total: 1
2020-11-09 15:58:01 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:01 -==> Parameters: 2(Integer)
2020-11-09 15:58:02 -<==      Total: 1
2020-11-09 15:58:02 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:58:02 -==> Parameters: 11(Integer)
2020-11-09 15:58:03 -<==      Total: 2
2020-11-09 15:58:03 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:58:03 -==> Parameters: 
2020-11-09 15:58:03 -<==      Total: 3
2020-11-09 15:58:03 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:03 -==> Parameters: 3(Integer)
2020-11-09 15:58:03 -<==      Total: 1
2020-11-09 15:58:03 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:03 -==> Parameters: 5(Integer)
2020-11-09 15:58:03 -<==      Total: 1
2020-11-09 15:58:03 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:03 -==> Parameters: 2(Integer)
2020-11-09 15:58:03 -<==      Total: 1
2020-11-09 15:58:03 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:03 -==> Parameters: 3(Integer)
2020-11-09 15:58:03 -<==      Total: 1
2020-11-09 15:58:03 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:03 -==> Parameters: 2(Integer)
2020-11-09 15:58:03 -<==      Total: 1
2020-11-09 15:58:03 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:03 -==> Parameters: 2(Integer)
2020-11-09 15:58:03 -<==      Total: 1
2020-11-09 15:58:17 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:58:17 -==> Parameters: 
2020-11-09 15:58:17 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:58:17 -==> Parameters: 11(Integer)
2020-11-09 15:58:17 -<==      Total: 3
2020-11-09 15:58:17 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:17 -==> Parameters: 3(Integer)
2020-11-09 15:58:17 -<==      Total: 2
2020-11-09 15:58:17 -<==      Total: 1
2020-11-09 15:58:17 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:17 -==> Parameters: 5(Integer)
2020-11-09 15:58:18 -<==      Total: 1
2020-11-09 15:58:18 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:18 -==> Parameters: 2(Integer)
2020-11-09 15:58:18 -<==      Total: 1
2020-11-09 15:58:18 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:18 -==> Parameters: 3(Integer)
2020-11-09 15:58:18 -<==      Total: 1
2020-11-09 15:58:18 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:18 -==> Parameters: 2(Integer)
2020-11-09 15:58:18 -<==      Total: 1
2020-11-09 15:58:18 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:18 -==> Parameters: 2(Integer)
2020-11-09 15:58:18 -<==      Total: 1
2020-11-09 15:58:40 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:58:40 -==> Parameters: 
2020-11-09 15:58:40 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:58:40 -==> Parameters: 11(Integer)
2020-11-09 15:58:40 -<==      Total: 2
2020-11-09 15:58:40 -<==      Total: 3
2020-11-09 15:58:40 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:40 -==> Parameters: 3(Integer)
2020-11-09 15:58:40 -<==      Total: 1
2020-11-09 15:58:40 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:40 -==> Parameters: 5(Integer)
2020-11-09 15:58:40 -<==      Total: 1
2020-11-09 15:58:40 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:40 -==> Parameters: 2(Integer)
2020-11-09 15:58:40 -<==      Total: 1
2020-11-09 15:58:40 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:40 -==> Parameters: 3(Integer)
2020-11-09 15:58:40 -<==      Total: 1
2020-11-09 15:58:40 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:58:40 -==> Parameters: 2(Integer)
2020-11-09 15:58:40 -<==      Total: 1
2020-11-09 15:58:40 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:58:40 -==> Parameters: 2(Integer)
2020-11-09 15:58:40 -<==      Total: 1
2020-11-09 15:59:09 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:59:09 -==> Parameters: 
2020-11-09 15:59:09 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:59:09 -==> Parameters: 11(Integer)
2020-11-09 15:59:09 -<==      Total: 3
2020-11-09 15:59:09 -<==      Total: 2
2020-11-09 15:59:09 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:59:09 -==> Parameters: 3(Integer)
2020-11-09 15:59:10 -<==      Total: 1
2020-11-09 15:59:10 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:59:10 -==> Parameters: 5(Integer)
2020-11-09 15:59:10 -<==      Total: 1
2020-11-09 15:59:10 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:59:10 -==> Parameters: 2(Integer)
2020-11-09 15:59:10 -<==      Total: 1
2020-11-09 15:59:10 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:59:10 -==> Parameters: 3(Integer)
2020-11-09 15:59:10 -<==      Total: 1
2020-11-09 15:59:10 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:59:10 -==> Parameters: 2(Integer)
2020-11-09 15:59:10 -<==      Total: 1
2020-11-09 15:59:10 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:59:10 -==> Parameters: 2(Integer)
2020-11-09 15:59:10 -<==      Total: 1
2020-11-09 15:59:24 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:59:24 -==> Parameters: 11(Integer)
2020-11-09 15:59:24 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:59:24 -==> Parameters: 
2020-11-09 15:59:24 -<==      Total: 2
2020-11-09 15:59:24 -<==      Total: 3
2020-11-09 15:59:24 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:59:24 -==> Parameters: 3(Integer)
2020-11-09 15:59:24 -<==      Total: 1
2020-11-09 15:59:24 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:59:24 -==> Parameters: 5(Integer)
2020-11-09 15:59:24 -<==      Total: 1
2020-11-09 15:59:24 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:59:24 -==> Parameters: 2(Integer)
2020-11-09 15:59:24 -<==      Total: 1
2020-11-09 15:59:24 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:59:24 -==> Parameters: 3(Integer)
2020-11-09 15:59:24 -<==      Total: 1
2020-11-09 15:59:24 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:59:24 -==> Parameters: 2(Integer)
2020-11-09 15:59:24 -<==      Total: 1
2020-11-09 15:59:24 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:59:24 -==> Parameters: 2(Integer)
2020-11-09 15:59:24 -<==      Total: 1
2020-11-09 15:59:47 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:59:47 -==> Parameters: 11(Integer)
2020-11-09 15:59:47 -<==      Total: 2
2020-11-09 15:59:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 15:59:47 -==> Parameters: 6(Integer)
2020-11-09 15:59:47 -<==      Total: 1
2020-11-09 15:59:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 15:59:47 -==> Parameters: 1(Integer)
2020-11-09 15:59:47 -<==      Total: 1
2020-11-09 15:59:53 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 15:59:53 -==> Parameters: 
2020-11-09 15:59:53 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 15:59:53 -==> Parameters: 11(Integer)
2020-11-09 15:59:53 -<==      Total: 2
2020-11-09 15:59:53 -<==      Total: 3
2020-11-09 15:59:53 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:59:53 -==> Parameters: 3(Integer)
2020-11-09 15:59:53 -<==      Total: 1
2020-11-09 15:59:53 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:59:53 -==> Parameters: 5(Integer)
2020-11-09 15:59:53 -<==      Total: 1
2020-11-09 15:59:53 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:59:53 -==> Parameters: 2(Integer)
2020-11-09 15:59:54 -<==      Total: 1
2020-11-09 15:59:54 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:59:54 -==> Parameters: 3(Integer)
2020-11-09 15:59:54 -<==      Total: 1
2020-11-09 15:59:54 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 15:59:54 -==> Parameters: 2(Integer)
2020-11-09 15:59:54 -<==      Total: 1
2020-11-09 15:59:54 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 15:59:54 -==> Parameters: 2(Integer)
2020-11-09 15:59:54 -<==      Total: 1
2020-11-09 16:00:07 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:00:07 -==> Parameters: 11(Integer)
2020-11-09 16:00:07 -<==      Total: 2
2020-11-09 16:00:07 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:00:07 -==> Parameters: 6(Integer)
2020-11-09 16:00:07 -<==      Total: 1
2020-11-09 16:00:07 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:00:07 -==> Parameters: 1(Integer)
2020-11-09 16:00:07 -<==      Total: 1
2020-11-09 16:00:30 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 16:00:30 -==> Parameters: 15868808504@163.com(String)
2020-11-09 16:00:30 -<==      Total: 1
2020-11-09 16:00:30 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 16:00:30 -==> Parameters: 15868808504@163.com(String)
2020-11-09 16:00:30 -<==      Total: 1
2020-11-09 16:00:38 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 16:00:38 -==> Parameters: 15868808504@163.com(String)
2020-11-09 16:00:38 -<==      Total: 1
2020-11-09 16:01:05 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 16:01:05 -==> Parameters: 15868808504@163.com(String)
2020-11-09 16:01:05 -<==      Total: 1
2020-11-09 16:01:05 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 16:01:05 -==> Parameters: 15868808504@163.com(String)
2020-11-09 16:01:05 -<==      Total: 1
2020-11-09 16:01:51 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 16:01:51 -==> Parameters: 
2020-11-09 16:01:51 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:01:51 -==> Parameters: 11(Integer)
2020-11-09 16:01:51 -<==      Total: 3
2020-11-09 16:01:51 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:01:51 -==> Parameters: 3(Integer)
2020-11-09 16:01:51 -<==      Total: 2
2020-11-09 16:01:51 -<==      Total: 1
2020-11-09 16:01:51 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:01:51 -==> Parameters: 5(Integer)
2020-11-09 16:01:51 -<==      Total: 1
2020-11-09 16:01:51 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:01:51 -==> Parameters: 2(Integer)
2020-11-09 16:01:51 -<==      Total: 1
2020-11-09 16:01:51 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:01:51 -==> Parameters: 3(Integer)
2020-11-09 16:01:51 -<==      Total: 1
2020-11-09 16:01:51 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:01:51 -==> Parameters: 2(Integer)
2020-11-09 16:01:51 -<==      Total: 1
2020-11-09 16:01:51 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:01:51 -==> Parameters: 2(Integer)
2020-11-09 16:01:51 -<==      Total: 1
2020-11-09 16:01:53 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:01:53 -==> Parameters: 11(Integer)
2020-11-09 16:01:53 -<==      Total: 2
2020-11-09 16:01:53 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:01:53 -==> Parameters: 6(Integer)
2020-11-09 16:01:53 -<==      Total: 1
2020-11-09 16:01:53 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:01:53 -==> Parameters: 1(Integer)
2020-11-09 16:01:53 -<==      Total: 1
2020-11-09 16:02:05 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:02:05 -==> Parameters: 11(Integer)
2020-11-09 16:02:05 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:02:05 -==> Parameters: 6(Integer)
2020-11-09 16:02:05 -<==      Total: 1
2020-11-09 16:02:05 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:02:05 -==> Parameters: 2(Integer)
2020-11-09 16:02:05 -<==      Total: 3
2020-11-09 16:02:05 -<==      Total: 1
2020-11-09 16:02:05 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:02:05 -==> Parameters: 2(Integer)
2020-11-09 16:02:05 -<==      Total: 2
2020-11-09 16:02:05 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:02:05 -==> Parameters: 2(Integer)
2020-11-09 16:02:05 -<==      Total: 3
2020-11-09 16:02:10 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 16:02:10 -==> Parameters: 4(Integer)
2020-11-09 16:02:10 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 16:02:10 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 16:02:10 -<==      Total: 1
2020-11-09 16:02:10 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 16:02:10 -==> Parameters: 4(Integer)
2020-11-09 16:02:10 -<==      Total: 0
2020-11-09 16:02:10 -<==      Total: 1
2020-11-09 16:07:29 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 16:07:29 -==> Parameters: 4(Integer)
2020-11-09 16:07:29 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 16:07:29 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 16:07:29 -<==      Total: 1
2020-11-09 16:07:29 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 16:07:29 -==> Parameters: 4(Integer)
2020-11-09 16:07:29 -<==      Total: 0
2020-11-09 16:07:29 -<==      Total: 1
2020-11-09 16:07:48 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 16:07:48 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 16:07:48 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 16:07:48 -==> Parameters: 4(Integer)
2020-11-09 16:07:48 -<==      Total: 0
2020-11-09 16:07:48 -<==      Total: 1
2020-11-09 16:07:48 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 16:07:48 -==> Parameters: 4(Integer)
2020-11-09 16:07:48 -<==      Total: 1
2020-11-09 16:09:44 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:09:44 -==> Parameters: 11(Integer)
2020-11-09 16:09:44 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 16:09:44 -==> Parameters: 
2020-11-09 16:09:44 -<==      Total: 2
2020-11-09 16:09:44 -<==      Total: 3
2020-11-09 16:09:44 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:09:44 -==> Parameters: 3(Integer)
2020-11-09 16:09:45 -<==      Total: 1
2020-11-09 16:09:45 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:09:45 -==> Parameters: 5(Integer)
2020-11-09 16:09:45 -<==      Total: 1
2020-11-09 16:09:45 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:09:45 -==> Parameters: 2(Integer)
2020-11-09 16:09:45 -<==      Total: 1
2020-11-09 16:09:45 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:09:45 -==> Parameters: 3(Integer)
2020-11-09 16:09:45 -<==      Total: 1
2020-11-09 16:09:45 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:09:45 -==> Parameters: 2(Integer)
2020-11-09 16:09:45 -<==      Total: 1
2020-11-09 16:09:45 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:09:45 -==> Parameters: 2(Integer)
2020-11-09 16:09:45 -<==      Total: 1
2020-11-09 16:11:04 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:11:04 -==> Parameters: 11(Integer)
2020-11-09 16:11:04 -<==      Total: 2
2020-11-09 16:11:04 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:11:04 -==> Parameters: 6(Integer)
2020-11-09 16:11:04 -<==      Total: 1
2020-11-09 16:11:04 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:11:04 -==> Parameters: 1(Integer)
2020-11-09 16:11:04 -<==      Total: 1
2020-11-09 16:11:05 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:11:05 -==> Parameters: 6(Integer)
2020-11-09 16:11:05 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:11:05 -==> Parameters: 11(Integer)
2020-11-09 16:11:05 -<==      Total: 3
2020-11-09 16:11:05 -<==      Total: 1
2020-11-09 16:11:05 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:11:05 -==> Parameters: 2(Integer)
2020-11-09 16:11:05 -<==      Total: 1
2020-11-09 16:11:05 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:11:05 -==> Parameters: 2(Integer)
2020-11-09 16:11:05 -<==      Total: 2
2020-11-09 16:11:05 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:11:05 -==> Parameters: 2(Integer)
2020-11-09 16:11:06 -<==      Total: 3
2020-11-09 16:11:18 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 16:11:18 -==> Parameters: 
2020-11-09 16:11:18 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:11:18 -==> Parameters: 11(Integer)
2020-11-09 16:11:18 -<==      Total: 3
2020-11-09 16:11:18 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:11:18 -==> Parameters: 3(Integer)
2020-11-09 16:11:18 -<==      Total: 2
2020-11-09 16:11:18 -<==      Total: 1
2020-11-09 16:11:18 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:11:18 -==> Parameters: 5(Integer)
2020-11-09 16:11:19 -<==      Total: 1
2020-11-09 16:11:19 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:11:19 -==> Parameters: 2(Integer)
2020-11-09 16:11:19 -<==      Total: 1
2020-11-09 16:11:19 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:11:19 -==> Parameters: 3(Integer)
2020-11-09 16:11:19 -<==      Total: 1
2020-11-09 16:11:19 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:11:19 -==> Parameters: 2(Integer)
2020-11-09 16:11:19 -<==      Total: 1
2020-11-09 16:11:19 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:11:19 -==> Parameters: 2(Integer)
2020-11-09 16:11:19 -<==      Total: 1
2020-11-09 16:11:20 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:11:20 -==> Parameters: 11(Integer)
2020-11-09 16:11:20 -<==      Total: 2
2020-11-09 16:11:20 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:11:20 -==> Parameters: 6(Integer)
2020-11-09 16:11:20 -<==      Total: 1
2020-11-09 16:11:20 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:11:20 -==> Parameters: 1(Integer)
2020-11-09 16:11:20 -<==      Total: 1
2020-11-09 16:17:24 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 16:17:24 -==> Parameters: 
2020-11-09 16:17:24 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:17:24 -==> Parameters: 11(Integer)
2020-11-09 16:17:24 -<==      Total: 3
2020-11-09 16:17:24 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:17:24 -==> Parameters: 3(Integer)
2020-11-09 16:17:24 -<==      Total: 2
2020-11-09 16:17:24 -<==      Total: 1
2020-11-09 16:17:24 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:17:24 -==> Parameters: 5(Integer)
2020-11-09 16:17:24 -<==      Total: 1
2020-11-09 16:17:24 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:17:24 -==> Parameters: 2(Integer)
2020-11-09 16:17:24 -<==      Total: 1
2020-11-09 16:17:24 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:17:24 -==> Parameters: 3(Integer)
2020-11-09 16:17:24 -<==      Total: 1
2020-11-09 16:17:24 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:17:24 -==> Parameters: 2(Integer)
2020-11-09 16:17:24 -<==      Total: 1
2020-11-09 16:17:24 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:17:24 -==> Parameters: 2(Integer)
2020-11-09 16:17:24 -<==      Total: 1
2020-11-09 16:17:25 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:17:25 -==> Parameters: 11(Integer)
2020-11-09 16:17:25 -<==      Total: 2
2020-11-09 16:17:25 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:17:25 -==> Parameters: 6(Integer)
2020-11-09 16:17:25 -<==      Total: 1
2020-11-09 16:17:25 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:17:25 -==> Parameters: 1(Integer)
2020-11-09 16:17:25 -<==      Total: 1
2020-11-09 16:17:27 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 16:17:27 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:17:27 -==> Parameters: 
2020-11-09 16:17:27 -==> Parameters: 11(Integer)
2020-11-09 16:17:27 -<==      Total: 3
2020-11-09 16:17:27 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:17:27 -==> Parameters: 3(Integer)
2020-11-09 16:17:27 -<==      Total: 2
2020-11-09 16:17:27 -<==      Total: 1
2020-11-09 16:17:27 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:17:27 -==> Parameters: 5(Integer)
2020-11-09 16:17:27 -<==      Total: 1
2020-11-09 16:17:27 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:17:27 -==> Parameters: 2(Integer)
2020-11-09 16:17:27 -<==      Total: 1
2020-11-09 16:17:27 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:17:27 -==> Parameters: 3(Integer)
2020-11-09 16:17:27 -<==      Total: 1
2020-11-09 16:17:27 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:17:27 -==> Parameters: 2(Integer)
2020-11-09 16:17:27 -<==      Total: 1
2020-11-09 16:17:27 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:17:27 -==> Parameters: 2(Integer)
2020-11-09 16:17:27 -<==      Total: 1
2020-11-09 16:17:43 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:17:43 -==> Parameters: 11(Integer)
2020-11-09 16:17:43 -<==      Total: 2
2020-11-09 16:17:43 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:17:43 -==> Parameters: 6(Integer)
2020-11-09 16:17:43 -<==      Total: 1
2020-11-09 16:17:43 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:17:43 -==> Parameters: 1(Integer)
2020-11-09 16:17:43 -<==      Total: 1
2020-11-09 16:17:45 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:17:45 -==> Parameters: 6(Integer)
2020-11-09 16:17:45 -<==      Total: 3
2020-11-09 16:17:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:17:45 -==> Parameters: 11(Integer)
2020-11-09 16:17:45 -<==      Total: 1
2020-11-09 16:17:45 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:17:45 -==> Parameters: 2(Integer)
2020-11-09 16:17:45 -<==      Total: 1
2020-11-09 16:17:45 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:17:45 -==> Parameters: 2(Integer)
2020-11-09 16:17:45 -<==      Total: 2
2020-11-09 16:17:45 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:17:45 -==> Parameters: 2(Integer)
2020-11-09 16:17:45 -<==      Total: 3
2020-11-09 16:20:20 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:20:20 -==> Parameters: 11(Integer)
2020-11-09 16:20:20 -<==      Total: 2
2020-11-09 16:20:20 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:20:20 -==> Parameters: 6(Integer)
2020-11-09 16:20:20 -<==      Total: 1
2020-11-09 16:20:20 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:20:20 -==> Parameters: 1(Integer)
2020-11-09 16:20:20 -<==      Total: 1
2020-11-09 16:20:20 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:20:20 -==> Parameters: 11(Integer)
2020-11-09 16:20:20 -<==      Total: 2
2020-11-09 16:20:20 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:20:20 -==> Parameters: 6(Integer)
2020-11-09 16:20:20 -<==      Total: 1
2020-11-09 16:20:20 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:20:20 -==> Parameters: 1(Integer)
2020-11-09 16:20:20 -<==      Total: 1
2020-11-09 16:20:48 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:20:48 -==> Parameters: 11(Integer)
2020-11-09 16:20:48 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 16:20:48 -==> Parameters: 
2020-11-09 16:20:48 -<==      Total: 2
2020-11-09 16:20:48 -<==      Total: 3
2020-11-09 16:20:48 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:20:48 -==> Parameters: 3(Integer)
2020-11-09 16:20:49 -<==      Total: 1
2020-11-09 16:20:49 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:20:49 -==> Parameters: 5(Integer)
2020-11-09 16:20:49 -<==      Total: 1
2020-11-09 16:20:49 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:20:49 -==> Parameters: 2(Integer)
2020-11-09 16:20:49 -<==      Total: 1
2020-11-09 16:20:49 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:20:49 -==> Parameters: 3(Integer)
2020-11-09 16:20:49 -<==      Total: 1
2020-11-09 16:20:49 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:20:49 -==> Parameters: 2(Integer)
2020-11-09 16:20:49 -<==      Total: 1
2020-11-09 16:20:49 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:20:49 -==> Parameters: 2(Integer)
2020-11-09 16:20:49 -<==      Total: 1
2020-11-09 16:20:50 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:20:50 -==> Parameters: 11(Integer)
2020-11-09 16:20:50 -<==      Total: 2
2020-11-09 16:20:50 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:20:50 -==> Parameters: 6(Integer)
2020-11-09 16:20:50 -<==      Total: 1
2020-11-09 16:20:50 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:20:50 -==> Parameters: 1(Integer)
2020-11-09 16:20:50 -<==      Total: 1
2020-11-09 16:21:15 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:21:15 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:21:15 -==> Parameters: 6(Integer)
2020-11-09 16:21:15 -==> Parameters: 11(Integer)
2020-11-09 16:21:15 -<==      Total: 3
2020-11-09 16:21:15 -<==      Total: 1
2020-11-09 16:21:15 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:21:15 -==> Parameters: 2(Integer)
2020-11-09 16:21:15 -<==      Total: 1
2020-11-09 16:21:15 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:21:15 -==> Parameters: 2(Integer)
2020-11-09 16:21:15 -<==      Total: 2
2020-11-09 16:21:15 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:21:15 -==> Parameters: 2(Integer)
2020-11-09 16:21:15 -<==      Total: 3
2020-11-09 16:21:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:21:27 -==> Parameters: 11(Integer)
2020-11-09 16:21:27 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:21:27 -==> Parameters: 6(Integer)
2020-11-09 16:21:27 -<==      Total: 1
2020-11-09 16:21:27 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:21:27 -==> Parameters: 2(Integer)
2020-11-09 16:21:27 -<==      Total: 3
2020-11-09 16:21:27 -<==      Total: 1
2020-11-09 16:21:27 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:21:27 -==> Parameters: 2(Integer)
2020-11-09 16:21:27 -<==      Total: 2
2020-11-09 16:21:27 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:21:27 -==> Parameters: 2(Integer)
2020-11-09 16:21:27 -<==      Total: 3
2020-11-09 16:21:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:21:28 -==> Parameters: 11(Integer)
2020-11-09 16:21:28 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:21:28 -==> Parameters: 1(Integer)
2020-11-09 16:21:28 -<==      Total: 1
2020-11-09 16:21:28 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:21:28 -==> Parameters: 3(Integer)
2020-11-09 16:21:28 -<==      Total: 0
2020-11-09 16:21:28 -<==      Total: 1
2020-11-09 16:21:28 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:21:28 -==> Parameters: 3(Integer)
2020-11-09 16:21:28 -<==      Total: 2
2020-11-09 16:21:28 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:21:28 -==> Parameters: 3(Integer)
2020-11-09 16:21:28 -<==      Total: 5
2020-11-09 16:22:33 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:22:33 -==> Parameters: 6(Integer)
2020-11-09 16:22:33 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:22:33 -==> Parameters: 11(Integer)
2020-11-09 16:22:33 -<==      Total: 3
2020-11-09 16:22:33 -<==      Total: 1
2020-11-09 16:22:33 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:22:33 -==> Parameters: 2(Integer)
2020-11-09 16:22:33 -<==      Total: 1
2020-11-09 16:22:33 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:22:33 -==> Parameters: 2(Integer)
2020-11-09 16:22:33 -<==      Total: 2
2020-11-09 16:22:33 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:22:33 -==> Parameters: 2(Integer)
2020-11-09 16:22:33 -<==      Total: 3
2020-11-09 16:22:35 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:22:35 -==> Parameters: 11(Integer)
2020-11-09 16:22:35 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:22:35 -==> Parameters: 1(Integer)
2020-11-09 16:22:35 -<==      Total: 0
2020-11-09 16:22:35 -<==      Total: 1
2020-11-09 16:22:35 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:22:35 -==> Parameters: 3(Integer)
2020-11-09 16:22:35 -<==      Total: 1
2020-11-09 16:22:35 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:22:35 -==> Parameters: 3(Integer)
2020-11-09 16:22:35 -<==      Total: 2
2020-11-09 16:22:35 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:22:35 -==> Parameters: 3(Integer)
2020-11-09 16:22:35 -<==      Total: 5
2020-11-09 16:23:02 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:23:02 -==> Parameters: 11(Integer)
2020-11-09 16:23:02 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:23:02 -==> Parameters: 6(Integer)
2020-11-09 16:23:02 -<==      Total: 1
2020-11-09 16:23:02 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:23:02 -==> Parameters: 2(Integer)
2020-11-09 16:23:02 -<==      Total: 3
2020-11-09 16:23:02 -<==      Total: 1
2020-11-09 16:23:02 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:23:02 -==> Parameters: 2(Integer)
2020-11-09 16:23:02 -<==      Total: 2
2020-11-09 16:23:02 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:23:02 -==> Parameters: 2(Integer)
2020-11-09 16:23:02 -<==      Total: 3
2020-11-09 16:23:05 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:23:05 -==> Parameters: 1(Integer)
2020-11-09 16:23:05 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:23:05 -==> Parameters: 11(Integer)
2020-11-09 16:23:05 -<==      Total: 0
2020-11-09 16:23:05 -<==      Total: 1
2020-11-09 16:23:05 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:23:05 -==> Parameters: 3(Integer)
2020-11-09 16:23:05 -<==      Total: 1
2020-11-09 16:23:05 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:23:05 -==> Parameters: 3(Integer)
2020-11-09 16:23:05 -<==      Total: 2
2020-11-09 16:23:05 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:23:05 -==> Parameters: 3(Integer)
2020-11-09 16:23:05 -<==      Total: 5
2020-11-09 16:23:40 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:23:40 -==> Parameters: 11(Integer)
2020-11-09 16:23:40 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:23:40 -==> Parameters: 6(Integer)
2020-11-09 16:23:40 -<==      Total: 1
2020-11-09 16:23:40 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:23:40 -==> Parameters: 2(Integer)
2020-11-09 16:23:40 -<==      Total: 3
2020-11-09 16:23:40 -<==      Total: 1
2020-11-09 16:23:40 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:23:40 -==> Parameters: 2(Integer)
2020-11-09 16:23:40 -<==      Total: 2
2020-11-09 16:23:40 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:23:40 -==> Parameters: 2(Integer)
2020-11-09 16:23:40 -<==      Total: 3
2020-11-09 16:23:42 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:23:42 -==> Parameters: 1(Integer)
2020-11-09 16:23:42 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:23:42 -==> Parameters: 11(Integer)
2020-11-09 16:23:42 -<==      Total: 0
2020-11-09 16:23:42 -<==      Total: 1
2020-11-09 16:23:42 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:23:42 -==> Parameters: 3(Integer)
2020-11-09 16:23:42 -<==      Total: 1
2020-11-09 16:23:42 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:23:42 -==> Parameters: 3(Integer)
2020-11-09 16:23:42 -<==      Total: 2
2020-11-09 16:23:42 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:23:42 -==> Parameters: 3(Integer)
2020-11-09 16:23:42 -<==      Total: 5
2020-11-09 16:23:47 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:23:47 -==> Parameters: 11(Integer)
2020-11-09 16:23:47 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:23:47 -==> Parameters: 1(Integer)
2020-11-09 16:23:47 -<==      Total: 1
2020-11-09 16:23:47 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:23:47 -==> Parameters: 3(Integer)
2020-11-09 16:23:47 -<==      Total: 0
2020-11-09 16:23:47 -<==      Total: 1
2020-11-09 16:23:47 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:23:47 -==> Parameters: 3(Integer)
2020-11-09 16:23:47 -<==      Total: 2
2020-11-09 16:23:47 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:23:47 -==> Parameters: 3(Integer)
2020-11-09 16:23:47 -<==      Total: 5
2020-11-09 16:23:48 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:23:48 -==> Parameters: 6(Integer)
2020-11-09 16:23:48 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:23:48 -==> Parameters: 11(Integer)
2020-11-09 16:23:48 -<==      Total: 3
2020-11-09 16:23:48 -<==      Total: 1
2020-11-09 16:23:48 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:23:48 -==> Parameters: 2(Integer)
2020-11-09 16:23:48 -<==      Total: 1
2020-11-09 16:23:48 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:23:48 -==> Parameters: 2(Integer)
2020-11-09 16:23:48 -<==      Total: 2
2020-11-09 16:23:48 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:23:48 -==> Parameters: 2(Integer)
2020-11-09 16:23:48 -<==      Total: 3
2020-11-09 16:23:50 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:23:50 -==> Parameters: 11(Integer)
2020-11-09 16:23:50 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:23:50 -==> Parameters: 1(Integer)
2020-11-09 16:23:50 -<==      Total: 1
2020-11-09 16:23:50 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:23:50 -==> Parameters: 3(Integer)
2020-11-09 16:23:50 -<==      Total: 0
2020-11-09 16:23:50 -<==      Total: 1
2020-11-09 16:23:50 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:23:50 -==> Parameters: 3(Integer)
2020-11-09 16:23:50 -<==      Total: 2
2020-11-09 16:23:50 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:23:50 -==> Parameters: 3(Integer)
2020-11-09 16:23:50 -<==      Total: 5
2020-11-09 16:23:52 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:23:52 -==> Parameters: 6(Integer)
2020-11-09 16:23:52 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:23:52 -==> Parameters: 11(Integer)
2020-11-09 16:23:52 -<==      Total: 3
2020-11-09 16:23:52 -<==      Total: 1
2020-11-09 16:23:52 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:23:52 -==> Parameters: 2(Integer)
2020-11-09 16:23:52 -<==      Total: 1
2020-11-09 16:23:52 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:23:52 -==> Parameters: 2(Integer)
2020-11-09 16:23:52 -<==      Total: 2
2020-11-09 16:23:52 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:23:52 -==> Parameters: 2(Integer)
2020-11-09 16:23:52 -<==      Total: 3
2020-11-09 16:23:57 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:23:57 -==> Parameters: 11(Integer)
2020-11-09 16:23:57 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 16:23:57 -==> Parameters: 
2020-11-09 16:23:57 -<==      Total: 2
2020-11-09 16:23:57 -<==      Total: 3
2020-11-09 16:23:57 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:23:57 -==> Parameters: 3(Integer)
2020-11-09 16:23:57 -<==      Total: 1
2020-11-09 16:23:57 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:23:57 -==> Parameters: 5(Integer)
2020-11-09 16:23:57 -<==      Total: 1
2020-11-09 16:23:57 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:23:57 -==> Parameters: 2(Integer)
2020-11-09 16:23:57 -<==      Total: 1
2020-11-09 16:23:57 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:23:57 -==> Parameters: 3(Integer)
2020-11-09 16:23:57 -<==      Total: 1
2020-11-09 16:23:57 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:23:57 -==> Parameters: 2(Integer)
2020-11-09 16:23:57 -<==      Total: 1
2020-11-09 16:23:57 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:23:57 -==> Parameters: 2(Integer)
2020-11-09 16:23:57 -<==      Total: 1
2020-11-09 16:23:58 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:23:58 -==> Parameters: 11(Integer)
2020-11-09 16:23:58 -<==      Total: 2
2020-11-09 16:23:58 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:23:58 -==> Parameters: 6(Integer)
2020-11-09 16:23:58 -<==      Total: 1
2020-11-09 16:23:58 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:23:58 -==> Parameters: 1(Integer)
2020-11-09 16:23:58 -<==      Total: 1
2020-11-09 16:25:17 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:25:17 -==> Parameters: 11(Integer)
2020-11-09 16:25:17 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 16:25:17 -==> Parameters: 
2020-11-09 16:25:18 -<==      Total: 2
2020-11-09 16:25:18 -<==      Total: 3
2020-11-09 16:25:18 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:25:18 -==> Parameters: 3(Integer)
2020-11-09 16:25:18 -<==      Total: 1
2020-11-09 16:25:18 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:25:18 -==> Parameters: 5(Integer)
2020-11-09 16:25:18 -<==      Total: 1
2020-11-09 16:25:18 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:25:18 -==> Parameters: 2(Integer)
2020-11-09 16:25:18 -<==      Total: 1
2020-11-09 16:25:18 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:25:18 -==> Parameters: 3(Integer)
2020-11-09 16:25:18 -<==      Total: 1
2020-11-09 16:25:18 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:25:18 -==> Parameters: 2(Integer)
2020-11-09 16:25:18 -<==      Total: 1
2020-11-09 16:25:18 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:25:18 -==> Parameters: 2(Integer)
2020-11-09 16:25:18 -<==      Total: 1
2020-11-09 16:25:19 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:25:19 -==> Parameters: 11(Integer)
2020-11-09 16:25:19 -<==      Total: 2
2020-11-09 16:25:19 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:25:19 -==> Parameters: 6(Integer)
2020-11-09 16:25:19 -<==      Total: 1
2020-11-09 16:25:19 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:25:19 -==> Parameters: 1(Integer)
2020-11-09 16:25:19 -<==      Total: 1
2020-11-09 16:26:03 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:26:03 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:26:03 -==> Parameters: 11(Integer)
2020-11-09 16:26:03 -==> Parameters: 6(Integer)
2020-11-09 16:26:03 -<==      Total: 1
2020-11-09 16:26:03 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:26:03 -==> Parameters: 2(Integer)
2020-11-09 16:26:03 -<==      Total: 3
2020-11-09 16:26:03 -<==      Total: 1
2020-11-09 16:26:03 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:26:03 -==> Parameters: 2(Integer)
2020-11-09 16:26:03 -<==      Total: 2
2020-11-09 16:26:03 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:26:03 -==> Parameters: 2(Integer)
2020-11-09 16:26:03 -<==      Total: 3
2020-11-09 16:27:38 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:27:38 -==> Parameters: 11(Integer)
2020-11-09 16:27:38 -<==      Total: 2
2020-11-09 16:27:38 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:27:38 -==> Parameters: 6(Integer)
2020-11-09 16:27:38 -<==      Total: 1
2020-11-09 16:27:38 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:27:38 -==> Parameters: 1(Integer)
2020-11-09 16:27:38 -<==      Total: 1
2020-11-09 16:27:38 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:27:38 -==> Parameters: 11(Integer)
2020-11-09 16:27:38 -<==      Total: 2
2020-11-09 16:27:38 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:27:38 -==> Parameters: 6(Integer)
2020-11-09 16:27:38 -<==      Total: 1
2020-11-09 16:27:38 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:27:38 -==> Parameters: 1(Integer)
2020-11-09 16:27:38 -<==      Total: 1
2020-11-09 16:28:43 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:28:43 -==> Parameters: 11(Integer)
2020-11-09 16:28:43 -<==      Total: 2
2020-11-09 16:28:43 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:28:43 -==> Parameters: 6(Integer)
2020-11-09 16:28:43 -<==      Total: 1
2020-11-09 16:28:43 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:28:43 -==> Parameters: 1(Integer)
2020-11-09 16:28:43 -<==      Total: 1
2020-11-09 16:28:43 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:28:43 -==> Parameters: 11(Integer)
2020-11-09 16:28:43 -<==      Total: 2
2020-11-09 16:28:43 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:28:43 -==> Parameters: 6(Integer)
2020-11-09 16:28:43 -<==      Total: 1
2020-11-09 16:28:43 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:28:43 -==> Parameters: 1(Integer)
2020-11-09 16:28:43 -<==      Total: 1
2020-11-09 16:29:03 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 16:29:03 -==> Parameters: 
2020-11-09 16:29:03 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:29:03 -==> Parameters: 11(Integer)
2020-11-09 16:29:03 -<==      Total: 3
2020-11-09 16:29:03 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:29:03 -==> Parameters: 3(Integer)
2020-11-09 16:29:03 -<==      Total: 2
2020-11-09 16:29:03 -<==      Total: 1
2020-11-09 16:29:03 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:29:03 -==> Parameters: 5(Integer)
2020-11-09 16:29:03 -<==      Total: 1
2020-11-09 16:29:03 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:29:03 -==> Parameters: 2(Integer)
2020-11-09 16:29:03 -<==      Total: 1
2020-11-09 16:29:03 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:29:03 -==> Parameters: 3(Integer)
2020-11-09 16:29:03 -<==      Total: 1
2020-11-09 16:29:03 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:29:03 -==> Parameters: 2(Integer)
2020-11-09 16:29:03 -<==      Total: 1
2020-11-09 16:29:03 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:29:03 -==> Parameters: 2(Integer)
2020-11-09 16:29:03 -<==      Total: 1
2020-11-09 16:29:04 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:29:04 -==> Parameters: 11(Integer)
2020-11-09 16:29:04 -<==      Total: 2
2020-11-09 16:29:04 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:29:04 -==> Parameters: 6(Integer)
2020-11-09 16:29:04 -<==      Total: 1
2020-11-09 16:29:04 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:29:04 -==> Parameters: 1(Integer)
2020-11-09 16:29:04 -<==      Total: 1
2020-11-09 16:29:47 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 16:29:47 -==> Parameters: 
2020-11-09 16:29:47 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:29:47 -==> Parameters: 11(Integer)
2020-11-09 16:29:47 -<==      Total: 3
2020-11-09 16:29:47 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:29:47 -==> Parameters: 3(Integer)
2020-11-09 16:29:47 -<==      Total: 2
2020-11-09 16:29:47 -<==      Total: 1
2020-11-09 16:29:47 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:29:47 -==> Parameters: 5(Integer)
2020-11-09 16:29:47 -<==      Total: 1
2020-11-09 16:29:47 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:29:47 -==> Parameters: 2(Integer)
2020-11-09 16:29:47 -<==      Total: 1
2020-11-09 16:29:47 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:29:47 -==> Parameters: 3(Integer)
2020-11-09 16:29:47 -<==      Total: 1
2020-11-09 16:29:47 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 16:29:47 -==> Parameters: 2(Integer)
2020-11-09 16:29:47 -<==      Total: 1
2020-11-09 16:29:47 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 16:29:47 -==> Parameters: 2(Integer)
2020-11-09 16:29:47 -<==      Total: 1
2020-11-09 16:29:49 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:29:49 -==> Parameters: 11(Integer)
2020-11-09 16:29:49 -<==      Total: 2
2020-11-09 16:29:49 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:29:49 -==> Parameters: 6(Integer)
2020-11-09 16:29:49 -<==      Total: 1
2020-11-09 16:29:49 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:29:49 -==> Parameters: 1(Integer)
2020-11-09 16:29:49 -<==      Total: 1
2020-11-09 16:30:05 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 16:30:05 -==> Parameters: 15868808504@163.com(String)
2020-11-09 16:30:05 -<==      Total: 1
2020-11-09 16:30:05 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 16:30:05 -==> Parameters: 15868808504@163.com(String)
2020-11-09 16:30:05 -<==      Total: 1
2020-11-09 16:30:07 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:30:07 -==> Parameters: 11(Integer)
2020-11-09 16:30:07 -<==      Total: 2
2020-11-09 16:30:07 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:30:07 -==> Parameters: 6(Integer)
2020-11-09 16:30:07 -<==      Total: 1
2020-11-09 16:30:07 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:30:07 -==> Parameters: 1(Integer)
2020-11-09 16:30:07 -<==      Total: 1
2020-11-09 16:30:51 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:30:51 -==> Parameters: 11(Integer)
2020-11-09 16:30:51 -<==      Total: 2
2020-11-09 16:30:51 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:30:51 -==> Parameters: 6(Integer)
2020-11-09 16:30:51 -<==      Total: 1
2020-11-09 16:30:51 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:30:51 -==> Parameters: 1(Integer)
2020-11-09 16:30:51 -<==      Total: 1
2020-11-09 16:30:51 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:30:51 -==> Parameters: 11(Integer)
2020-11-09 16:30:51 -<==      Total: 2
2020-11-09 16:30:51 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:30:51 -==> Parameters: 6(Integer)
2020-11-09 16:30:51 -<==      Total: 1
2020-11-09 16:30:51 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:30:51 -==> Parameters: 1(Integer)
2020-11-09 16:30:51 -<==      Total: 1
2020-11-09 16:30:52 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:30:52 -==> Parameters: 6(Integer)
2020-11-09 16:30:52 -<==      Total: 3
2020-11-09 16:30:52 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:30:52 -==> Parameters: 11(Integer)
2020-11-09 16:30:52 -<==      Total: 1
2020-11-09 16:30:52 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:30:52 -==> Parameters: 2(Integer)
2020-11-09 16:30:52 -<==      Total: 1
2020-11-09 16:30:52 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:30:52 -==> Parameters: 2(Integer)
2020-11-09 16:30:52 -<==      Total: 2
2020-11-09 16:30:52 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:30:52 -==> Parameters: 2(Integer)
2020-11-09 16:30:52 -<==      Total: 3
2020-11-09 16:30:54 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:30:54 -==> Parameters: 11(Integer)
2020-11-09 16:30:54 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:30:54 -==> Parameters: 1(Integer)
2020-11-09 16:30:54 -<==      Total: 0
2020-11-09 16:30:54 -<==      Total: 1
2020-11-09 16:30:54 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:30:54 -==> Parameters: 3(Integer)
2020-11-09 16:30:54 -<==      Total: 1
2020-11-09 16:30:54 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:30:54 -==> Parameters: 3(Integer)
2020-11-09 16:30:54 -<==      Total: 2
2020-11-09 16:30:54 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:30:54 -==> Parameters: 3(Integer)
2020-11-09 16:30:54 -<==      Total: 5
2020-11-09 16:30:57 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:30:57 -==> Parameters: 6(Integer)
2020-11-09 16:30:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:30:57 -==> Parameters: 11(Integer)
2020-11-09 16:30:57 -<==      Total: 1
2020-11-09 16:30:57 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:30:57 -<==      Total: 3
2020-11-09 16:30:57 -==> Parameters: 2(Integer)
2020-11-09 16:30:57 -<==      Total: 1
2020-11-09 16:30:57 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:30:57 -==> Parameters: 2(Integer)
2020-11-09 16:30:58 -<==      Total: 2
2020-11-09 16:30:58 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:30:58 -==> Parameters: 2(Integer)
2020-11-09 16:30:58 -<==      Total: 3
2020-11-09 16:31:00 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:31:00 -==> Parameters: 1(Integer)
2020-11-09 16:31:00 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:31:00 -==> Parameters: 11(Integer)
2020-11-09 16:31:00 -<==      Total: 0
2020-11-09 16:31:00 -<==      Total: 1
2020-11-09 16:31:00 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:31:00 -==> Parameters: 3(Integer)
2020-11-09 16:31:00 -<==      Total: 1
2020-11-09 16:31:00 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:31:00 -==> Parameters: 3(Integer)
2020-11-09 16:31:00 -<==      Total: 2
2020-11-09 16:31:00 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:31:00 -==> Parameters: 3(Integer)
2020-11-09 16:31:00 -<==      Total: 5
2020-11-09 16:31:01 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:31:01 -==> Parameters: 11(Integer)
2020-11-09 16:31:01 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:31:01 -==> Parameters: 6(Integer)
2020-11-09 16:31:01 -<==      Total: 1
2020-11-09 16:31:01 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:31:01 -==> Parameters: 2(Integer)
2020-11-09 16:31:01 -<==      Total: 3
2020-11-09 16:31:01 -<==      Total: 1
2020-11-09 16:31:01 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:31:01 -==> Parameters: 2(Integer)
2020-11-09 16:31:01 -<==      Total: 2
2020-11-09 16:31:01 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:31:01 -==> Parameters: 2(Integer)
2020-11-09 16:31:01 -<==      Total: 3
2020-11-09 16:37:00 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:37:00 -==> Parameters: 11(Integer)
2020-11-09 16:37:00 -<==      Total: 2
2020-11-09 16:37:00 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:37:00 -==> Parameters: 6(Integer)
2020-11-09 16:37:00 -<==      Total: 1
2020-11-09 16:37:00 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:37:00 -==> Parameters: 1(Integer)
2020-11-09 16:37:00 -<==      Total: 1
2020-11-09 16:37:00 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:37:00 -==> Parameters: 11(Integer)
2020-11-09 16:37:00 -<==      Total: 2
2020-11-09 16:37:00 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:37:00 -==> Parameters: 6(Integer)
2020-11-09 16:37:00 -<==      Total: 1
2020-11-09 16:37:00 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:37:00 -==> Parameters: 1(Integer)
2020-11-09 16:37:00 -<==      Total: 1
2020-11-09 16:43:48 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:43:48 -==> Parameters: 11(Integer)
2020-11-09 16:43:48 -<==      Total: 2
2020-11-09 16:43:48 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:43:48 -==> Parameters: 6(Integer)
2020-11-09 16:43:48 -<==      Total: 1
2020-11-09 16:43:48 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:43:48 -==> Parameters: 1(Integer)
2020-11-09 16:43:48 -<==      Total: 1
2020-11-09 16:43:48 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 16:43:48 -==> Parameters: 11(Integer)
2020-11-09 16:43:48 -<==      Total: 2
2020-11-09 16:43:48 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:43:48 -==> Parameters: 6(Integer)
2020-11-09 16:43:48 -<==      Total: 1
2020-11-09 16:43:48 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 16:43:48 -==> Parameters: 1(Integer)
2020-11-09 16:43:48 -<==      Total: 1
2020-11-09 16:43:53 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:43:53 -==> Parameters: 6(Integer)
2020-11-09 16:43:53 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:43:53 -==> Parameters: 11(Integer)
2020-11-09 16:43:53 -<==      Total: 3
2020-11-09 16:43:53 -<==      Total: 1
2020-11-09 16:43:53 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:43:53 -==> Parameters: 2(Integer)
2020-11-09 16:43:53 -<==      Total: 1
2020-11-09 16:43:53 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:43:53 -==> Parameters: 2(Integer)
2020-11-09 16:43:53 -<==      Total: 2
2020-11-09 16:43:53 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:43:53 -==> Parameters: 2(Integer)
2020-11-09 16:43:53 -<==      Total: 3
2020-11-09 16:43:55 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:43:55 -==> Parameters: 11(Integer)
2020-11-09 16:43:55 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:43:55 -==> Parameters: 1(Integer)
2020-11-09 16:43:55 -<==      Total: 1
2020-11-09 16:43:55 -<==      Total: 0
2020-11-09 16:43:55 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:43:55 -==> Parameters: 3(Integer)
2020-11-09 16:43:55 -<==      Total: 1
2020-11-09 16:43:55 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:43:55 -==> Parameters: 3(Integer)
2020-11-09 16:43:55 -<==      Total: 2
2020-11-09 16:43:55 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:43:55 -==> Parameters: 3(Integer)
2020-11-09 16:43:55 -<==      Total: 5
2020-11-09 16:46:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:46:27 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:46:27 -==> Parameters: 6(Integer)
2020-11-09 16:46:27 -==> Parameters: 11(Integer)
2020-11-09 16:46:27 -<==      Total: 1
2020-11-09 16:46:27 -<==      Total: 3
2020-11-09 16:46:27 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:46:27 -==> Parameters: 2(Integer)
2020-11-09 16:46:27 -<==      Total: 1
2020-11-09 16:46:27 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:46:27 -==> Parameters: 2(Integer)
2020-11-09 16:46:27 -<==      Total: 2
2020-11-09 16:46:27 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:46:27 -==> Parameters: 2(Integer)
2020-11-09 16:46:27 -<==      Total: 3
2020-11-09 16:46:28 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:46:28 -==> Parameters: 1(Integer)
2020-11-09 16:46:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:46:28 -==> Parameters: 11(Integer)
2020-11-09 16:46:28 -<==      Total: 0
2020-11-09 16:46:28 -<==      Total: 1
2020-11-09 16:46:28 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:46:28 -==> Parameters: 3(Integer)
2020-11-09 16:46:28 -<==      Total: 1
2020-11-09 16:46:28 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:46:28 -==> Parameters: 3(Integer)
2020-11-09 16:46:28 -<==      Total: 2
2020-11-09 16:46:28 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:46:28 -==> Parameters: 3(Integer)
2020-11-09 16:46:28 -<==      Total: 5
2020-11-09 16:50:13 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 16:50:13 -==> Parameters: 11(Integer)
2020-11-09 16:50:13 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 16:50:13 -==> Parameters: 6(Integer)
2020-11-09 16:50:14 -<==      Total: 1
2020-11-09 16:50:14 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 16:50:14 -==> Parameters: 2(Integer)
2020-11-09 16:50:14 -<==      Total: 3
2020-11-09 16:50:14 -<==      Total: 1
2020-11-09 16:50:14 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 16:50:14 -==> Parameters: 2(Integer)
2020-11-09 16:50:14 -<==      Total: 2
2020-11-09 16:50:14 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 16:50:14 -==> Parameters: 2(Integer)
2020-11-09 16:50:14 -<==      Total: 3
2020-11-09 17:24:32 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:24:32 -==> Parameters: 11(Integer)
2020-11-09 17:24:32 -<==      Total: 2
2020-11-09 17:24:32 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:24:32 -==> Parameters: 6(Integer)
2020-11-09 17:24:32 -<==      Total: 1
2020-11-09 17:24:32 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:24:32 -==> Parameters: 1(Integer)
2020-11-09 17:24:32 -<==      Total: 1
2020-11-09 17:24:34 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:24:34 -==> Parameters: 6(Integer)
2020-11-09 17:24:34 -<==      Total: 3
2020-11-09 17:24:34 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:24:34 -==> Parameters: 11(Integer)
2020-11-09 17:24:34 -<==      Total: 1
2020-11-09 17:24:34 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:24:34 -==> Parameters: 2(Integer)
2020-11-09 17:24:34 -<==      Total: 1
2020-11-09 17:24:34 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:24:34 -==> Parameters: 2(Integer)
2020-11-09 17:24:34 -<==      Total: 2
2020-11-09 17:24:34 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:24:34 -==> Parameters: 2(Integer)
2020-11-09 17:24:34 -<==      Total: 3
2020-11-09 17:24:36 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:24:36 -==> Parameters: 1(Integer)
2020-11-09 17:24:36 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:24:36 -==> Parameters: 11(Integer)
2020-11-09 17:24:36 -<==      Total: 0
2020-11-09 17:24:36 -<==      Total: 1
2020-11-09 17:24:36 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:24:36 -==> Parameters: 3(Integer)
2020-11-09 17:24:36 -<==      Total: 1
2020-11-09 17:24:36 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:24:36 -==> Parameters: 3(Integer)
2020-11-09 17:24:36 -<==      Total: 2
2020-11-09 17:24:36 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:24:36 -==> Parameters: 3(Integer)
2020-11-09 17:24:36 -<==      Total: 5
2020-11-09 17:24:38 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:24:38 -==> Parameters: 11(Integer)
2020-11-09 17:24:38 -<==      Total: 1
2020-11-09 17:24:38 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:24:38 -==> Parameters: 6(Integer)
2020-11-09 17:24:38 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:24:38 -==> Parameters: 2(Integer)
2020-11-09 17:24:38 -<==      Total: 1
2020-11-09 17:24:38 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:24:38 -==> Parameters: 2(Integer)
2020-11-09 17:24:38 -<==      Total: 2
2020-11-09 17:24:38 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:24:38 -==> Parameters: 2(Integer)
2020-11-09 17:24:38 -<==      Total: 3
2020-11-09 17:24:38 -<==      Total: 3
2020-11-09 17:26:55 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:26:55 -==> Parameters: 11(Integer)
2020-11-09 17:26:55 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:26:55 -==> Parameters: 6(Integer)
2020-11-09 17:26:55 -<==      Total: 1
2020-11-09 17:26:55 -<==      Total: 3
2020-11-09 17:26:55 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:26:55 -==> Parameters: 2(Integer)
2020-11-09 17:26:55 -<==      Total: 1
2020-11-09 17:26:55 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:26:55 -==> Parameters: 2(Integer)
2020-11-09 17:26:55 -<==      Total: 2
2020-11-09 17:26:55 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:26:55 -==> Parameters: 2(Integer)
2020-11-09 17:26:55 -<==      Total: 3
2020-11-09 17:26:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:26:57 -==> Parameters: 11(Integer)
2020-11-09 17:26:57 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:26:57 -==> Parameters: 1(Integer)
2020-11-09 17:26:57 -<==      Total: 1
2020-11-09 17:26:57 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:26:57 -==> Parameters: 3(Integer)
2020-11-09 17:26:57 -<==      Total: 0
2020-11-09 17:26:57 -<==      Total: 1
2020-11-09 17:26:57 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:26:57 -==> Parameters: 3(Integer)
2020-11-09 17:26:57 -<==      Total: 2
2020-11-09 17:26:57 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:26:57 -==> Parameters: 3(Integer)
2020-11-09 17:26:57 -<==      Total: 5
2020-11-09 17:28:47 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:28:47 -==> Parameters: 11(Integer)
2020-11-09 17:28:47 -<==      Total: 2
2020-11-09 17:28:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:28:47 -==> Parameters: 6(Integer)
2020-11-09 17:28:47 -<==      Total: 1
2020-11-09 17:28:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:28:47 -==> Parameters: 1(Integer)
2020-11-09 17:28:47 -<==      Total: 1
2020-11-09 17:28:47 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:28:47 -==> Parameters: 11(Integer)
2020-11-09 17:28:47 -<==      Total: 2
2020-11-09 17:28:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:28:47 -==> Parameters: 6(Integer)
2020-11-09 17:28:47 -<==      Total: 1
2020-11-09 17:28:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:28:47 -==> Parameters: 1(Integer)
2020-11-09 17:28:47 -<==      Total: 1
2020-11-09 17:29:02 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:29:02 -==> Parameters: 11(Integer)
2020-11-09 17:29:02 -<==      Total: 2
2020-11-09 17:29:02 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:29:02 -==> Parameters: 6(Integer)
2020-11-09 17:29:02 -<==      Total: 1
2020-11-09 17:29:02 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:29:02 -==> Parameters: 1(Integer)
2020-11-09 17:29:03 -<==      Total: 1
2020-11-09 17:29:03 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:29:03 -==> Parameters: 11(Integer)
2020-11-09 17:29:03 -<==      Total: 2
2020-11-09 17:29:03 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:29:03 -==> Parameters: 6(Integer)
2020-11-09 17:29:03 -<==      Total: 1
2020-11-09 17:29:03 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:29:03 -==> Parameters: 1(Integer)
2020-11-09 17:29:03 -<==      Total: 1
2020-11-09 17:29:06 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:29:06 -==> Parameters: 6(Integer)
2020-11-09 17:29:06 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:29:06 -==> Parameters: 11(Integer)
2020-11-09 17:29:06 -<==      Total: 1
2020-11-09 17:29:06 -<==      Total: 3
2020-11-09 17:29:06 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:29:06 -==> Parameters: 2(Integer)
2020-11-09 17:29:06 -<==      Total: 1
2020-11-09 17:29:06 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:29:06 -==> Parameters: 2(Integer)
2020-11-09 17:29:06 -<==      Total: 2
2020-11-09 17:29:06 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:29:06 -==> Parameters: 2(Integer)
2020-11-09 17:29:06 -<==      Total: 3
2020-11-09 17:29:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:29:10 -==> Parameters: 11(Integer)
2020-11-09 17:29:10 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:29:10 -==> Parameters: 1(Integer)
2020-11-09 17:29:10 -<==      Total: 1
2020-11-09 17:29:10 -<==      Total: 0
2020-11-09 17:29:10 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:29:10 -==> Parameters: 3(Integer)
2020-11-09 17:29:10 -<==      Total: 1
2020-11-09 17:29:10 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:29:10 -==> Parameters: 3(Integer)
2020-11-09 17:29:10 -<==      Total: 2
2020-11-09 17:29:10 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:29:10 -==> Parameters: 3(Integer)
2020-11-09 17:29:10 -<==      Total: 5
2020-11-09 17:29:24 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:29:24 -==> Parameters: 11(Integer)
2020-11-09 17:29:24 -<==      Total: 2
2020-11-09 17:29:24 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:29:24 -==> Parameters: 6(Integer)
2020-11-09 17:29:24 -<==      Total: 1
2020-11-09 17:29:24 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:29:24 -==> Parameters: 1(Integer)
2020-11-09 17:29:24 -<==      Total: 1
2020-11-09 17:29:24 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:29:24 -==> Parameters: 11(Integer)
2020-11-09 17:29:24 -<==      Total: 2
2020-11-09 17:29:24 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:29:24 -==> Parameters: 6(Integer)
2020-11-09 17:29:24 -<==      Total: 1
2020-11-09 17:29:24 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:29:24 -==> Parameters: 1(Integer)
2020-11-09 17:29:24 -<==      Total: 1
2020-11-09 17:29:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:29:27 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:29:27 -==> Parameters: 11(Integer)
2020-11-09 17:29:27 -==> Parameters: 6(Integer)
2020-11-09 17:29:27 -<==      Total: 1
2020-11-09 17:29:27 -<==      Total: 3
2020-11-09 17:29:27 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:29:27 -==> Parameters: 2(Integer)
2020-11-09 17:29:28 -<==      Total: 1
2020-11-09 17:29:28 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:29:28 -==> Parameters: 2(Integer)
2020-11-09 17:29:28 -<==      Total: 2
2020-11-09 17:29:28 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:29:28 -==> Parameters: 2(Integer)
2020-11-09 17:29:28 -<==      Total: 3
2020-11-09 17:30:43 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:30:43 -==> Parameters: 1(Integer)
2020-11-09 17:30:43 -<==      Total: 0
2020-11-09 17:30:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:30:45 -==> Parameters: 11(Integer)
2020-11-09 17:30:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:30:45 -==> Parameters: 11(Integer)
2020-11-09 17:30:45 -<==      Total: 1
2020-11-09 17:30:45 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:30:45 -<==      Total: 1
2020-11-09 17:30:45 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:30:47 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:30:47 -==> Parameters: 6(Integer)
2020-11-09 17:30:47 -<==      Total: 3
2020-11-09 17:32:16 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:32:16 -==> Parameters: 11(Integer)
2020-11-09 17:32:16 -<==      Total: 2
2020-11-09 17:32:16 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:32:16 -==> Parameters: 6(Integer)
2020-11-09 17:32:16 -<==      Total: 1
2020-11-09 17:32:16 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:32:16 -==> Parameters: 1(Integer)
2020-11-09 17:32:16 -<==      Total: 1
2020-11-09 17:32:18 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:32:18 -==> Parameters: 11(Integer)
2020-11-09 17:32:18 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:32:18 -<==      Total: 1
2020-11-09 17:32:18 -==> Parameters: 6(Integer)
2020-11-09 17:32:18 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:32:18 -<==      Total: 3
2020-11-09 17:32:20 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:32:20 -==> Parameters: 1(Integer)
2020-11-09 17:32:20 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:32:20 -==> Parameters: 11(Integer)
2020-11-09 17:32:20 -<==      Total: 0
2020-11-09 17:32:20 -<==      Total: 1
2020-11-09 17:32:20 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:32:22 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:32:22 -==> Parameters: 6(Integer)
2020-11-09 17:32:22 -<==      Total: 3
2020-11-09 17:32:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:32:22 -==> Parameters: 11(Integer)
2020-11-09 17:32:22 -<==      Total: 1
2020-11-09 17:32:22 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:32:27 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:32:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:32:27 -==> Parameters: 11(Integer)
2020-11-09 17:32:27 -==> Parameters: 6(Integer)
2020-11-09 17:32:27 -<==      Total: 3
2020-11-09 17:32:27 -<==      Total: 1
2020-11-09 17:32:27 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:32:29 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:32:29 -==> Parameters: 1(Integer)
2020-11-09 17:32:29 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:32:29 -==> Parameters: 11(Integer)
2020-11-09 17:32:29 -<==      Total: 1
2020-11-09 17:32:29 -<==      Total: 0
2020-11-09 17:32:29 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:32:48 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:32:48 -==> Parameters: 11(Integer)
2020-11-09 17:32:48 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:32:48 -==> Parameters: 6(Integer)
2020-11-09 17:32:48 -<==      Total: 1
2020-11-09 17:32:48 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:32:48 -<==      Total: 3
2020-11-09 17:32:51 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:32:51 -==> Parameters: 1(Integer)
2020-11-09 17:32:51 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:32:51 -==> Parameters: 11(Integer)
2020-11-09 17:32:51 -<==      Total: 0
2020-11-09 17:32:51 -<==      Total: 1
2020-11-09 17:32:51 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:33:11 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:33:11 -==> Parameters: 6(Integer)
2020-11-09 17:33:11 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:33:11 -==> Parameters: 11(Integer)
2020-11-09 17:33:11 -<==      Total: 3
2020-11-09 17:33:11 -<==      Total: 1
2020-11-09 17:33:11 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:33:12 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:33:12 -==> Parameters: 1(Integer)
2020-11-09 17:33:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:33:12 -==> Parameters: 11(Integer)
2020-11-09 17:33:12 -<==      Total: 1
2020-11-09 17:33:12 -<==      Total: 0
2020-11-09 17:33:12 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:33:31 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:33:31 -==> Parameters: 6(Integer)
2020-11-09 17:33:31 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:33:31 -==> Parameters: 11(Integer)
2020-11-09 17:33:31 -<==      Total: 3
2020-11-09 17:33:31 -<==      Total: 1
2020-11-09 17:33:31 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:33:32 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:33:32 -==> Parameters: 1(Integer)
2020-11-09 17:33:32 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:33:32 -==> Parameters: 11(Integer)
2020-11-09 17:33:32 -<==      Total: 0
2020-11-09 17:33:32 -<==      Total: 1
2020-11-09 17:33:32 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:35:37 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:35:37 -==> Parameters: 11(Integer)
2020-11-09 17:35:37 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:35:37 -==> Parameters: 6(Integer)
2020-11-09 17:35:37 -<==      Total: 1
2020-11-09 17:35:37 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:35:37 -<==      Total: 3
2020-11-09 17:35:39 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:35:39 -==> Parameters: 1(Integer)
2020-11-09 17:35:39 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:35:39 -==> Parameters: 11(Integer)
2020-11-09 17:35:39 -<==      Total: 0
2020-11-09 17:35:39 -<==      Total: 1
2020-11-09 17:35:39 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:35:41 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:35:41 -==> Parameters: 6(Integer)
2020-11-09 17:35:41 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:35:41 -==> Parameters: 11(Integer)
2020-11-09 17:35:41 -<==      Total: 3
2020-11-09 17:35:41 -<==      Total: 1
2020-11-09 17:35:41 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:35:42 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 17:35:42 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:35:42 -==> Parameters: 
2020-11-09 17:35:42 -==> Parameters: 11(Integer)
2020-11-09 17:35:42 -<==      Total: 2
2020-11-09 17:35:42 -<==      Total: 3
2020-11-09 17:35:42 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:35:42 -==> Parameters: 3(Integer)
2020-11-09 17:35:42 -<==      Total: 1
2020-11-09 17:35:42 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:35:42 -==> Parameters: 5(Integer)
2020-11-09 17:35:42 -<==      Total: 1
2020-11-09 17:35:42 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:35:42 -==> Parameters: 2(Integer)
2020-11-09 17:35:42 -<==      Total: 1
2020-11-09 17:35:42 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:35:42 -==> Parameters: 3(Integer)
2020-11-09 17:35:42 -<==      Total: 1
2020-11-09 17:35:42 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:35:42 -==> Parameters: 2(Integer)
2020-11-09 17:35:42 -<==      Total: 1
2020-11-09 17:35:42 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:35:42 -==> Parameters: 2(Integer)
2020-11-09 17:35:42 -<==      Total: 1
2020-11-09 17:35:45 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:35:45 -==> Parameters: 11(Integer)
2020-11-09 17:35:45 -<==      Total: 2
2020-11-09 17:35:45 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:35:45 -==> Parameters: 6(Integer)
2020-11-09 17:35:45 -<==      Total: 1
2020-11-09 17:35:45 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:35:45 -==> Parameters: 1(Integer)
2020-11-09 17:35:45 -<==      Total: 1
2020-11-09 17:35:46 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:35:46 -==> Parameters: 6(Integer)
2020-11-09 17:35:46 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:35:46 -==> Parameters: 11(Integer)
2020-11-09 17:35:46 -<==      Total: 3
2020-11-09 17:35:46 -<==      Total: 1
2020-11-09 17:35:46 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:36:08 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:36:08 -==> Parameters: 6(Integer)
2020-11-09 17:36:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:36:08 -==> Parameters: 11(Integer)
2020-11-09 17:36:08 -<==      Total: 3
2020-11-09 17:36:08 -<==      Total: 1
2020-11-09 17:36:08 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:36:09 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:36:09 -==> Parameters: 6(Integer)
2020-11-09 17:36:09 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:36:09 -==> Parameters: 11(Integer)
2020-11-09 17:36:09 -<==      Total: 1
2020-11-09 17:36:09 -<==      Total: 3
2020-11-09 17:36:09 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:36:10 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:36:10 -==> Parameters: 1(Integer)
2020-11-09 17:36:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:36:10 -==> Parameters: 11(Integer)
2020-11-09 17:36:10 -<==      Total: 1
2020-11-09 17:36:10 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:36:10 -<==      Total: 0
2020-11-09 17:36:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:36:12 -==> Parameters: 11(Integer)
2020-11-09 17:36:12 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:36:12 -==> Parameters: 6(Integer)
2020-11-09 17:36:12 -<==      Total: 1
2020-11-09 17:36:12 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:36:12 -<==      Total: 3
2020-11-09 17:36:13 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 17:36:13 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:36:13 -==> Parameters: 
2020-11-09 17:36:13 -==> Parameters: 11(Integer)
2020-11-09 17:36:13 -<==      Total: 2
2020-11-09 17:36:13 -<==      Total: 3
2020-11-09 17:36:13 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:36:13 -==> Parameters: 3(Integer)
2020-11-09 17:36:13 -<==      Total: 1
2020-11-09 17:36:13 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:36:13 -==> Parameters: 5(Integer)
2020-11-09 17:36:13 -<==      Total: 1
2020-11-09 17:36:13 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:36:13 -==> Parameters: 2(Integer)
2020-11-09 17:36:13 -<==      Total: 1
2020-11-09 17:36:13 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:36:13 -==> Parameters: 3(Integer)
2020-11-09 17:36:13 -<==      Total: 1
2020-11-09 17:36:13 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:36:13 -==> Parameters: 2(Integer)
2020-11-09 17:36:14 -<==      Total: 1
2020-11-09 17:36:14 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:36:14 -==> Parameters: 2(Integer)
2020-11-09 17:36:14 -<==      Total: 1
2020-11-09 17:36:14 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:36:14 -==> Parameters: 11(Integer)
2020-11-09 17:36:14 -<==      Total: 2
2020-11-09 17:36:14 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:36:14 -==> Parameters: 6(Integer)
2020-11-09 17:36:14 -<==      Total: 1
2020-11-09 17:36:14 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:36:14 -==> Parameters: 1(Integer)
2020-11-09 17:36:15 -<==      Total: 1
2020-11-09 17:36:16 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:36:16 -==> Parameters: 11(Integer)
2020-11-09 17:36:16 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:36:16 -==> Parameters: 6(Integer)
2020-11-09 17:36:16 -<==      Total: 1
2020-11-09 17:36:16 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:36:16 -<==      Total: 3
2020-11-09 17:36:19 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:36:19 -==> Parameters: 1(Integer)
2020-11-09 17:36:19 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:36:19 -==> Parameters: 11(Integer)
2020-11-09 17:36:19 -<==      Total: 1
2020-11-09 17:36:19 -<==      Total: 0
2020-11-09 17:36:19 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:36:20 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:36:20 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:36:20 -==> Parameters: 6(Integer)
2020-11-09 17:36:20 -==> Parameters: 11(Integer)
2020-11-09 17:36:20 -<==      Total: 1
2020-11-09 17:36:20 -<==      Total: 3
2020-11-09 17:36:20 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:36:47 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:36:47 -==> Parameters: 11(Integer)
2020-11-09 17:36:47 -<==      Total: 2
2020-11-09 17:36:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:36:47 -==> Parameters: 6(Integer)
2020-11-09 17:36:47 -<==      Total: 1
2020-11-09 17:36:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:36:47 -==> Parameters: 1(Integer)
2020-11-09 17:36:47 -<==      Total: 1
2020-11-09 17:36:47 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:36:47 -==> Parameters: 11(Integer)
2020-11-09 17:36:47 -<==      Total: 2
2020-11-09 17:36:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:36:47 -==> Parameters: 6(Integer)
2020-11-09 17:36:47 -<==      Total: 1
2020-11-09 17:36:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:36:47 -==> Parameters: 1(Integer)
2020-11-09 17:36:47 -<==      Total: 1
2020-11-09 17:36:48 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:36:48 -==> Parameters: 6(Integer)
2020-11-09 17:36:48 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:36:48 -==> Parameters: 11(Integer)
2020-11-09 17:36:48 -<==      Total: 3
2020-11-09 17:36:48 -<==      Total: 1
2020-11-09 17:36:48 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:36:50 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:36:50 -==> Parameters: 1(Integer)
2020-11-09 17:36:50 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:36:50 -==> Parameters: 11(Integer)
2020-11-09 17:36:50 -<==      Total: 0
2020-11-09 17:36:50 -<==      Total: 1
2020-11-09 17:36:50 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:37:02 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 17:37:02 -==> Parameters: 15868808504@163.com(String)
2020-11-09 17:37:02 -<==      Total: 1
2020-11-09 17:37:02 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 17:37:02 -==> Parameters: 15868808504@163.com(String)
2020-11-09 17:37:02 -<==      Total: 1
2020-11-09 17:37:03 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:37:03 -==> Parameters: 11(Integer)
2020-11-09 17:37:04 -<==      Total: 2
2020-11-09 17:37:04 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:37:04 -==> Parameters: 6(Integer)
2020-11-09 17:37:04 -<==      Total: 1
2020-11-09 17:37:04 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:37:04 -==> Parameters: 1(Integer)
2020-11-09 17:37:04 -<==      Total: 1
2020-11-09 17:37:05 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:37:05 -==> Parameters: 11(Integer)
2020-11-09 17:37:05 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:37:05 -==> Parameters: 6(Integer)
2020-11-09 17:37:05 -<==      Total: 1
2020-11-09 17:37:05 -<==      Total: 3
2020-11-09 17:37:05 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:37:05 -==> Parameters: 2(Integer)
2020-11-09 17:37:05 -<==      Total: 1
2020-11-09 17:37:05 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:37:05 -==> Parameters: 2(Integer)
2020-11-09 17:37:05 -<==      Total: 2
2020-11-09 17:37:05 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:37:05 -==> Parameters: 2(Integer)
2020-11-09 17:37:05 -<==      Total: 3
2020-11-09 17:37:07 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:37:07 -==> Parameters: 1(Integer)
2020-11-09 17:37:07 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:37:07 -==> Parameters: 11(Integer)
2020-11-09 17:37:07 -<==      Total: 1
2020-11-09 17:37:07 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:37:07 -==> Parameters: 3(Integer)
2020-11-09 17:37:07 -<==      Total: 0
2020-11-09 17:37:07 -<==      Total: 1
2020-11-09 17:37:07 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:37:07 -==> Parameters: 3(Integer)
2020-11-09 17:37:07 -<==      Total: 2
2020-11-09 17:37:07 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:37:07 -==> Parameters: 3(Integer)
2020-11-09 17:37:07 -<==      Total: 5
2020-11-09 17:38:13 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:38:13 -==> Parameters: 11(Integer)
2020-11-09 17:38:13 -<==      Total: 2
2020-11-09 17:38:13 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:38:13 -==> Parameters: 6(Integer)
2020-11-09 17:38:13 -<==      Total: 1
2020-11-09 17:38:13 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:38:13 -==> Parameters: 1(Integer)
2020-11-09 17:38:13 -<==      Total: 1
2020-11-09 17:38:13 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:38:13 -==> Parameters: 11(Integer)
2020-11-09 17:38:13 -<==      Total: 2
2020-11-09 17:38:13 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:38:13 -==> Parameters: 6(Integer)
2020-11-09 17:38:13 -<==      Total: 1
2020-11-09 17:38:13 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:38:13 -==> Parameters: 1(Integer)
2020-11-09 17:38:13 -<==      Total: 1
2020-11-09 17:38:15 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:38:15 -==> Parameters: 6(Integer)
2020-11-09 17:38:15 -<==      Total: 3
2020-11-09 17:38:15 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:38:15 -==> Parameters: 11(Integer)
2020-11-09 17:38:15 -<==      Total: 1
2020-11-09 17:38:15 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:38:15 -==> Parameters: 2(Integer)
2020-11-09 17:38:15 -<==      Total: 1
2020-11-09 17:38:15 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:38:15 -==> Parameters: 2(Integer)
2020-11-09 17:38:15 -<==      Total: 2
2020-11-09 17:38:15 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:38:15 -==> Parameters: 2(Integer)
2020-11-09 17:38:15 -<==      Total: 3
2020-11-09 17:39:27 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:39:27 -==> Parameters: 11(Integer)
2020-11-09 17:39:27 -<==      Total: 2
2020-11-09 17:39:27 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:39:27 -==> Parameters: 6(Integer)
2020-11-09 17:39:27 -<==      Total: 1
2020-11-09 17:39:27 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:39:27 -==> Parameters: 1(Integer)
2020-11-09 17:39:28 -<==      Total: 1
2020-11-09 17:39:28 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:39:28 -==> Parameters: 11(Integer)
2020-11-09 17:39:28 -<==      Total: 2
2020-11-09 17:39:28 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:39:28 -==> Parameters: 6(Integer)
2020-11-09 17:39:28 -<==      Total: 1
2020-11-09 17:39:28 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:39:28 -==> Parameters: 1(Integer)
2020-11-09 17:39:28 -<==      Total: 1
2020-11-09 17:39:29 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:39:29 -==> Parameters: 6(Integer)
2020-11-09 17:39:29 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:39:29 -==> Parameters: 11(Integer)
2020-11-09 17:39:29 -<==      Total: 3
2020-11-09 17:39:29 -<==      Total: 1
2020-11-09 17:39:29 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:39:29 -==> Parameters: 2(Integer)
2020-11-09 17:39:29 -<==      Total: 1
2020-11-09 17:39:29 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:39:29 -==> Parameters: 2(Integer)
2020-11-09 17:39:29 -<==      Total: 2
2020-11-09 17:39:29 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:39:29 -==> Parameters: 2(Integer)
2020-11-09 17:39:29 -<==      Total: 3
2020-11-09 17:40:35 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:40:35 -==> Parameters: 11(Integer)
2020-11-09 17:40:35 -<==      Total: 1
2020-11-09 17:40:35 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:40:35 -==> Parameters: 6(Integer)
2020-11-09 17:40:35 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:40:35 -<==      Total: 3
2020-11-09 17:40:37 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:40:37 -==> Parameters: 11(Integer)
2020-11-09 17:40:37 -<==      Total: 1
2020-11-09 17:40:37 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 17:40:41 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:40:41 -==> Parameters: 1(Integer)
2020-11-09 17:40:41 -<==      Total: 0
2020-11-09 17:43:01 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:43:01 -==> Parameters: 11(Integer)
2020-11-09 17:43:01 -<==      Total: 2
2020-11-09 17:43:01 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:43:01 -==> Parameters: 6(Integer)
2020-11-09 17:43:02 -<==      Total: 1
2020-11-09 17:43:02 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:43:02 -==> Parameters: 1(Integer)
2020-11-09 17:43:02 -<==      Total: 1
2020-11-09 17:43:02 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:43:02 -==> Parameters: 11(Integer)
2020-11-09 17:43:02 -<==      Total: 2
2020-11-09 17:43:02 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:43:02 -==> Parameters: 6(Integer)
2020-11-09 17:43:02 -<==      Total: 1
2020-11-09 17:43:02 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:43:02 -==> Parameters: 1(Integer)
2020-11-09 17:43:02 -<==      Total: 1
2020-11-09 17:43:05 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:43:05 -==> Parameters: 11(Integer)
2020-11-09 17:43:05 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:43:05 -==> Parameters: 6(Integer)
2020-11-09 17:43:05 -<==      Total: 1
2020-11-09 17:43:05 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:43:05 -==> Parameters: 2(Integer)
2020-11-09 17:43:05 -<==      Total: 3
2020-11-09 17:43:05 -<==      Total: 1
2020-11-09 17:43:05 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:43:05 -==> Parameters: 2(Integer)
2020-11-09 17:43:05 -<==      Total: 2
2020-11-09 17:43:05 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:43:05 -==> Parameters: 2(Integer)
2020-11-09 17:43:05 -<==      Total: 3
2020-11-09 17:44:23 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:44:23 -==> Parameters: 11(Integer)
2020-11-09 17:44:23 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:44:23 -==> Parameters: 6(Integer)
2020-11-09 17:44:23 -<==      Total: 1
2020-11-09 17:44:23 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:44:23 -==> Parameters: 2(Integer)
2020-11-09 17:44:23 -<==      Total: 3
2020-11-09 17:44:23 -<==      Total: 1
2020-11-09 17:44:23 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:44:23 -==> Parameters: 2(Integer)
2020-11-09 17:44:23 -<==      Total: 2
2020-11-09 17:44:23 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:44:23 -==> Parameters: 2(Integer)
2020-11-09 17:44:23 -<==      Total: 3
2020-11-09 17:44:40 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:44:40 -==> Parameters: 11(Integer)
2020-11-09 17:44:40 -<==      Total: 2
2020-11-09 17:44:40 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:44:40 -==> Parameters: 6(Integer)
2020-11-09 17:44:40 -<==      Total: 1
2020-11-09 17:44:40 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:44:40 -==> Parameters: 1(Integer)
2020-11-09 17:44:40 -<==      Total: 1
2020-11-09 17:44:40 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:44:40 -==> Parameters: 11(Integer)
2020-11-09 17:44:40 -<==      Total: 2
2020-11-09 17:44:40 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:44:40 -==> Parameters: 6(Integer)
2020-11-09 17:44:40 -<==      Total: 1
2020-11-09 17:44:40 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:44:40 -==> Parameters: 1(Integer)
2020-11-09 17:44:40 -<==      Total: 1
2020-11-09 17:44:41 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:44:41 -==> Parameters: 11(Integer)
2020-11-09 17:44:41 -<==      Total: 1
2020-11-09 17:44:41 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:44:41 -==> Parameters: 2(Integer)
2020-11-09 17:44:41 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:44:41 -==> Parameters: 6(Integer)
2020-11-09 17:44:41 -<==      Total: 1
2020-11-09 17:44:41 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:44:41 -==> Parameters: 2(Integer)
2020-11-09 17:44:41 -<==      Total: 3
2020-11-09 17:44:41 -<==      Total: 2
2020-11-09 17:44:41 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:44:41 -==> Parameters: 2(Integer)
2020-11-09 17:44:42 -<==      Total: 3
2020-11-09 17:46:02 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 17:46:02 -==> Parameters: 4(Integer)
2020-11-09 17:46:02 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 17:46:02 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 17:46:02 -<==      Total: 1
2020-11-09 17:46:02 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 17:46:02 -==> Parameters: 4(Integer)
2020-11-09 17:46:02 -<==      Total: 0
2020-11-09 17:46:02 -<==      Total: 1
2020-11-09 17:47:32 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:47:32 -==> Parameters: 6(Integer)
2020-11-09 17:47:32 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:47:32 -==> Parameters: 11(Integer)
2020-11-09 17:47:32 -<==      Total: 3
2020-11-09 17:47:32 -<==      Total: 1
2020-11-09 17:47:32 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:47:32 -==> Parameters: 2(Integer)
2020-11-09 17:47:32 -<==      Total: 1
2020-11-09 17:47:32 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:47:32 -==> Parameters: 2(Integer)
2020-11-09 17:47:32 -<==      Total: 2
2020-11-09 17:47:32 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:47:32 -==> Parameters: 2(Integer)
2020-11-09 17:47:32 -<==      Total: 3
2020-11-09 17:47:34 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:47:34 -==> Parameters: 11(Integer)
2020-11-09 17:47:34 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:47:34 -==> Parameters: 1(Integer)
2020-11-09 17:47:34 -<==      Total: 0
2020-11-09 17:47:34 -<==      Total: 1
2020-11-09 17:47:34 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:47:34 -==> Parameters: 3(Integer)
2020-11-09 17:47:34 -<==      Total: 1
2020-11-09 17:47:34 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:47:34 -==> Parameters: 3(Integer)
2020-11-09 17:47:34 -<==      Total: 2
2020-11-09 17:47:34 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:47:34 -==> Parameters: 3(Integer)
2020-11-09 17:47:34 -<==      Total: 5
2020-11-09 17:48:50 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:48:50 -==> Parameters: 11(Integer)
2020-11-09 17:48:50 -<==      Total: 2
2020-11-09 17:48:50 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:48:50 -==> Parameters: 6(Integer)
2020-11-09 17:48:50 -<==      Total: 1
2020-11-09 17:48:50 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:48:50 -==> Parameters: 1(Integer)
2020-11-09 17:48:50 -<==      Total: 1
2020-11-09 17:48:50 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:48:50 -==> Parameters: 11(Integer)
2020-11-09 17:48:50 -<==      Total: 2
2020-11-09 17:48:50 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:48:50 -==> Parameters: 6(Integer)
2020-11-09 17:48:50 -<==      Total: 1
2020-11-09 17:48:50 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:48:50 -==> Parameters: 1(Integer)
2020-11-09 17:48:50 -<==      Total: 1
2020-11-09 17:48:51 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:48:51 -==> Parameters: 6(Integer)
2020-11-09 17:48:51 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:48:51 -==> Parameters: 11(Integer)
2020-11-09 17:48:51 -<==      Total: 3
2020-11-09 17:48:51 -<==      Total: 1
2020-11-09 17:48:51 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:48:51 -==> Parameters: 2(Integer)
2020-11-09 17:48:51 -<==      Total: 1
2020-11-09 17:48:51 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:48:51 -==> Parameters: 2(Integer)
2020-11-09 17:48:51 -<==      Total: 2
2020-11-09 17:48:51 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:48:51 -==> Parameters: 2(Integer)
2020-11-09 17:48:51 -<==      Total: 3
2020-11-09 17:49:33 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 17:49:33 -==> Parameters: 
2020-11-09 17:49:33 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:49:33 -==> Parameters: 11(Integer)
2020-11-09 17:49:33 -<==      Total: 3
2020-11-09 17:49:33 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:49:33 -==> Parameters: 3(Integer)
2020-11-09 17:49:33 -<==      Total: 2
2020-11-09 17:49:33 -<==      Total: 1
2020-11-09 17:49:33 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:49:33 -==> Parameters: 5(Integer)
2020-11-09 17:49:33 -<==      Total: 1
2020-11-09 17:49:33 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:49:33 -==> Parameters: 2(Integer)
2020-11-09 17:49:33 -<==      Total: 1
2020-11-09 17:49:33 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:49:33 -==> Parameters: 3(Integer)
2020-11-09 17:49:33 -<==      Total: 1
2020-11-09 17:49:33 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:49:33 -==> Parameters: 2(Integer)
2020-11-09 17:49:33 -<==      Total: 1
2020-11-09 17:49:33 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:49:33 -==> Parameters: 2(Integer)
2020-11-09 17:49:33 -<==      Total: 1
2020-11-09 17:49:34 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:49:34 -==> Parameters: 11(Integer)
2020-11-09 17:49:34 -<==      Total: 2
2020-11-09 17:49:34 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:49:34 -==> Parameters: 6(Integer)
2020-11-09 17:49:34 -<==      Total: 1
2020-11-09 17:49:34 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:49:34 -==> Parameters: 1(Integer)
2020-11-09 17:49:34 -<==      Total: 1
2020-11-09 17:49:36 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:49:36 -==> Parameters: 6(Integer)
2020-11-09 17:49:36 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:49:36 -==> Parameters: 11(Integer)
2020-11-09 17:49:36 -<==      Total: 3
2020-11-09 17:49:36 -<==      Total: 1
2020-11-09 17:49:36 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:49:36 -==> Parameters: 2(Integer)
2020-11-09 17:49:36 -<==      Total: 1
2020-11-09 17:49:36 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:49:36 -==> Parameters: 2(Integer)
2020-11-09 17:49:36 -<==      Total: 2
2020-11-09 17:49:36 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:49:36 -==> Parameters: 2(Integer)
2020-11-09 17:49:36 -<==      Total: 3
2020-11-09 17:49:37 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:49:37 -==> Parameters: 11(Integer)
2020-11-09 17:49:37 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:49:37 -==> Parameters: 1(Integer)
2020-11-09 17:49:37 -<==      Total: 0
2020-11-09 17:49:37 -<==      Total: 1
2020-11-09 17:49:37 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:49:37 -==> Parameters: 3(Integer)
2020-11-09 17:49:37 -<==      Total: 1
2020-11-09 17:49:37 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:49:37 -==> Parameters: 3(Integer)
2020-11-09 17:49:37 -<==      Total: 2
2020-11-09 17:49:37 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:49:37 -==> Parameters: 3(Integer)
2020-11-09 17:49:37 -<==      Total: 5
2020-11-09 17:49:38 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:49:38 -==> Parameters: 6(Integer)
2020-11-09 17:49:38 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:49:38 -==> Parameters: 11(Integer)
2020-11-09 17:49:38 -<==      Total: 1
2020-11-09 17:49:38 -<==      Total: 3
2020-11-09 17:49:38 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:49:38 -==> Parameters: 2(Integer)
2020-11-09 17:49:38 -<==      Total: 1
2020-11-09 17:49:38 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:49:38 -==> Parameters: 2(Integer)
2020-11-09 17:49:39 -<==      Total: 2
2020-11-09 17:49:39 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:49:39 -==> Parameters: 2(Integer)
2020-11-09 17:49:39 -<==      Total: 3
2020-11-09 17:49:45 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:49:45 -==> Parameters: 11(Integer)
2020-11-09 17:49:45 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 17:49:45 -==> Parameters: 
2020-11-09 17:49:45 -<==      Total: 2
2020-11-09 17:49:45 -<==      Total: 3
2020-11-09 17:49:45 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:49:45 -==> Parameters: 3(Integer)
2020-11-09 17:49:45 -<==      Total: 1
2020-11-09 17:49:45 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:49:45 -==> Parameters: 5(Integer)
2020-11-09 17:49:45 -<==      Total: 1
2020-11-09 17:49:45 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:49:45 -==> Parameters: 2(Integer)
2020-11-09 17:49:45 -<==      Total: 1
2020-11-09 17:49:45 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:49:45 -==> Parameters: 3(Integer)
2020-11-09 17:49:45 -<==      Total: 1
2020-11-09 17:49:45 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:49:45 -==> Parameters: 2(Integer)
2020-11-09 17:49:45 -<==      Total: 1
2020-11-09 17:49:45 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:49:45 -==> Parameters: 2(Integer)
2020-11-09 17:49:45 -<==      Total: 1
2020-11-09 17:49:45 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:49:45 -==> Parameters: 11(Integer)
2020-11-09 17:49:46 -<==      Total: 2
2020-11-09 17:49:46 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:49:46 -==> Parameters: 6(Integer)
2020-11-09 17:49:46 -<==      Total: 1
2020-11-09 17:49:46 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:49:46 -==> Parameters: 1(Integer)
2020-11-09 17:49:46 -<==      Total: 1
2020-11-09 17:50:39 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:50:39 -==> Parameters: 11(Integer)
2020-11-09 17:50:39 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:50:39 -==> Parameters: 6(Integer)
2020-11-09 17:50:39 -<==      Total: 1
2020-11-09 17:50:39 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:50:39 -==> Parameters: 2(Integer)
2020-11-09 17:50:39 -<==      Total: 3
2020-11-09 17:50:39 -<==      Total: 1
2020-11-09 17:50:39 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:50:39 -==> Parameters: 2(Integer)
2020-11-09 17:50:39 -<==      Total: 2
2020-11-09 17:50:39 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:50:39 -==> Parameters: 2(Integer)
2020-11-09 17:50:39 -<==      Total: 3
2020-11-09 17:50:42 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 17:50:42 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:50:42 -==> Parameters: 
2020-11-09 17:50:42 -==> Parameters: 11(Integer)
2020-11-09 17:50:42 -<==      Total: 3
2020-11-09 17:50:42 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:50:42 -==> Parameters: 3(Integer)
2020-11-09 17:50:42 -<==      Total: 2
2020-11-09 17:50:42 -<==      Total: 1
2020-11-09 17:50:42 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:50:42 -==> Parameters: 5(Integer)
2020-11-09 17:50:42 -<==      Total: 1
2020-11-09 17:50:42 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:50:42 -==> Parameters: 2(Integer)
2020-11-09 17:50:42 -<==      Total: 1
2020-11-09 17:50:42 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:50:42 -==> Parameters: 3(Integer)
2020-11-09 17:50:42 -<==      Total: 1
2020-11-09 17:50:42 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 17:50:42 -==> Parameters: 2(Integer)
2020-11-09 17:50:42 -<==      Total: 1
2020-11-09 17:50:42 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 17:50:42 -==> Parameters: 2(Integer)
2020-11-09 17:50:42 -<==      Total: 1
2020-11-09 17:50:43 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 17:50:43 -==> Parameters: 11(Integer)
2020-11-09 17:50:43 -<==      Total: 2
2020-11-09 17:50:43 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:50:43 -==> Parameters: 6(Integer)
2020-11-09 17:50:43 -<==      Total: 1
2020-11-09 17:50:43 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 17:50:43 -==> Parameters: 1(Integer)
2020-11-09 17:50:43 -<==      Total: 1
2020-11-09 17:51:27 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:51:27 -==> Parameters: 6(Integer)
2020-11-09 17:51:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:51:27 -==> Parameters: 11(Integer)
2020-11-09 17:51:27 -<==      Total: 3
2020-11-09 17:51:28 -<==      Total: 1
2020-11-09 17:51:28 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:51:28 -==> Parameters: 2(Integer)
2020-11-09 17:51:28 -<==      Total: 1
2020-11-09 17:51:28 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:51:28 -==> Parameters: 2(Integer)
2020-11-09 17:51:28 -<==      Total: 2
2020-11-09 17:51:28 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:51:28 -==> Parameters: 2(Integer)
2020-11-09 17:51:28 -<==      Total: 3
2020-11-09 17:51:30 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:51:30 -==> Parameters: 6(Integer)
2020-11-09 17:51:30 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:51:30 -==> Parameters: 11(Integer)
2020-11-09 17:51:30 -<==      Total: 1
2020-11-09 17:51:30 -<==      Total: 3
2020-11-09 17:51:30 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:51:30 -==> Parameters: 2(Integer)
2020-11-09 17:51:30 -<==      Total: 1
2020-11-09 17:51:30 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:51:30 -==> Parameters: 2(Integer)
2020-11-09 17:51:30 -<==      Total: 2
2020-11-09 17:51:30 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:51:30 -==> Parameters: 2(Integer)
2020-11-09 17:51:30 -<==      Total: 3
2020-11-09 17:51:32 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:51:32 -==> Parameters: 11(Integer)
2020-11-09 17:51:32 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:51:32 -==> Parameters: 1(Integer)
2020-11-09 17:51:32 -<==      Total: 1
2020-11-09 17:51:32 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:51:32 -==> Parameters: 3(Integer)
2020-11-09 17:51:32 -<==      Total: 0
2020-11-09 17:51:32 -<==      Total: 1
2020-11-09 17:51:32 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:51:32 -==> Parameters: 3(Integer)
2020-11-09 17:51:32 -<==      Total: 2
2020-11-09 17:51:32 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:51:32 -==> Parameters: 3(Integer)
2020-11-09 17:51:32 -<==      Total: 5
2020-11-09 17:51:40 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:51:40 -==> Parameters: 6(Integer)
2020-11-09 17:51:40 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:51:40 -==> Parameters: 11(Integer)
2020-11-09 17:51:40 -<==      Total: 3
2020-11-09 17:51:40 -<==      Total: 1
2020-11-09 17:51:40 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:51:40 -==> Parameters: 2(Integer)
2020-11-09 17:51:40 -<==      Total: 1
2020-11-09 17:51:40 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:51:40 -==> Parameters: 2(Integer)
2020-11-09 17:51:40 -<==      Total: 2
2020-11-09 17:51:40 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:51:40 -==> Parameters: 2(Integer)
2020-11-09 17:51:40 -<==      Total: 3
2020-11-09 17:51:42 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:51:42 -==> Parameters: 1(Integer)
2020-11-09 17:51:42 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:51:42 -==> Parameters: 11(Integer)
2020-11-09 17:51:42 -<==      Total: 1
2020-11-09 17:51:42 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:51:42 -==> Parameters: 3(Integer)
2020-11-09 17:51:42 -<==      Total: 0
2020-11-09 17:51:42 -<==      Total: 1
2020-11-09 17:51:42 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:51:42 -==> Parameters: 3(Integer)
2020-11-09 17:51:42 -<==      Total: 2
2020-11-09 17:51:42 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:51:42 -==> Parameters: 3(Integer)
2020-11-09 17:51:42 -<==      Total: 5
2020-11-09 17:51:43 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:51:43 -==> Parameters: 6(Integer)
2020-11-09 17:51:43 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:51:43 -==> Parameters: 11(Integer)
2020-11-09 17:51:43 -<==      Total: 3
2020-11-09 17:51:43 -<==      Total: 1
2020-11-09 17:51:43 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:51:43 -==> Parameters: 2(Integer)
2020-11-09 17:51:43 -<==      Total: 1
2020-11-09 17:51:43 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:51:43 -==> Parameters: 2(Integer)
2020-11-09 17:51:43 -<==      Total: 2
2020-11-09 17:51:43 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:51:43 -==> Parameters: 2(Integer)
2020-11-09 17:51:44 -<==      Total: 3
2020-11-09 17:51:45 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:51:45 -==> Parameters: 1(Integer)
2020-11-09 17:51:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:51:45 -==> Parameters: 11(Integer)
2020-11-09 17:51:45 -<==      Total: 1
2020-11-09 17:51:45 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:51:45 -==> Parameters: 3(Integer)
2020-11-09 17:51:45 -<==      Total: 0
2020-11-09 17:51:45 -<==      Total: 1
2020-11-09 17:51:45 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:51:45 -==> Parameters: 3(Integer)
2020-11-09 17:51:45 -<==      Total: 2
2020-11-09 17:51:45 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:51:45 -==> Parameters: 3(Integer)
2020-11-09 17:51:45 -<==      Total: 5
2020-11-09 17:51:51 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 17:51:51 -==> Parameters: 6(Integer)
2020-11-09 17:51:51 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 17:51:51 -==> Parameters: 11(Integer)
2020-11-09 17:51:51 -<==      Total: 3
2020-11-09 17:51:51 -<==      Total: 1
2020-11-09 17:51:51 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 17:51:51 -==> Parameters: 2(Integer)
2020-11-09 17:51:51 -<==      Total: 1
2020-11-09 17:51:51 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 17:51:51 -==> Parameters: 2(Integer)
2020-11-09 17:51:51 -<==      Total: 2
2020-11-09 17:51:51 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 17:51:51 -==> Parameters: 2(Integer)
2020-11-09 17:51:51 -<==      Total: 3
2020-11-09 17:51:53 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 17:51:53 -==> Parameters: 4(Integer)
2020-11-09 17:51:53 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 17:51:53 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 17:51:53 -<==      Total: 0
2020-11-09 17:51:53 -<==      Total: 1
2020-11-09 17:51:53 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 17:51:53 -==> Parameters: 4(Integer)
2020-11-09 17:51:53 -<==      Total: 1
2020-11-09 17:56:41 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 17:56:41 -==> Parameters: 5(Integer), 11(Integer)
2020-11-09 17:56:41 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 17:56:41 -==> Parameters: 5(Integer)
2020-11-09 17:56:41 -<==      Total: 1
2020-11-09 17:56:41 -<==      Total: 1
2020-11-09 17:56:41 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 17:56:41 -==> Parameters: 5(Integer)
2020-11-09 17:56:41 -<==      Total: 0
2020-11-09 18:03:59 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:03:59 -==> Parameters: 4(Integer)
2020-11-09 18:03:59 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:03:59 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 18:03:59 -<==      Total: 1
2020-11-09 18:03:59 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:03:59 -==> Parameters: 4(Integer)
2020-11-09 18:03:59 -<==      Total: 0
2020-11-09 18:04:00 -<==      Total: 1
2020-11-09 18:07:51 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:07:51 -==> Parameters: 5(Integer)
2020-11-09 18:07:51 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:07:51 -==> Parameters: 5(Integer), 11(Integer)
2020-11-09 18:07:52 -<==      Total: 1
2020-11-09 18:07:52 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:07:52 -==> Parameters: 5(Integer)
2020-11-09 18:07:52 -<==      Total: 1
2020-11-09 18:07:52 -<==      Total: 0
2020-11-09 18:08:11 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 18:08:11 -==> Parameters: 11(Integer)
2020-11-09 18:08:11 -<==      Total: 2
2020-11-09 18:08:11 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 18:08:11 -==> Parameters: 6(Integer)
2020-11-09 18:08:11 -<==      Total: 1
2020-11-09 18:08:11 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 18:08:11 -==> Parameters: 1(Integer)
2020-11-09 18:08:11 -<==      Total: 1
2020-11-09 18:08:12 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 18:08:12 -==> Parameters: 6(Integer)
2020-11-09 18:08:12 -<==      Total: 3
2020-11-09 18:08:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:08:12 -==> Parameters: 11(Integer)
2020-11-09 18:08:12 -<==      Total: 1
2020-11-09 18:08:12 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 18:08:12 -==> Parameters: 2(Integer)
2020-11-09 18:08:13 -<==      Total: 1
2020-11-09 18:08:13 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 18:08:13 -==> Parameters: 2(Integer)
2020-11-09 18:08:13 -<==      Total: 2
2020-11-09 18:08:13 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 18:08:13 -==> Parameters: 2(Integer)
2020-11-09 18:08:13 -<==      Total: 3
2020-11-09 18:08:15 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:08:15 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 18:08:15 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:08:15 -==> Parameters: 4(Integer)
2020-11-09 18:08:15 -<==      Total: 0
2020-11-09 18:08:15 -<==      Total: 1
2020-11-09 18:08:15 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:08:15 -==> Parameters: 4(Integer)
2020-11-09 18:08:15 -<==      Total: 1
2020-11-09 18:19:47 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:19:47 -==> Parameters: 4(Integer)
2020-11-09 18:19:47 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:19:47 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 18:19:48 -<==      Total: 1
2020-11-09 18:19:48 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:19:48 -==> Parameters: 4(Integer)
2020-11-09 18:19:48 -<==      Total: 0
2020-11-09 18:19:48 -<==      Total: 1
2020-11-09 18:20:12 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:20:12 -==> Parameters: 5(Integer), 11(Integer)
2020-11-09 18:20:13 -<==      Total: 1
2020-11-09 18:20:13 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:20:13 -==> Parameters: 5(Integer)
2020-11-09 18:20:13 -<==      Total: 1
2020-11-09 18:20:13 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:20:13 -==> Parameters: 5(Integer)
2020-11-09 18:20:13 -<==      Total: 0
2020-11-09 18:20:49 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:20:49 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 18:20:49 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:20:49 -==> Parameters: 4(Integer)
2020-11-09 18:20:49 -<==      Total: 0
2020-11-09 18:20:49 -<==      Total: 1
2020-11-09 18:20:49 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:20:49 -==> Parameters: 4(Integer)
2020-11-09 18:20:49 -<==      Total: 1
2020-11-09 18:21:41 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:21:41 -==> Parameters: 4(Integer)
2020-11-09 18:21:41 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:21:41 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 18:21:41 -<==      Total: 1
2020-11-09 18:21:41 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:21:41 -==> Parameters: 4(Integer)
2020-11-09 18:21:41 -<==      Total: 0
2020-11-09 18:21:41 -<==      Total: 1
2020-11-09 18:22:18 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:22:18 -==> Parameters: 4(Integer)
2020-11-09 18:22:18 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:22:18 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 18:22:18 -<==      Total: 1
2020-11-09 18:22:18 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:22:18 -==> Parameters: 4(Integer)
2020-11-09 18:22:18 -<==      Total: 0
2020-11-09 18:22:18 -<==      Total: 1
2020-11-09 18:24:04 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:24:04 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 18:24:04 -<==      Total: 0
2020-11-09 18:24:06 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:24:06 -==> Parameters: 4(Integer)
2020-11-09 18:24:06 -<==      Total: 1
2020-11-09 18:24:06 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:24:06 -==> Parameters: 4(Integer)
2020-11-09 18:24:06 -<==      Total: 1
2020-11-09 18:24:08 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:24:08 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 18:24:08 -<==      Total: 0
2020-11-09 18:24:08 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:24:08 -==> Parameters: 4(Integer)
2020-11-09 18:24:08 -<==      Total: 1
2020-11-09 18:24:08 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:24:08 -==> Parameters: 4(Integer)
2020-11-09 18:24:09 -<==      Total: 1
2020-11-09 18:24:13 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:24:13 -==> Parameters: 5(Integer), 11(Integer)
2020-11-09 18:24:13 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:24:13 -==> Parameters: 5(Integer)
2020-11-09 18:24:13 -<==      Total: 1
2020-11-09 18:24:13 -<==      Total: 1
2020-11-09 18:24:13 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:24:13 -==> Parameters: 5(Integer)
2020-11-09 18:24:14 -<==      Total: 0
2020-11-09 18:31:54 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:31:54 -==> Parameters: 5(Integer), 11(Integer)
2020-11-09 18:31:54 -<==      Total: 1
2020-11-09 18:31:54 -==>  Preparing: delete from taskStu where id=? 
2020-11-09 18:31:54 -==> Parameters: 10(Integer)
2020-11-09 18:31:54 -<==    Updates: 1
2020-11-09 18:31:54 -==>  Preparing: INSERT into taskStu (studentId,taskId,status,filename,filepath,uploadTime) values( ?, ?, ?, ?, ?, ? ) 
2020-11-09 18:31:54 -==> Parameters: 11(Integer), 5(Integer), 2(Integer), 软件发展过程的总结与分析.pdf(String), http://localhost:8080/download/studentTask/11/软件发展过程的总结与分析.pdf(String), 2020-11-09 18:31:54(String)
2020-11-09 18:31:55 -<==    Updates: 1
2020-11-09 18:31:55 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:31:55 -==> Parameters: 5(Integer), 11(Integer)
2020-11-09 18:31:55 -<==      Total: 1
2020-11-09 18:32:25 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:32:25 -==> Parameters: 6(Integer)
2020-11-09 18:32:25 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:32:25 -==> Parameters: 6(Integer), 11(Integer)
2020-11-09 18:32:25 -<==      Total: 1
2020-11-09 18:32:25 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:32:25 -==> Parameters: 6(Integer)
2020-11-09 18:32:25 -<==      Total: 1
2020-11-09 18:32:25 -<==      Total: 0
2020-11-09 18:32:31 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:32:31 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:32:31 -==> Parameters: 4(Integer)
2020-11-09 18:32:31 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 18:32:31 -<==      Total: 1
2020-11-09 18:32:31 -<==      Total: 0
2020-11-09 18:32:31 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:32:31 -==> Parameters: 4(Integer)
2020-11-09 18:32:31 -<==      Total: 1
2020-11-09 18:32:51 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 18:32:51 -==> Parameters: 
2020-11-09 18:32:51 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 18:32:51 -==> Parameters: 11(Integer)
2020-11-09 18:32:51 -<==      Total: 3
2020-11-09 18:32:51 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 18:32:51 -==> Parameters: 3(Integer)
2020-11-09 18:32:51 -<==      Total: 2
2020-11-09 18:32:52 -<==      Total: 1
2020-11-09 18:32:52 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 18:32:52 -==> Parameters: 5(Integer)
2020-11-09 18:32:52 -<==      Total: 1
2020-11-09 18:32:52 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 18:32:52 -==> Parameters: 2(Integer)
2020-11-09 18:32:52 -<==      Total: 1
2020-11-09 18:32:52 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 18:32:52 -==> Parameters: 3(Integer)
2020-11-09 18:32:52 -<==      Total: 1
2020-11-09 18:32:52 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 18:32:52 -==> Parameters: 2(Integer)
2020-11-09 18:32:52 -<==      Total: 1
2020-11-09 18:32:52 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 18:32:52 -==> Parameters: 2(Integer)
2020-11-09 18:32:52 -<==      Total: 1
2020-11-09 18:32:53 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 18:32:53 -==> Parameters: 11(Integer)
2020-11-09 18:32:53 -<==      Total: 2
2020-11-09 18:32:53 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 18:32:53 -==> Parameters: 6(Integer)
2020-11-09 18:32:53 -<==      Total: 1
2020-11-09 18:32:53 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 18:32:53 -==> Parameters: 1(Integer)
2020-11-09 18:32:53 -<==      Total: 1
2020-11-09 18:32:55 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:32:55 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 18:32:55 -==> Parameters: 11(Integer)
2020-11-09 18:32:55 -==> Parameters: 6(Integer)
2020-11-09 18:32:55 -<==      Total: 1
2020-11-09 18:32:55 -<==      Total: 3
2020-11-09 18:32:55 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 18:32:55 -==> Parameters: 2(Integer)
2020-11-09 18:32:55 -<==      Total: 1
2020-11-09 18:32:55 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 18:32:55 -==> Parameters: 2(Integer)
2020-11-09 18:32:55 -<==      Total: 2
2020-11-09 18:32:55 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 18:32:55 -==> Parameters: 2(Integer)
2020-11-09 18:32:55 -<==      Total: 3
2020-11-09 18:32:56 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 18:32:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:32:56 -==> Parameters: 1(Integer)
2020-11-09 18:32:56 -==> Parameters: 11(Integer)
2020-11-09 18:32:56 -<==      Total: 0
2020-11-09 18:32:56 -<==      Total: 1
2020-11-09 18:32:56 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 18:32:56 -==> Parameters: 3(Integer)
2020-11-09 18:32:56 -<==      Total: 1
2020-11-09 18:32:56 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 18:32:56 -==> Parameters: 3(Integer)
2020-11-09 18:32:56 -<==      Total: 2
2020-11-09 18:32:56 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 18:32:56 -==> Parameters: 3(Integer)
2020-11-09 18:32:56 -<==      Total: 5
2020-11-09 18:33:00 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:33:00 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 18:33:00 -==> Parameters: 11(Integer)
2020-11-09 18:33:00 -==> Parameters: 6(Integer)
2020-11-09 18:33:00 -<==      Total: 1
2020-11-09 18:33:00 -<==      Total: 3
2020-11-09 18:33:00 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 18:33:00 -==> Parameters: 2(Integer)
2020-11-09 18:33:00 -<==      Total: 1
2020-11-09 18:33:00 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 18:33:00 -==> Parameters: 2(Integer)
2020-11-09 18:33:00 -<==      Total: 2
2020-11-09 18:33:00 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 18:33:00 -==> Parameters: 2(Integer)
2020-11-09 18:33:00 -<==      Total: 3
2020-11-09 18:33:02 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:33:02 -==> Parameters: 4(Integer)
2020-11-09 18:33:02 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? and studentId=? 
2020-11-09 18:33:02 -==> Parameters: 4(Integer), 11(Integer)
2020-11-09 18:33:02 -<==      Total: 0
2020-11-09 18:33:02 -<==      Total: 1
2020-11-09 18:33:02 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:33:02 -==> Parameters: 4(Integer)
2020-11-09 18:33:02 -<==      Total: 1
2020-11-09 18:33:13 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 18:33:13 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 18:33:13 -<==      Total: 1
2020-11-09 18:33:13 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 18:33:13 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 18:33:13 -<==      Total: 1
2020-11-09 18:33:17 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:33:17 -==> Parameters: 2(Integer)
2020-11-09 18:33:17 -<==      Total: 1
2020-11-09 18:33:17 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 18:33:17 -==> Parameters: 2(Integer)
2020-11-09 18:33:17 -<==      Total: 3
2020-11-09 18:40:04 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 18:40:04 -==> Parameters: 122(String)
2020-11-09 18:40:04 -<==      Total: 0
2020-11-09 18:40:04 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at cn.org.test.controller.UserController.loginPwd(UserController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 18:40:05 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 18:40:05 -==> Parameters: 122(String)
2020-11-09 18:40:05 -<==      Total: 0
2020-11-09 18:40:05 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at cn.org.test.controller.UserController.loginPwd(UserController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 18:40:11 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 18:40:11 -==> Parameters: 15868808504@163.com(String)
2020-11-09 18:40:11 -<==      Total: 1
2020-11-09 18:40:11 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 18:40:11 -==> Parameters: 15868808504@163.com(String)
2020-11-09 18:40:11 -<==      Total: 1
2020-11-09 18:40:19 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 18:40:19 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 18:40:19 -<==      Total: 1
2020-11-09 18:40:19 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 18:40:19 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 18:40:19 -<==      Total: 1
2020-11-09 18:40:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:40:22 -==> Parameters: 2(Integer)
2020-11-09 18:40:22 -<==      Total: 1
2020-11-09 18:40:22 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 18:40:22 -==> Parameters: 2(Integer)
2020-11-09 18:40:22 -<==      Total: 3
2020-11-09 18:40:50 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:40:50 -==> Parameters: 2(Integer)
2020-11-09 18:40:50 -<==      Total: 1
2020-11-09 18:40:50 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 18:40:50 -==> Parameters: 2(Integer)
2020-11-09 18:40:50 -<==      Total: 1
2020-11-09 18:40:50 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 18:40:50 -==> Parameters: 2(Integer)
2020-11-09 18:40:50 -<==      Total: 2
2020-11-09 18:40:50 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 18:40:50 -==> Parameters: 2(Integer)
2020-11-09 18:40:50 -<==      Total: 3
2020-11-09 18:40:51 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:40:51 -==> Parameters: 2(Integer)
2020-11-09 18:40:51 -<==      Total: 1
2020-11-09 18:40:51 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 18:40:51 -==> Parameters: 3(Integer)
2020-11-09 18:40:52 -<==      Total: 1
2020-11-09 18:40:52 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 18:40:52 -==> Parameters: 3(Integer)
2020-11-09 18:40:52 -<==      Total: 2
2020-11-09 18:40:52 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 18:40:52 -==> Parameters: 3(Integer)
2020-11-09 18:40:52 -<==      Total: 5
2020-11-09 18:40:55 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:40:55 -==> Parameters: 2(Integer)
2020-11-09 18:40:55 -<==      Total: 1
2020-11-09 18:40:55 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 18:40:55 -==> Parameters: 2(Integer)
2020-11-09 18:40:55 -<==      Total: 1
2020-11-09 18:40:55 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 18:40:55 -==> Parameters: 2(Integer)
2020-11-09 18:40:55 -<==      Total: 2
2020-11-09 18:40:55 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 18:40:55 -==> Parameters: 2(Integer)
2020-11-09 18:40:55 -<==      Total: 3
2020-11-09 18:40:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:40:57 -==> Parameters: 2(Integer)
2020-11-09 18:40:57 -<==      Total: 1
2020-11-09 18:40:57 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 18:40:57 -==> Parameters: 6(Integer)
2020-11-09 18:40:57 -<==      Total: 3
2020-11-09 18:40:59 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 18:40:59 -==> Parameters: 4(Integer)
2020-11-09 18:40:59 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:40:59 -==> Parameters: 4(Integer)
2020-11-09 18:40:59 -<==      Total: 0
2020-11-09 18:40:59 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 18:40:59 -==> Parameters: 4(Integer)
2020-11-09 18:40:59 -<==      Total: 1
2020-11-09 18:40:59 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 18:40:59 -==> Parameters: 4(Integer)
2020-11-09 18:40:59 -<==      Total: 1
2020-11-09 18:40:59 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 18:40:59 -==> Parameters: 6(Integer)
2020-11-09 18:40:59 -<==      Total: 1
2020-11-09 18:40:59 -<==      Total: 1
2020-11-09 18:40:59 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 18:40:59 -==> Parameters: 6(Integer)
2020-11-09 18:40:59 -<==      Total: 2
2020-11-09 18:40:59 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:40:59 -==> Parameters: 11(Integer)
2020-11-09 18:41:00 -<==      Total: 1
2020-11-09 18:41:00 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 18:41:00 -==> Parameters: 12(Integer)
2020-11-09 18:41:00 -<==      Total: 1
2020-11-09 21:03:34 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 21:03:34 -==> Parameters: 4(Integer)
2020-11-09 21:03:34 -<==      Total: 1
2020-11-09 21:03:34 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 21:03:34 -==> Parameters: 6(Integer)
2020-11-09 21:03:34 -<==      Total: 1
2020-11-09 21:03:34 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 21:03:34 -==> Parameters: 6(Integer)
2020-11-09 21:03:34 -<==      Total: 2
2020-11-09 21:03:34 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 21:03:34 -==> Parameters: 11(Integer)
2020-11-09 21:03:34 -<==      Total: 1
2020-11-09 21:03:34 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 21:03:34 -==> Parameters: 12(Integer)
2020-11-09 21:03:35 -<==      Total: 1
2020-11-09 21:03:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 21:03:56 -==> Parameters: 5(Integer)
2020-11-09 21:03:56 -<==      Total: 1
2020-11-09 21:03:56 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 21:03:56 -==> Parameters: 5(Integer)
2020-11-09 21:03:56 -<==      Total: 0
2020-11-09 21:03:56 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 21:03:56 -==> Parameters: 5(Integer)
2020-11-09 21:03:56 -<==      Total: 2
2020-11-09 21:03:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 21:03:56 -==> Parameters: 5(Integer)
2020-11-09 21:03:57 -<==      Total: 1
2020-11-09 21:03:57 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 21:03:57 -==> Parameters: 6(Integer)
2020-11-09 21:03:57 -<==      Total: 1
2020-11-09 21:03:57 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 21:03:57 -==> Parameters: 6(Integer)
2020-11-09 21:03:57 -<==      Total: 2
2020-11-09 21:03:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 21:03:57 -==> Parameters: 11(Integer)
2020-11-09 21:03:57 -<==      Total: 1
2020-11-09 21:03:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 21:03:57 -==> Parameters: 12(Integer)
2020-11-09 21:03:57 -<==      Total: 1
2020-11-09 21:03:58 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 21:03:58 -==> Parameters: 4(Integer)
2020-11-09 21:03:58 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 21:03:58 -==> Parameters: 4(Integer)
2020-11-09 21:03:58 -<==      Total: 0
2020-11-09 21:03:58 -<==      Total: 1
2020-11-09 21:03:58 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 21:03:58 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 21:03:58 -==> Parameters: 4(Integer)
2020-11-09 21:03:58 -==> Parameters: 4(Integer)
2020-11-09 21:03:58 -<==      Total: 1
2020-11-09 21:03:58 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 21:03:58 -==> Parameters: 6(Integer)
2020-11-09 21:03:58 -<==      Total: 1
2020-11-09 21:03:58 -<==      Total: 1
2020-11-09 21:03:58 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 21:03:58 -==> Parameters: 6(Integer)
2020-11-09 21:03:58 -<==      Total: 2
2020-11-09 21:03:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 21:03:58 -==> Parameters: 11(Integer)
2020-11-09 21:03:58 -<==      Total: 1
2020-11-09 21:03:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 21:03:58 -==> Parameters: 12(Integer)
2020-11-09 21:03:58 -<==      Total: 1
2020-11-09 21:03:59 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 21:03:59 -==> Parameters: 5(Integer)
2020-11-09 21:03:59 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 21:03:59 -<==      Total: 2
2020-11-09 21:03:59 -==> Parameters: 5(Integer)
2020-11-09 21:03:59 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 21:03:59 -==> Parameters: 5(Integer)
2020-11-09 21:03:59 -<==      Total: 1
2020-11-09 21:03:59 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 21:03:59 -<==      Total: 1
2020-11-09 21:03:59 -==> Parameters: 5(Integer)
2020-11-09 21:03:59 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 21:03:59 -==> Parameters: 6(Integer)
2020-11-09 21:03:59 -<==      Total: 1
2020-11-09 21:03:59 -<==      Total: 0
2020-11-09 21:03:59 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 21:03:59 -==> Parameters: 6(Integer)
2020-11-09 21:03:59 -<==      Total: 2
2020-11-09 21:03:59 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 21:03:59 -==> Parameters: 11(Integer)
2020-11-09 21:03:59 -<==      Total: 1
2020-11-09 21:03:59 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 21:03:59 -==> Parameters: 12(Integer)
2020-11-09 21:03:59 -<==      Total: 1
2020-11-09 21:04:19 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 21:04:19 -==> Parameters: 5(Integer)
2020-11-09 21:04:19 -<==      Total: 1
2020-11-09 21:04:19 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 21:04:19 -==> Parameters: 6(Integer)
2020-11-09 21:04:19 -<==      Total: 1
2020-11-09 21:04:20 -解析到一条数据:{"id":11,"name":"LUO YUYING","score":0,"userId":"MF20320102"}
2020-11-09 21:04:20 -解析到一条数据:{"id":12,"name":"ddd","score":0,"userId":"MF20123232"}
2020-11-09 21:04:20 -2条数据，开始存储数据库！
2020-11-09 21:04:20 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 21:04:20 -==> Parameters: 11(Integer), 5(Integer)
2020-11-09 21:04:20 -<==      Total: 1
2020-11-09 21:04:20 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 21:04:20 -==> Parameters: 0(Integer), 5(Integer), 11(Integer)
2020-11-09 21:04:20 -<==    Updates: 1
2020-11-09 21:04:20 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 21:04:20 -==> Parameters: 0(Integer), 5(Integer), 11(Integer)
2020-11-09 21:04:20 -<==    Updates: 1
2020-11-09 21:04:20 -==>  Preparing: SELECT * from scoreReport WHERE studentId = ? and taskId = ? 
2020-11-09 21:04:20 -==> Parameters: 12(Integer), 5(Integer)
2020-11-09 21:04:20 -<==      Total: 1
2020-11-09 21:04:20 -==>  Preparing: UPDATE scoreReport SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 21:04:20 -==> Parameters: 0(Integer), 5(Integer), 12(Integer)
2020-11-09 21:04:20 -<==    Updates: 1
2020-11-09 21:04:20 -==>  Preparing: UPDATE taskStu SET score = ? WHERE taskId=? and studentId=? 
2020-11-09 21:04:20 -==> Parameters: 0(Integer), 5(Integer), 12(Integer)
2020-11-09 21:04:20 -<==    Updates: 1
2020-11-09 21:04:20 -存储数据库成功！
2020-11-09 21:04:20 -所有数据解析完成！
2020-11-09 21:04:20 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 21:04:20 -==> Parameters: 5(Integer)
2020-11-09 21:04:20 -<==      Total: 2
2020-11-09 21:04:20 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 21:04:20 -==> Parameters: 5(Integer)
2020-11-09 21:04:20 -<==      Total: 1
2020-11-09 21:04:20 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 21:04:20 -==> Parameters: 6(Integer)
2020-11-09 21:04:20 -<==      Total: 1
2020-11-09 21:04:20 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 21:04:20 -==> Parameters: 6(Integer)
2020-11-09 21:04:20 -<==      Total: 2
2020-11-09 21:04:20 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 21:04:20 -==> Parameters: 11(Integer)
2020-11-09 21:04:20 -<==      Total: 1
2020-11-09 21:04:20 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 21:04:20 -==> Parameters: 12(Integer)
2020-11-09 21:04:20 -<==      Total: 1
2020-11-09 22:03:11 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 22:03:11 -==> Parameters: 15868808504@163.com(String)
2020-11-09 22:03:12 -<==      Total: 1
2020-11-09 22:03:12 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 22:03:12 -==> Parameters: 15868808504@163.com(String)
2020-11-09 22:03:12 -<==      Total: 1
2020-11-09 22:03:26 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 22:03:26 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 22:03:26 -<==      Total: 1
2020-11-09 22:03:26 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 22:03:26 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 22:03:26 -<==      Total: 1
2020-11-09 22:03:35 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:03:35 -==> Parameters: 2(Integer)
2020-11-09 22:03:35 -<==      Total: 1
2020-11-09 22:03:35 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:03:35 -==> Parameters: 2(Integer)
2020-11-09 22:03:36 -<==      Total: 3
2020-11-09 22:04:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:04:28 -==> Parameters: 2(Integer)
2020-11-09 22:04:28 -<==      Total: 1
2020-11-09 22:04:28 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:04:28 -==> Parameters: 2(Integer)
2020-11-09 22:04:28 -<==      Total: 3
2020-11-09 22:04:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:04:28 -==> Parameters: 2(Integer)
2020-11-09 22:04:28 -<==      Total: 1
2020-11-09 22:04:28 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:04:28 -==> Parameters: 2(Integer)
2020-11-09 22:04:28 -<==      Total: 3
2020-11-09 22:04:43 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:04:43 -==> Parameters: 2(Integer)
2020-11-09 22:04:43 -<==      Total: 1
2020-11-09 22:04:43 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:04:43 -==> Parameters: 2(Integer)
2020-11-09 22:04:43 -<==      Total: 1
2020-11-09 22:04:43 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:04:43 -==> Parameters: 2(Integer)
2020-11-09 22:04:43 -<==      Total: 2
2020-11-09 22:04:43 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:04:43 -==> Parameters: 2(Integer)
2020-11-09 22:04:44 -<==      Total: 3
2020-11-09 22:04:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:04:45 -==> Parameters: 2(Integer)
2020-11-09 22:04:46 -<==      Total: 1
2020-11-09 22:04:46 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:04:46 -==> Parameters: 3(Integer)
2020-11-09 22:04:46 -<==      Total: 1
2020-11-09 22:04:46 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:04:46 -==> Parameters: 3(Integer)
2020-11-09 22:04:46 -<==      Total: 2
2020-11-09 22:04:46 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:04:46 -==> Parameters: 3(Integer)
2020-11-09 22:04:46 -<==      Total: 5
2020-11-09 22:04:49 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:04:49 -==> Parameters: 2(Integer)
2020-11-09 22:04:49 -<==      Total: 1
2020-11-09 22:04:49 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:04:49 -==> Parameters: 4(Integer)
2020-11-09 22:04:49 -<==      Total: 1
2020-11-09 22:04:49 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:04:49 -==> Parameters: 4(Integer)
2020-11-09 22:04:49 -<==      Total: 0
2020-11-09 22:04:49 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:04:49 -==> Parameters: 4(Integer)
2020-11-09 22:04:49 -<==      Total: 0
2020-11-09 22:04:51 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:04:51 -==> Parameters: 2(Integer)
2020-11-09 22:04:51 -<==      Total: 1
2020-11-09 22:04:51 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:04:51 -==> Parameters: 2(Integer)
2020-11-09 22:04:51 -<==      Total: 1
2020-11-09 22:04:51 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:04:51 -==> Parameters: 2(Integer)
2020-11-09 22:04:51 -<==      Total: 2
2020-11-09 22:04:51 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:04:51 -==> Parameters: 2(Integer)
2020-11-09 22:04:51 -<==      Total: 3
2020-11-09 22:08:02 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 22:08:02 -==> Parameters: 2(Integer)
2020-11-09 22:08:02 -<==      Total: 0
2020-11-09 22:09:15 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:09:15 -==> Parameters: 2(Integer)
2020-11-09 22:09:15 -<==      Total: 1
2020-11-09 22:09:15 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:09:15 -==> Parameters: 2(Integer)
2020-11-09 22:09:15 -<==      Total: 3
2020-11-09 22:09:15 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:09:15 -==> Parameters: 2(Integer)
2020-11-09 22:09:16 -<==      Total: 1
2020-11-09 22:09:16 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:09:16 -==> Parameters: 2(Integer)
2020-11-09 22:09:16 -<==      Total: 3
2020-11-09 22:09:18 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:09:18 -==> Parameters: 2(Integer)
2020-11-09 22:09:18 -<==      Total: 1
2020-11-09 22:09:18 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:09:18 -==> Parameters: 2(Integer)
2020-11-09 22:09:18 -<==      Total: 1
2020-11-09 22:09:18 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:09:18 -==> Parameters: 2(Integer)
2020-11-09 22:09:18 -<==      Total: 2
2020-11-09 22:09:18 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:09:18 -==> Parameters: 2(Integer)
2020-11-09 22:09:18 -<==      Total: 3
2020-11-09 22:10:23 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:10:23 -==> Parameters: 2(Integer)
2020-11-09 22:10:23 -<==      Total: 1
2020-11-09 22:10:23 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:10:23 -==> Parameters: 2(Integer)
2020-11-09 22:10:23 -<==      Total: 3
2020-11-09 22:10:23 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:10:23 -==> Parameters: 2(Integer)
2020-11-09 22:10:23 -<==      Total: 1
2020-11-09 22:10:23 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:10:23 -==> Parameters: 2(Integer)
2020-11-09 22:10:23 -<==      Total: 3
2020-11-09 22:10:25 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:10:25 -==> Parameters: 2(Integer)
2020-11-09 22:10:25 -<==      Total: 1
2020-11-09 22:10:25 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:10:25 -==> Parameters: 2(Integer)
2020-11-09 22:10:25 -<==      Total: 1
2020-11-09 22:10:25 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:10:25 -==> Parameters: 2(Integer)
2020-11-09 22:10:25 -<==      Total: 2
2020-11-09 22:10:25 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:10:25 -==> Parameters: 2(Integer)
2020-11-09 22:10:25 -<==      Total: 3
2020-11-09 22:10:48 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:10:48 -==> Parameters: 2(Integer)
2020-11-09 22:10:48 -<==      Total: 1
2020-11-09 22:10:48 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:10:48 -==> Parameters: 2(Integer)
2020-11-09 22:10:48 -<==      Total: 3
2020-11-09 22:10:48 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:10:48 -==> Parameters: 2(Integer)
2020-11-09 22:10:48 -<==      Total: 1
2020-11-09 22:10:48 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:10:48 -==> Parameters: 2(Integer)
2020-11-09 22:10:48 -<==      Total: 3
2020-11-09 22:10:50 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:10:50 -==> Parameters: 2(Integer)
2020-11-09 22:10:50 -<==      Total: 1
2020-11-09 22:10:50 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:10:50 -==> Parameters: 2(Integer)
2020-11-09 22:10:50 -<==      Total: 1
2020-11-09 22:10:50 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:10:50 -==> Parameters: 2(Integer)
2020-11-09 22:10:50 -<==      Total: 2
2020-11-09 22:10:50 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:10:50 -==> Parameters: 2(Integer)
2020-11-09 22:10:50 -<==      Total: 3
2020-11-09 22:13:44 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:13:44 -==> Parameters: 2(Integer)
2020-11-09 22:13:44 -<==      Total: 1
2020-11-09 22:13:44 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:13:44 -==> Parameters: 2(Integer)
2020-11-09 22:13:44 -<==      Total: 3
2020-11-09 22:13:44 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:13:44 -==> Parameters: 2(Integer)
2020-11-09 22:13:44 -<==      Total: 1
2020-11-09 22:13:44 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:13:44 -==> Parameters: 2(Integer)
2020-11-09 22:13:44 -<==      Total: 3
2020-11-09 22:13:47 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:13:47 -==> Parameters: 2(Integer)
2020-11-09 22:13:47 -<==      Total: 1
2020-11-09 22:13:47 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:13:47 -==> Parameters: 2(Integer)
2020-11-09 22:13:47 -<==      Total: 1
2020-11-09 22:13:47 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:13:47 -==> Parameters: 2(Integer)
2020-11-09 22:13:47 -<==      Total: 2
2020-11-09 22:13:47 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:13:47 -==> Parameters: 2(Integer)
2020-11-09 22:13:47 -<==      Total: 3
2020-11-09 22:14:29 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:14:29 -==> Parameters: 2(Integer)
2020-11-09 22:14:29 -<==      Total: 1
2020-11-09 22:14:29 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:14:29 -==> Parameters: 2(Integer)
2020-11-09 22:14:29 -<==      Total: 1
2020-11-09 22:14:29 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:14:29 -==> Parameters: 2(Integer)
2020-11-09 22:14:29 -<==      Total: 2
2020-11-09 22:14:29 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:14:29 -==> Parameters: 2(Integer)
2020-11-09 22:14:29 -<==      Total: 3
2020-11-09 22:15:05 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:15:05 -==> Parameters: 2(Integer)
2020-11-09 22:15:05 -<==      Total: 1
2020-11-09 22:15:05 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:15:05 -==> Parameters: 3(Integer)
2020-11-09 22:15:05 -<==      Total: 1
2020-11-09 22:15:05 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:15:05 -==> Parameters: 3(Integer)
2020-11-09 22:15:05 -<==      Total: 2
2020-11-09 22:15:05 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:15:05 -==> Parameters: 3(Integer)
2020-11-09 22:15:05 -<==      Total: 5
2020-11-09 22:15:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:15:08 -==> Parameters: 2(Integer)
2020-11-09 22:15:08 -<==      Total: 1
2020-11-09 22:15:08 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:15:08 -==> Parameters: 2(Integer)
2020-11-09 22:15:08 -<==      Total: 1
2020-11-09 22:15:08 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:15:08 -==> Parameters: 2(Integer)
2020-11-09 22:15:09 -<==      Total: 2
2020-11-09 22:15:09 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:15:09 -==> Parameters: 2(Integer)
2020-11-09 22:15:09 -<==      Total: 3
2020-11-09 22:16:44 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:16:44 -==> Parameters: 2(Integer)
2020-11-09 22:16:44 -<==      Total: 1
2020-11-09 22:16:44 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:16:44 -==> Parameters: 2(Integer)
2020-11-09 22:16:44 -<==      Total: 3
2020-11-09 22:16:44 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:16:44 -==> Parameters: 2(Integer)
2020-11-09 22:16:44 -<==      Total: 1
2020-11-09 22:16:44 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:16:44 -==> Parameters: 2(Integer)
2020-11-09 22:16:45 -<==      Total: 3
2020-11-09 22:16:46 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:16:46 -==> Parameters: 2(Integer)
2020-11-09 22:16:46 -<==      Total: 1
2020-11-09 22:16:46 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:16:46 -==> Parameters: 2(Integer)
2020-11-09 22:16:46 -<==      Total: 1
2020-11-09 22:16:46 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:16:46 -==> Parameters: 2(Integer)
2020-11-09 22:16:46 -<==      Total: 2
2020-11-09 22:16:46 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:16:46 -==> Parameters: 2(Integer)
2020-11-09 22:16:46 -<==      Total: 3
2020-11-09 22:19:11 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:19:11 -==> Parameters: 2(Integer)
2020-11-09 22:19:11 -<==      Total: 1
2020-11-09 22:19:11 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 22:19:23 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 22:19:23 -==> Parameters: 15868808504@163.com(String)
2020-11-09 22:19:23 -<==      Total: 1
2020-11-09 22:19:23 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 22:19:23 -==> Parameters: 15868808504@163.com(String)
2020-11-09 22:19:23 -<==      Total: 1
2020-11-09 22:20:24 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:20:24 -==> Parameters: 2(Integer)
2020-11-09 22:20:24 -<==      Total: 1
2020-11-09 22:20:24 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:20:24 -==> Parameters: 2(Integer)
2020-11-09 22:20:24 -<==      Total: 3
2020-11-09 22:20:24 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:20:24 -==> Parameters: 2(Integer)
2020-11-09 22:20:24 -<==      Total: 1
2020-11-09 22:20:24 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:20:24 -==> Parameters: 2(Integer)
2020-11-09 22:20:24 -<==      Total: 3
2020-11-09 22:20:25 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:20:25 -==> Parameters: 2(Integer)
2020-11-09 22:20:25 -<==      Total: 1
2020-11-09 22:20:25 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:20:25 -==> Parameters: 2(Integer)
2020-11-09 22:20:25 -<==      Total: 1
2020-11-09 22:20:25 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:20:25 -==> Parameters: 2(Integer)
2020-11-09 22:20:26 -<==      Total: 2
2020-11-09 22:20:26 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:20:26 -==> Parameters: 2(Integer)
2020-11-09 22:20:26 -<==      Total: 3
2020-11-09 22:28:41 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:28:41 -==> Parameters: 2(Integer)
2020-11-09 22:28:41 -<==      Total: 1
2020-11-09 22:28:41 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:28:41 -==> Parameters: 2(Integer)
2020-11-09 22:28:41 -<==      Total: 3
2020-11-09 22:28:41 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:28:41 -==> Parameters: 2(Integer)
2020-11-09 22:28:42 -<==      Total: 1
2020-11-09 22:28:42 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:28:42 -==> Parameters: 2(Integer)
2020-11-09 22:28:42 -<==      Total: 3
2020-11-09 22:30:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:30:08 -==> Parameters: 2(Integer)
2020-11-09 22:30:08 -<==      Total: 1
2020-11-09 22:30:08 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:30:08 -==> Parameters: 2(Integer)
2020-11-09 22:30:08 -<==      Total: 3
2020-11-09 22:30:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:30:08 -==> Parameters: 2(Integer)
2020-11-09 22:30:08 -<==      Total: 1
2020-11-09 22:30:08 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:30:08 -==> Parameters: 2(Integer)
2020-11-09 22:30:08 -<==      Total: 3
2020-11-09 22:32:47 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:32:47 -==> Parameters: 2(Integer)
2020-11-09 22:32:47 -<==      Total: 1
2020-11-09 22:32:47 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:32:47 -==> Parameters: 2(Integer)
2020-11-09 22:32:47 -<==      Total: 3
2020-11-09 22:32:47 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:32:47 -==> Parameters: 2(Integer)
2020-11-09 22:32:47 -<==      Total: 1
2020-11-09 22:32:47 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:32:47 -==> Parameters: 2(Integer)
2020-11-09 22:32:47 -<==      Total: 3
2020-11-09 22:34:57 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 14:55:46 CST 2020]; root of context hierarchy
2020-11-09 22:34:57 -Unregistering JMX-exposed beans on shutdown
2020-11-09 22:35:01 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 10131 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 22:35:01 -No active profile set, falling back to default profiles: default
2020-11-09 22:35:01 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 22:35:01 CST 2020]; root of context hierarchy
2020-11-09 22:35:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 22:35:02 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 22:35:03 -Root WebApplicationContext: initialization completed in 1163 ms
2020-11-09 22:35:03 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 22:35:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 22:35:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 22:35:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 22:35:03 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 22:35:03 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 22:35:01 CST 2020]; root of context hierarchy
2020-11-09 22:35:03 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 22:35:03 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 22:35:03 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 22:35:03 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 22:35:03 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 22:35:03 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 22:35:03 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 22:35:03 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 22:35:03 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 22:35:03 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 22:35:03 -Mapped "{[/tch/uploadTaskScore],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadTaskScore(java.lang.Integer,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 22:35:03 -Mapped "{[/tch/deleteCourseWare],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.deleteCourseWare(java.lang.Integer)
2020-11-09 22:35:03 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 22:35:03 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 22:35:03 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 22:35:03 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 22:35:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 22:35:03 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 22:35:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 22:35:03 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 22:35:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 22:35:03 -Registering beans for JMX exposure on startup
2020-11-09 22:35:03 -Tomcat started on port(s): 8080 (http)
2020-11-09 22:35:03 -Started SpringBootUserApplication in 2.381 seconds (JVM running for 2.908)
2020-11-09 22:35:18 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 22:35:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 9 ms
2020-11-09 22:35:22 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 22:35:22 -==> Parameters: 15868808504@163.com(String)
2020-11-09 22:35:22 -<==      Total: 1
2020-11-09 22:35:22 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 22:35:22 -==> Parameters: 15868808504@163.com(String)
2020-11-09 22:35:22 -<==      Total: 1
2020-11-09 22:35:30 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 22:35:30 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 22:35:30 -<==      Total: 1
2020-11-09 22:35:30 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 22:35:30 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 22:35:30 -<==      Total: 1
2020-11-09 22:35:34 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:35:34 -==> Parameters: 2(Integer)
2020-11-09 22:35:34 -<==      Total: 1
2020-11-09 22:35:34 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:35:34 -==> Parameters: 2(Integer)
2020-11-09 22:35:34 -<==      Total: 3
2020-11-09 22:35:36 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:35:36 -==> Parameters: 2(Integer)
2020-11-09 22:35:36 -<==      Total: 1
2020-11-09 22:35:36 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:35:36 -==> Parameters: 2(Integer)
2020-11-09 22:35:36 -<==      Total: 1
2020-11-09 22:35:36 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:35:36 -==> Parameters: 2(Integer)
2020-11-09 22:35:36 -<==      Total: 2
2020-11-09 22:35:36 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:35:36 -==> Parameters: 2(Integer)
2020-11-09 22:35:36 -<==      Total: 3
2020-11-09 22:36:43 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:36:43 -==> Parameters: 2(Integer)
2020-11-09 22:36:43 -<==      Total: 1
2020-11-09 22:36:43 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:36:43 -==> Parameters: 2(Integer)
2020-11-09 22:36:43 -<==      Total: 3
2020-11-09 22:36:43 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:36:43 -==> Parameters: 2(Integer)
2020-11-09 22:36:43 -<==      Total: 1
2020-11-09 22:36:43 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:36:43 -==> Parameters: 2(Integer)
2020-11-09 22:36:44 -<==      Total: 3
2020-11-09 22:36:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:36:45 -==> Parameters: 2(Integer)
2020-11-09 22:36:45 -<==      Total: 1
2020-11-09 22:36:45 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:36:45 -==> Parameters: 2(Integer)
2020-11-09 22:36:45 -<==      Total: 1
2020-11-09 22:36:45 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:36:45 -==> Parameters: 2(Integer)
2020-11-09 22:36:45 -<==      Total: 2
2020-11-09 22:36:45 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:36:45 -==> Parameters: 2(Integer)
2020-11-09 22:36:45 -<==      Total: 3
2020-11-09 22:38:30 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 22:35:01 CST 2020]; root of context hierarchy
2020-11-09 22:38:30 -Unregistering JMX-exposed beans on shutdown
2020-11-09 22:38:33 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 10280 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 22:38:33 -No active profile set, falling back to default profiles: default
2020-11-09 22:38:33 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 22:38:33 CST 2020]; root of context hierarchy
2020-11-09 22:38:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 22:38:34 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 22:38:34 -Root WebApplicationContext: initialization completed in 1108 ms
2020-11-09 22:38:34 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 22:38:34 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 22:38:34 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 22:38:34 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 22:38:34 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 22:38:35 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 22:38:33 CST 2020]; root of context hierarchy
2020-11-09 22:38:35 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 22:38:35 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 22:38:35 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 22:38:35 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 22:38:35 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 22:38:35 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 22:38:35 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 22:38:35 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 22:38:35 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 22:38:35 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 22:38:35 -Mapped "{[/tch/uploadTaskScore],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadTaskScore(java.lang.Integer,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 22:38:35 -Mapped "{[/tch/deleteCourseWare],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.deleteCourseWare(java.lang.Integer)
2020-11-09 22:38:35 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 22:38:35 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 22:38:35 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 22:38:35 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 22:38:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 22:38:35 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 22:38:35 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 22:38:35 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 22:38:35 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 22:38:35 -Registering beans for JMX exposure on startup
2020-11-09 22:38:35 -Tomcat started on port(s): 8080 (http)
2020-11-09 22:38:35 -Started SpringBootUserApplication in 2.376 seconds (JVM running for 2.753)
2020-11-09 22:38:59 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 22:38:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2020-11-09 22:39:02 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:39:02 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:39:02 -==> Parameters: 2(Integer)
2020-11-09 22:39:02 -==> Parameters: 2(Integer)
2020-11-09 22:39:03 -<==      Total: 1
2020-11-09 22:39:03 -<==      Total: 1
2020-11-09 22:39:03 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:39:03 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:39:03 -==> Parameters: 3(Integer)
2020-11-09 22:39:03 -==> Parameters: 2(Integer)
2020-11-09 22:39:03 -<==      Total: 1
2020-11-09 22:39:03 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:39:03 -<==      Total: 1
2020-11-09 22:39:03 -==> Parameters: 3(Integer)
2020-11-09 22:39:03 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:39:03 -==> Parameters: 2(Integer)
2020-11-09 22:39:03 -<==      Total: 2
2020-11-09 22:39:03 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:39:03 -==> Parameters: 3(Integer)
2020-11-09 22:39:03 -<==      Total: 2
2020-11-09 22:39:03 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:39:03 -==> Parameters: 2(Integer)
2020-11-09 22:39:03 -<==      Total: 5
2020-11-09 22:39:03 -<==      Total: 3
2020-11-09 22:39:03 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:39:03 -==> Parameters: 2(Integer)
2020-11-09 22:39:03 -<==      Total: 1
2020-11-09 22:39:03 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:39:03 -==> Parameters: 2(Integer)
2020-11-09 22:39:03 -<==      Total: 1
2020-11-09 22:39:03 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:39:03 -==> Parameters: 2(Integer)
2020-11-09 22:39:03 -<==      Total: 2
2020-11-09 22:39:03 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:39:03 -==> Parameters: 2(Integer)
2020-11-09 22:39:03 -<==      Total: 3
2020-11-09 22:39:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:39:10 -==> Parameters: 2(Integer)
2020-11-09 22:39:10 -<==      Total: 1
2020-11-09 22:39:10 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:39:10 -==> Parameters: 2(Integer)
2020-11-09 22:39:10 -<==      Total: 1
2020-11-09 22:39:10 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:39:10 -==> Parameters: 2(Integer)
2020-11-09 22:39:10 -<==      Total: 2
2020-11-09 22:39:10 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:39:10 -==> Parameters: 2(Integer)
2020-11-09 22:39:10 -<==      Total: 3
2020-11-09 22:44:31 -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 22:38:33 CST 2020]; root of context hierarchy
2020-11-09 22:44:31 -Unregistering JMX-exposed beans on shutdown
2020-11-09 22:44:34 -Starting SpringBootUserApplication on lyy-inspiron-5488 with PID 10470 (/home/lyy/IdeaProjects/com.lyy/blog/target/classes started by lyy in /home/lyy/IdeaProjects/com.lyy/blog)
2020-11-09 22:44:34 -No active profile set, falling back to default profiles: default
2020-11-09 22:44:34 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 22:44:34 CST 2020]; root of context hierarchy
2020-11-09 22:44:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-09 22:44:35 -Tomcat initialized with port(s): 8080 (http)
2020-11-09 22:44:35 -Root WebApplicationContext: initialization completed in 1066 ms
2020-11-09 22:44:35 -Mapping servlet: 'dispatcherServlet' to [/]
2020-11-09 22:44:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2020-11-09 22:44:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-11-09 22:44:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-11-09 22:44:35 -Mapping filter: 'requestContextFilter' to: [/*]
2020-11-09 22:44:36 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78e117e3: startup date [Mon Nov 09 22:44:34 CST 2020]; root of context hierarchy
2020-11-09 22:44:36 -Mapped "{[/admin/allApplyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/admin/allApplyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.getCreClassList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/admin/dealCreApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/admin/dealCreClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.AdminController.dealCreClassApply(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/course/semesterList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getSemesterList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/course/gradeList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.getGradeList(javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/course/createApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.CourseController.createApply(cn.org.test.req.CreateCourseReq,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/stu/selectClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClassList()
2020-11-09 22:44:36 -Mapped "{[/stu/getSelectedCourses],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getSelectedCourses(java.lang.Integer)
2020-11-09 22:44:36 -Mapped "{[/stu/selectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.selectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 22:44:36 -Mapped "{[/stu/disSelectClass],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.disSelectClass(java.lang.Integer,java.lang.Integer)
2020-11-09 22:44:36 -Mapped "{[/stu/getClassesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getClassesList(java.lang.Integer)
2020-11-09 22:44:36 -Mapped "{[/stu/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getTaskList(java.lang.Integer)
2020-11-09 22:44:36 -Mapped "{[/stu/uploadTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.uploadTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile,java.lang.Integer)
2020-11-09 22:44:36 -Mapped "{[/stu/getStuTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.StudentController.getStuTaskDetail(java.lang.Integer,java.lang.Integer)
2020-11-09 22:44:36 -Mapped "{[/tch/applyCreList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/tch/applyCreClassList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCreClassList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/tch/getCoursesList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCoursesList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/tch/creClassApply],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.creClassApply(cn.org.test.req.CreateClassReq,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/tch/getCourseDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getCourseDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/tch/getTaskList],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskList(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/tch/uploadFile],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadFile(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/tch/getClassDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getClassDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/tch/createTask],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.createTask(java.lang.Integer,org.springframework.web.multipart.MultipartFile[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/tch/getTaskDetail],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getTaskDetail(java.lang.Integer,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/tch/getStuTaskStatus],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.getStuTaskStatus(java.lang.Integer)
2020-11-09 22:44:36 -Mapped "{[/tch/downloadExcel],methods=[GET]}" onto public void cn.org.test.controller.TeacherController.downloadExcel(java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 22:44:36 -Mapped "{[/tch/uploadTaskScore],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.uploadTaskScore(java.lang.Integer,org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2020-11-09 22:44:36 -Mapped "{[/tch/deleteCourseWare],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.TeacherController.deleteCourseWare(java.lang.Integer)
2020-11-09 22:44:36 -Mapped "{[/user/registerStudent],methods=[POST]}" onto public cn.org.test.common.ServerResponse<cn.org.test.pojo.User> cn.org.test.controller.UserController.registerStudent(cn.org.test.req.RegisterReq,javax.servlet.http.HttpServletRequest)
2020-11-09 22:44:36 -Mapped "{[/user/loginPwd],methods=[POST]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.loginPwd(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2020-11-09 22:44:36 -Mapped "{[/user/getMessage],methods=[GET]}" onto public cn.org.test.common.ServerResponse cn.org.test.controller.UserController.getMessage()
2020-11-09 22:44:36 -Mapped "{[/user/verify],methods=[POST]}" onto public cn.org.test.common.ServerResponse<java.lang.String> cn.org.test.controller.UserController.verify(java.lang.String,javax.servlet.http.HttpServletRequest)
2020-11-09 22:44:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-11-09 22:44:36 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-11-09 22:44:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 22:44:36 -Mapped URL path [/download/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 22:44:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-11-09 22:44:36 -Registering beans for JMX exposure on startup
2020-11-09 22:44:36 -Tomcat started on port(s): 8080 (http)
2020-11-09 22:44:36 -Started SpringBootUserApplication in 2.211 seconds (JVM running for 2.584)
2020-11-09 22:44:40 -FrameworkServlet 'dispatcherServlet': initialization started
2020-11-09 22:44:40 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2020-11-09 22:44:43 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:44:43 -==> Parameters: 2(Integer)
2020-11-09 22:44:44 -<==      Total: 1
2020-11-09 22:44:44 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:44:44 -==> Parameters: 2(Integer)
2020-11-09 22:44:44 -<==      Total: 1
2020-11-09 22:44:44 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:44:44 -==> Parameters: 2(Integer)
2020-11-09 22:44:44 -<==      Total: 2
2020-11-09 22:44:44 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:44:44 -==> Parameters: 2(Integer)
2020-11-09 22:44:44 -<==      Total: 3
2020-11-09 22:45:13 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:45:13 -==> Parameters: 2(Integer)
2020-11-09 22:45:13 -<==      Total: 1
2020-11-09 22:45:13 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:45:13 -==> Parameters: 2(Integer)
2020-11-09 22:45:13 -<==      Total: 3
2020-11-09 22:45:13 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:45:13 -==> Parameters: 2(Integer)
2020-11-09 22:45:13 -<==      Total: 1
2020-11-09 22:45:13 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:45:13 -==> Parameters: 2(Integer)
2020-11-09 22:45:13 -<==      Total: 3
2020-11-09 22:45:19 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:45:19 -==> Parameters: 2(Integer)
2020-11-09 22:45:19 -<==      Total: 1
2020-11-09 22:45:19 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:45:19 -==> Parameters: 2(Integer)
2020-11-09 22:45:19 -<==      Total: 1
2020-11-09 22:45:19 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:45:19 -==> Parameters: 2(Integer)
2020-11-09 22:45:19 -<==      Total: 2
2020-11-09 22:45:19 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:45:19 -==> Parameters: 2(Integer)
2020-11-09 22:45:19 -<==      Total: 3
2020-11-09 22:45:24 -==>  Preparing: delete from courseWare WHERE id = ? 
2020-11-09 22:45:24 -==> Parameters: 6(Integer)
2020-11-09 22:45:24 -<==    Updates: 1
2020-11-09 22:47:07 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:47:07 -==> Parameters: 2(Integer)
2020-11-09 22:47:07 -<==      Total: 1
2020-11-09 22:47:07 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:47:07 -==> Parameters: 2(Integer)
2020-11-09 22:47:07 -<==      Total: 3
2020-11-09 22:47:07 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:47:07 -==> Parameters: 2(Integer)
2020-11-09 22:47:07 -<==      Total: 1
2020-11-09 22:47:07 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:47:07 -==> Parameters: 2(Integer)
2020-11-09 22:47:07 -<==      Total: 3
2020-11-09 22:47:09 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:47:09 -==> Parameters: 2(Integer)
2020-11-09 22:47:09 -<==      Total: 1
2020-11-09 22:47:09 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:47:09 -==> Parameters: 2(Integer)
2020-11-09 22:47:09 -<==      Total: 1
2020-11-09 22:47:09 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:47:09 -==> Parameters: 2(Integer)
2020-11-09 22:47:09 -<==      Total: 2
2020-11-09 22:47:09 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:47:09 -==> Parameters: 2(Integer)
2020-11-09 22:47:09 -<==      Total: 2
2020-11-09 22:47:15 -==>  Preparing: delete from courseWare WHERE id = ? 
2020-11-09 22:47:15 -==> Parameters: 7(Integer)
2020-11-09 22:47:15 -<==    Updates: 1
2020-11-09 22:47:15 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:47:15 -==> Parameters: 2(Integer)
2020-11-09 22:47:15 -<==      Total: 1
2020-11-09 22:47:15 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:47:15 -==> Parameters: 2(Integer)
2020-11-09 22:47:15 -<==      Total: 1
2020-11-09 22:47:15 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:47:15 -==> Parameters: 2(Integer)
2020-11-09 22:47:15 -<==      Total: 2
2020-11-09 22:47:15 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:47:15 -==> Parameters: 2(Integer)
2020-11-09 22:47:15 -<==      Total: 1
2020-11-09 22:47:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:47:58 -==> Parameters: 2(Integer)
2020-11-09 22:47:58 -<==      Total: 1
2020-11-09 22:47:58 -==>  Preparing: INSERT into courseWare(courseId,filepath,filename,uploadDate) values( ? ,? ,? ,? ) 
2020-11-09 22:47:58 -==> Parameters: 2(Integer), http://localhost:8080/download/courseWare/2/Part 2 索引结构及使用.pdf(String), Part 2 索引结构及使用.pdf(String), 2020-11-09 22:47:58.166(Timestamp)
2020-11-09 22:47:58 -<==    Updates: 1
2020-11-09 22:47:58 -==>  Preparing: INSERT into courseWare(courseId,filepath,filename,uploadDate) values( ? ,? ,? ,? ) 
2020-11-09 22:47:58 -==> Parameters: 2(Integer), http://localhost:8080/download/courseWare/2/Part 4 物理结构与实现.pdf(String), Part 4 物理结构与实现.pdf(String), 2020-11-09 22:47:58.288(Timestamp)
2020-11-09 22:47:58 -<==    Updates: 1
2020-11-09 22:47:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:47:58 -==> Parameters: 2(Integer)
2020-11-09 22:47:58 -<==      Total: 1
2020-11-09 22:47:58 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:47:58 -==> Parameters: 2(Integer)
2020-11-09 22:47:58 -<==      Total: 1
2020-11-09 22:47:58 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:47:58 -==> Parameters: 2(Integer)
2020-11-09 22:47:58 -<==      Total: 2
2020-11-09 22:47:58 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:47:58 -==> Parameters: 2(Integer)
2020-11-09 22:47:58 -<==      Total: 3
2020-11-09 22:48:03 -==>  Preparing: delete from courseWare WHERE id = ? 
2020-11-09 22:48:03 -==> Parameters: 8(Integer)
2020-11-09 22:48:03 -<==    Updates: 1
2020-11-09 22:48:03 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:48:03 -==> Parameters: 2(Integer)
2020-11-09 22:48:03 -<==      Total: 1
2020-11-09 22:48:03 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:48:03 -==> Parameters: 2(Integer)
2020-11-09 22:48:03 -<==      Total: 1
2020-11-09 22:48:03 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:48:03 -==> Parameters: 2(Integer)
2020-11-09 22:48:03 -<==      Total: 2
2020-11-09 22:48:03 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:48:03 -==> Parameters: 2(Integer)
2020-11-09 22:48:03 -<==      Total: 2
2020-11-09 22:48:39 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:48:39 -==> Parameters: 2(Integer)
2020-11-09 22:48:39 -<==      Total: 1
2020-11-09 22:48:39 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:48:39 -==> Parameters: 2(Integer)
2020-11-09 22:48:39 -<==      Total: 3
2020-11-09 22:48:39 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:48:39 -==> Parameters: 2(Integer)
2020-11-09 22:48:39 -<==      Total: 1
2020-11-09 22:48:39 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:48:39 -==> Parameters: 2(Integer)
2020-11-09 22:48:39 -<==      Total: 3
2020-11-09 22:48:42 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:48:42 -==> Parameters: 2(Integer)
2020-11-09 22:48:42 -<==      Total: 1
2020-11-09 22:48:42 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:48:42 -==> Parameters: 2(Integer)
2020-11-09 22:48:42 -<==      Total: 1
2020-11-09 22:48:42 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:48:42 -==> Parameters: 2(Integer)
2020-11-09 22:48:42 -<==      Total: 2
2020-11-09 22:48:42 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:48:42 -==> Parameters: 2(Integer)
2020-11-09 22:48:42 -<==      Total: 2
2020-11-09 22:49:18 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:49:18 -==> Parameters: 2(Integer)
2020-11-09 22:49:18 -<==      Total: 1
2020-11-09 22:49:18 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:49:18 -==> Parameters: 2(Integer)
2020-11-09 22:49:18 -<==      Total: 3
2020-11-09 22:49:18 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:49:18 -==> Parameters: 2(Integer)
2020-11-09 22:49:18 -<==      Total: 1
2020-11-09 22:49:18 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:49:18 -==> Parameters: 2(Integer)
2020-11-09 22:49:18 -<==      Total: 3
2020-11-09 22:49:20 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:49:20 -==> Parameters: 2(Integer)
2020-11-09 22:49:20 -<==      Total: 1
2020-11-09 22:49:20 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:49:20 -==> Parameters: 2(Integer)
2020-11-09 22:49:20 -<==      Total: 1
2020-11-09 22:49:20 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:49:20 -==> Parameters: 2(Integer)
2020-11-09 22:49:20 -<==      Total: 2
2020-11-09 22:49:20 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:49:20 -==> Parameters: 2(Integer)
2020-11-09 22:49:20 -<==      Total: 2
2020-11-09 22:49:36 -==>  Preparing: SELECT * from class WHERE status in (0,1) 
2020-11-09 22:49:36 -==> Parameters: 
2020-11-09 22:49:36 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 22:49:36 -==> Parameters: 2(Integer)
2020-11-09 22:49:36 -<==      Total: 3
2020-11-09 22:49:36 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 22:49:36 -==> Parameters: 3(Integer)
2020-11-09 22:49:36 -<==      Total: 0
2020-11-09 22:49:36 -<==      Total: 1
2020-11-09 22:49:36 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 22:49:36 -==> Parameters: 5(Integer)
2020-11-09 22:49:36 -<==      Total: 1
2020-11-09 22:49:36 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 22:49:36 -==> Parameters: 2(Integer)
2020-11-09 22:49:36 -<==      Total: 1
2020-11-09 22:49:36 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 22:49:36 -==> Parameters: 3(Integer)
2020-11-09 22:49:36 -<==      Total: 1
2020-11-09 22:49:36 -==>  Preparing: SELECT * from semester where id = ? 
2020-11-09 22:49:36 -==> Parameters: 2(Integer)
2020-11-09 22:49:36 -<==      Total: 1
2020-11-09 22:49:36 -==>  Preparing: SELECT * from grade WHERE id = ? 
2020-11-09 22:49:36 -==> Parameters: 2(Integer)
2020-11-09 22:49:36 -<==      Total: 1
2020-11-09 22:49:44 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:49:44 -==> Parameters: 2(Integer)
2020-11-09 22:49:44 -<==      Total: 1
2020-11-09 22:49:44 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:49:44 -==> Parameters: 2(Integer)
2020-11-09 22:49:44 -<==      Total: 3
2020-11-09 22:49:46 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:49:46 -==> Parameters: 2(Integer)
2020-11-09 22:49:46 -<==      Total: 1
2020-11-09 22:49:46 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:49:46 -==> Parameters: 2(Integer)
2020-11-09 22:49:46 -<==      Total: 1
2020-11-09 22:49:46 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:49:46 -==> Parameters: 2(Integer)
2020-11-09 22:49:46 -<==      Total: 2
2020-11-09 22:49:46 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:49:46 -==> Parameters: 2(Integer)
2020-11-09 22:49:46 -<==      Total: 2
2020-11-09 22:49:48 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:49:48 -==> Parameters: 2(Integer)
2020-11-09 22:49:48 -<==      Total: 1
2020-11-09 22:49:48 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:49:48 -==> Parameters: 2(Integer)
2020-11-09 22:49:48 -<==      Total: 1
2020-11-09 22:49:48 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:49:48 -==> Parameters: 2(Integer)
2020-11-09 22:49:48 -<==      Total: 2
2020-11-09 22:49:48 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:49:48 -==> Parameters: 2(Integer)
2020-11-09 22:49:49 -<==      Total: 2
2020-11-09 22:50:26 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:50:26 -==> Parameters: 2(Integer)
2020-11-09 22:50:26 -<==      Total: 1
2020-11-09 22:50:26 -==>  Preparing: INSERT into courseWare(courseId,filepath,filename,uploadDate) values( ? ,? ,? ,? ) 
2020-11-09 22:50:26 -==> Parameters: 2(Integer), http://localhost:8080/download/courseWare/2/黑客与画家读书笔记.docx(String), 黑客与画家读书笔记.docx(String), 2020-11-09 22:50:26.988(Timestamp)
2020-11-09 22:50:27 -<==    Updates: 1
2020-11-09 22:50:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:50:27 -==> Parameters: 2(Integer)
2020-11-09 22:50:27 -<==      Total: 1
2020-11-09 22:50:27 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:50:27 -==> Parameters: 2(Integer)
2020-11-09 22:50:27 -<==      Total: 1
2020-11-09 22:50:27 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:50:27 -==> Parameters: 2(Integer)
2020-11-09 22:50:27 -<==      Total: 2
2020-11-09 22:50:27 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:50:27 -==> Parameters: 2(Integer)
2020-11-09 22:50:27 -<==      Total: 3
2020-11-09 22:50:40 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:50:40 -==> Parameters: 2(Integer)
2020-11-09 22:50:40 -<==      Total: 1
2020-11-09 22:50:40 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:50:40 -==> Parameters: 2(Integer)
2020-11-09 22:50:40 -<==      Total: 3
2020-11-09 22:50:42 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:50:42 -==> Parameters: 2(Integer)
2020-11-09 22:50:42 -<==      Total: 1
2020-11-09 22:50:42 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:50:42 -==> Parameters: 2(Integer)
2020-11-09 22:50:42 -<==      Total: 1
2020-11-09 22:50:42 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:50:42 -==> Parameters: 2(Integer)
2020-11-09 22:50:42 -<==      Total: 2
2020-11-09 22:50:42 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:50:42 -==> Parameters: 2(Integer)
2020-11-09 22:50:42 -<==      Total: 3
2020-11-09 22:52:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:52:12 -==> Parameters: 2(Integer)
2020-11-09 22:52:12 -<==      Total: 1
2020-11-09 22:52:12 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:52:12 -==> Parameters: 2(Integer)
2020-11-09 22:52:12 -<==      Total: 3
2020-11-09 22:52:15 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:52:15 -==> Parameters: 2(Integer)
2020-11-09 22:52:15 -<==      Total: 1
2020-11-09 22:52:15 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:52:15 -==> Parameters: 2(Integer)
2020-11-09 22:52:15 -<==      Total: 1
2020-11-09 22:52:15 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:52:15 -==> Parameters: 2(Integer)
2020-11-09 22:52:15 -<==      Total: 2
2020-11-09 22:52:15 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:52:15 -==> Parameters: 2(Integer)
2020-11-09 22:52:15 -<==      Total: 3
2020-11-09 22:54:05 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:54:05 -==> Parameters: 2(Integer)
2020-11-09 22:54:05 -<==      Total: 1
2020-11-09 22:54:05 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:54:05 -==> Parameters: 2(Integer)
2020-11-09 22:54:05 -<==      Total: 3
2020-11-09 22:54:07 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:54:07 -==> Parameters: 2(Integer)
2020-11-09 22:54:07 -<==      Total: 1
2020-11-09 22:54:07 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:54:07 -==> Parameters: 2(Integer)
2020-11-09 22:54:07 -<==      Total: 1
2020-11-09 22:54:07 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:54:07 -==> Parameters: 2(Integer)
2020-11-09 22:54:07 -<==      Total: 2
2020-11-09 22:54:07 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:54:07 -==> Parameters: 2(Integer)
2020-11-09 22:54:08 -<==      Total: 3
2020-11-09 22:54:21 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:54:21 -==> Parameters: 2(Integer)
2020-11-09 22:54:21 -<==      Total: 1
2020-11-09 22:54:21 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:54:21 -==> Parameters: 2(Integer)
2020-11-09 22:54:21 -<==      Total: 3
2020-11-09 22:54:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:54:27 -==> Parameters: 2(Integer)
2020-11-09 22:54:27 -<==      Total: 1
2020-11-09 22:54:27 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:54:27 -==> Parameters: 2(Integer)
2020-11-09 22:54:27 -<==      Total: 1
2020-11-09 22:54:27 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:54:27 -==> Parameters: 2(Integer)
2020-11-09 22:54:27 -<==      Total: 2
2020-11-09 22:54:27 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:54:27 -==> Parameters: 2(Integer)
2020-11-09 22:54:27 -<==      Total: 3
2020-11-09 22:54:31 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:54:31 -==> Parameters: 2(Integer)
2020-11-09 22:54:31 -<==      Total: 1
2020-11-09 22:54:31 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:54:31 -==> Parameters: 3(Integer)
2020-11-09 22:54:31 -<==      Total: 1
2020-11-09 22:54:31 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:54:31 -==> Parameters: 3(Integer)
2020-11-09 22:54:31 -<==      Total: 2
2020-11-09 22:54:31 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:54:31 -==> Parameters: 3(Integer)
2020-11-09 22:54:31 -<==      Total: 5
2020-11-09 22:55:39 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:55:39 -==> Parameters: 2(Integer)
2020-11-09 22:55:39 -<==      Total: 1
2020-11-09 22:55:39 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:55:39 -==> Parameters: 2(Integer)
2020-11-09 22:55:39 -<==      Total: 3
2020-11-09 22:55:40 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:55:40 -==> Parameters: 2(Integer)
2020-11-09 22:55:40 -<==      Total: 1
2020-11-09 22:55:40 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:55:40 -==> Parameters: 2(Integer)
2020-11-09 22:55:40 -<==      Total: 1
2020-11-09 22:55:40 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:55:40 -==> Parameters: 2(Integer)
2020-11-09 22:55:40 -<==      Total: 2
2020-11-09 22:55:40 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:55:40 -==> Parameters: 2(Integer)
2020-11-09 22:55:40 -<==      Total: 3
2020-11-09 22:55:41 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:55:41 -==> Parameters: 2(Integer)
2020-11-09 22:55:41 -<==      Total: 1
2020-11-09 22:55:41 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:55:41 -==> Parameters: 3(Integer)
2020-11-09 22:55:41 -<==      Total: 1
2020-11-09 22:55:41 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:55:41 -==> Parameters: 3(Integer)
2020-11-09 22:55:41 -<==      Total: 2
2020-11-09 22:55:41 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:55:41 -==> Parameters: 3(Integer)
2020-11-09 22:55:41 -<==      Total: 5
2020-11-09 22:56:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:56:22 -==> Parameters: 2(Integer)
2020-11-09 22:56:22 -<==      Total: 1
2020-11-09 22:56:22 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:56:22 -==> Parameters: 2(Integer)
2020-11-09 22:56:22 -<==      Total: 3
2020-11-09 22:56:24 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:56:24 -==> Parameters: 2(Integer)
2020-11-09 22:56:24 -<==      Total: 1
2020-11-09 22:56:24 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:56:24 -==> Parameters: 2(Integer)
2020-11-09 22:56:24 -<==      Total: 1
2020-11-09 22:56:24 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:56:24 -==> Parameters: 2(Integer)
2020-11-09 22:56:24 -<==      Total: 2
2020-11-09 22:56:24 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:56:24 -==> Parameters: 2(Integer)
2020-11-09 22:56:24 -<==      Total: 3
2020-11-09 22:56:46 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:56:46 -==> Parameters: 2(Integer)
2020-11-09 22:56:46 -<==      Total: 1
2020-11-09 22:56:46 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:56:46 -==> Parameters: 2(Integer)
2020-11-09 22:56:46 -<==      Total: 1
2020-11-09 22:56:46 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:56:46 -==> Parameters: 2(Integer)
2020-11-09 22:56:46 -<==      Total: 2
2020-11-09 22:56:46 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:56:46 -==> Parameters: 2(Integer)
2020-11-09 22:56:46 -<==      Total: 3
2020-11-09 22:56:49 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:56:49 -==> Parameters: 2(Integer)
2020-11-09 22:56:49 -<==      Total: 1
2020-11-09 22:56:49 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:56:49 -==> Parameters: 3(Integer)
2020-11-09 22:56:49 -<==      Total: 1
2020-11-09 22:56:49 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:56:49 -==> Parameters: 3(Integer)
2020-11-09 22:56:49 -<==      Total: 2
2020-11-09 22:56:49 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:56:49 -==> Parameters: 3(Integer)
2020-11-09 22:56:49 -<==      Total: 5
2020-11-09 22:56:50 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:56:50 -==> Parameters: 2(Integer)
2020-11-09 22:56:50 -<==      Total: 1
2020-11-09 22:56:50 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:56:50 -==> Parameters: 2(Integer)
2020-11-09 22:56:50 -<==      Total: 1
2020-11-09 22:56:50 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:56:50 -==> Parameters: 2(Integer)
2020-11-09 22:56:50 -<==      Total: 2
2020-11-09 22:56:50 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:56:50 -==> Parameters: 2(Integer)
2020-11-09 22:56:50 -<==      Total: 3
2020-11-09 22:57:00 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:57:00 -==> Parameters: 2(Integer)
2020-11-09 22:57:00 -<==      Total: 1
2020-11-09 22:57:00 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 22:57:00 -==> Parameters: 2(Integer)
2020-11-09 22:57:00 -<==      Total: 1
2020-11-09 22:57:00 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 22:57:00 -==> Parameters: 2(Integer)
2020-11-09 22:57:01 -<==      Total: 2
2020-11-09 22:57:01 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 22:57:01 -==> Parameters: 2(Integer)
2020-11-09 22:57:01 -<==      Total: 3
2020-11-09 22:57:06 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:57:06 -==> Parameters: 2(Integer)
2020-11-09 22:57:06 -<==      Total: 1
2020-11-09 22:57:06 -==>  Preparing: SELECT * from createApplication WHERE teacherId = ? 
2020-11-09 22:57:06 -==> Parameters: 2(Integer)
2020-11-09 22:57:06 -<==      Total: 5
2020-11-09 22:57:09 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:57:09 -==> Parameters: 2(Integer)
2020-11-09 22:57:09 -<==      Total: 1
2020-11-09 22:57:09 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:57:09 -==> Parameters: 2(Integer)
2020-11-09 22:57:09 -<==      Total: 3
2020-11-09 22:59:33 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 22:59:33 -==> Parameters: 2(Integer)
2020-11-09 22:59:33 -<==      Total: 1
2020-11-09 22:59:33 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 22:59:33 -==> Parameters: 2(Integer)
2020-11-09 22:59:33 -<==      Total: 3
2020-11-09 23:00:04 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:00:04 -==> Parameters: 2(Integer)
2020-11-09 23:00:04 -<==      Total: 1
2020-11-09 23:00:04 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:00:04 -==> Parameters: 2(Integer)
2020-11-09 23:00:04 -<==      Total: 1
2020-11-09 23:00:04 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:00:04 -==> Parameters: 2(Integer)
2020-11-09 23:00:04 -<==      Total: 2
2020-11-09 23:00:04 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:00:04 -==> Parameters: 2(Integer)
2020-11-09 23:00:04 -<==      Total: 3
2020-11-09 23:00:06 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:00:06 -==> Parameters: 2(Integer)
2020-11-09 23:00:06 -<==      Total: 1
2020-11-09 23:00:06 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:00:06 -==> Parameters: 3(Integer)
2020-11-09 23:00:06 -<==      Total: 1
2020-11-09 23:00:06 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:00:06 -==> Parameters: 3(Integer)
2020-11-09 23:00:06 -<==      Total: 2
2020-11-09 23:00:06 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:00:06 -==> Parameters: 3(Integer)
2020-11-09 23:00:06 -<==      Total: 5
2020-11-09 23:00:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:00:08 -==> Parameters: 2(Integer)
2020-11-09 23:00:08 -<==      Total: 1
2020-11-09 23:00:08 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:00:08 -==> Parameters: 4(Integer)
2020-11-09 23:00:08 -<==      Total: 1
2020-11-09 23:00:08 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:00:08 -==> Parameters: 4(Integer)
2020-11-09 23:00:09 -<==      Total: 0
2020-11-09 23:00:09 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:00:09 -==> Parameters: 4(Integer)
2020-11-09 23:00:09 -<==      Total: 0
2020-11-09 23:00:13 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:00:13 -==> Parameters: 2(Integer)
2020-11-09 23:00:13 -<==      Total: 1
2020-11-09 23:00:13 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:00:13 -==> Parameters: 2(Integer)
2020-11-09 23:00:14 -<==      Total: 1
2020-11-09 23:00:14 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:00:14 -==> Parameters: 2(Integer)
2020-11-09 23:00:14 -<==      Total: 2
2020-11-09 23:00:14 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:00:14 -==> Parameters: 2(Integer)
2020-11-09 23:00:14 -<==      Total: 3
2020-11-09 23:00:16 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:00:16 -==> Parameters: 2(Integer)
2020-11-09 23:00:16 -<==      Total: 1
2020-11-09 23:00:16 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 23:00:16 -==> Parameters: 2(Integer)
2020-11-09 23:00:16 -<==      Total: 0
2020-11-09 23:03:17 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:03:17 -==> Parameters: 2(Integer)
2020-11-09 23:03:17 -<==      Total: 1
2020-11-09 23:03:17 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:03:17 -==> Parameters: 2(Integer)
2020-11-09 23:03:17 -<==      Total: 3
2020-11-09 23:03:19 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:03:19 -==> Parameters: 2(Integer)
2020-11-09 23:03:19 -<==      Total: 1
2020-11-09 23:03:19 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:03:19 -==> Parameters: 2(Integer)
2020-11-09 23:03:19 -<==      Total: 1
2020-11-09 23:03:19 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:03:19 -==> Parameters: 2(Integer)
2020-11-09 23:03:19 -<==      Total: 2
2020-11-09 23:03:19 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:03:19 -==> Parameters: 2(Integer)
2020-11-09 23:03:19 -<==      Total: 3
2020-11-09 23:03:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:03:22 -==> Parameters: 2(Integer)
2020-11-09 23:03:22 -<==      Total: 1
2020-11-09 23:03:22 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 23:03:22 -==> Parameters: 2(Integer)
2020-11-09 23:03:22 -<==      Total: 0
2020-11-09 23:03:26 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:03:26 -==> Parameters: 2(Integer)
2020-11-09 23:03:26 -<==      Total: 1
2020-11-09 23:03:26 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 23:03:26 -==> Parameters: 6(Integer)
2020-11-09 23:03:26 -<==      Total: 3
2020-11-09 23:03:28 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:03:28 -==> Parameters: 4(Integer)
2020-11-09 23:03:28 -<==      Total: 1
2020-11-09 23:03:28 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:03:28 -==> Parameters: 4(Integer)
2020-11-09 23:03:28 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:03:28 -==> Parameters: 4(Integer)
2020-11-09 23:03:28 -<==      Total: 1
2020-11-09 23:03:28 -<==      Total: 0
2020-11-09 23:03:28 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:03:28 -==> Parameters: 4(Integer)
2020-11-09 23:03:28 -<==      Total: 1
2020-11-09 23:03:28 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:03:28 -==> Parameters: 6(Integer)
2020-11-09 23:03:28 -<==      Total: 1
2020-11-09 23:03:28 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:03:28 -==> Parameters: 6(Integer)
2020-11-09 23:03:28 -<==      Total: 2
2020-11-09 23:03:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:03:28 -==> Parameters: 11(Integer)
2020-11-09 23:03:28 -<==      Total: 1
2020-11-09 23:03:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:03:28 -==> Parameters: 12(Integer)
2020-11-09 23:03:28 -<==      Total: 1
2020-11-09 23:04:45 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:04:45 -==> Parameters: 4(Integer)
2020-11-09 23:04:45 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:04:45 -==> Parameters: 4(Integer)
2020-11-09 23:04:45 -<==      Total: 0
2020-11-09 23:04:45 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:04:45 -==> Parameters: 4(Integer)
2020-11-09 23:04:45 -<==      Total: 1
2020-11-09 23:04:45 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:04:45 -==> Parameters: 4(Integer)
2020-11-09 23:04:45 -<==      Total: 1
2020-11-09 23:04:45 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:04:45 -==> Parameters: 6(Integer)
2020-11-09 23:04:46 -<==      Total: 1
2020-11-09 23:04:46 -<==      Total: 1
2020-11-09 23:04:46 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:04:46 -==> Parameters: 6(Integer)
2020-11-09 23:04:46 -<==      Total: 2
2020-11-09 23:04:46 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:04:46 -==> Parameters: 11(Integer)
2020-11-09 23:04:46 -<==      Total: 1
2020-11-09 23:04:46 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:04:46 -==> Parameters: 12(Integer)
2020-11-09 23:04:46 -<==      Total: 1
2020-11-09 23:07:58 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:07:58 -==> Parameters: 4(Integer)
2020-11-09 23:07:58 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:07:58 -==> Parameters: 4(Integer)
2020-11-09 23:07:58 -<==      Total: 0
2020-11-09 23:07:58 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:07:58 -==> Parameters: 4(Integer)
2020-11-09 23:07:58 -<==      Total: 1
2020-11-09 23:07:58 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:07:58 -==> Parameters: 4(Integer)
2020-11-09 23:07:58 -<==      Total: 1
2020-11-09 23:07:58 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:07:58 -==> Parameters: 6(Integer)
2020-11-09 23:07:58 -<==      Total: 1
2020-11-09 23:07:58 -<==      Total: 1
2020-11-09 23:07:58 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:07:58 -==> Parameters: 6(Integer)
2020-11-09 23:07:58 -<==      Total: 2
2020-11-09 23:07:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:07:58 -==> Parameters: 11(Integer)
2020-11-09 23:07:58 -<==      Total: 1
2020-11-09 23:07:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:07:58 -==> Parameters: 12(Integer)
2020-11-09 23:07:58 -<==      Total: 1
2020-11-09 23:08:12 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:08:12 -==> Parameters: 2(Integer)
2020-11-09 23:08:12 -<==      Total: 1
2020-11-09 23:08:12 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 23:08:12 -==> Parameters: 6(Integer)
2020-11-09 23:08:12 -<==      Total: 3
2020-11-09 23:09:57 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:09:57 -==> Parameters: 4(Integer)
2020-11-09 23:09:57 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:09:57 -==> Parameters: 4(Integer)
2020-11-09 23:09:57 -<==      Total: 0
2020-11-09 23:09:57 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:09:57 -==> Parameters: 4(Integer)
2020-11-09 23:09:57 -<==      Total: 1
2020-11-09 23:09:57 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:09:57 -==> Parameters: 4(Integer)
2020-11-09 23:09:57 -<==      Total: 1
2020-11-09 23:09:57 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:09:57 -==> Parameters: 6(Integer)
2020-11-09 23:09:57 -<==      Total: 1
2020-11-09 23:09:57 -<==      Total: 1
2020-11-09 23:09:57 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:09:57 -==> Parameters: 6(Integer)
2020-11-09 23:09:57 -<==      Total: 2
2020-11-09 23:09:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:09:57 -==> Parameters: 11(Integer)
2020-11-09 23:09:57 -<==      Total: 1
2020-11-09 23:09:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:09:57 -==> Parameters: 12(Integer)
2020-11-09 23:09:57 -<==      Total: 1
2020-11-09 23:13:37 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:13:37 -==> Parameters: 4(Integer)
2020-11-09 23:13:37 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:13:37 -==> Parameters: 4(Integer)
2020-11-09 23:13:37 -<==      Total: 1
2020-11-09 23:13:37 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:13:37 -==> Parameters: 4(Integer)
2020-11-09 23:13:37 -<==      Total: 0
2020-11-09 23:13:37 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:13:37 -==> Parameters: 4(Integer)
2020-11-09 23:13:37 -<==      Total: 1
2020-11-09 23:13:37 -<==      Total: 1
2020-11-09 23:13:37 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:13:37 -==> Parameters: 6(Integer)
2020-11-09 23:13:38 -<==      Total: 1
2020-11-09 23:13:38 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:13:38 -==> Parameters: 6(Integer)
2020-11-09 23:13:38 -<==      Total: 2
2020-11-09 23:13:38 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:13:38 -==> Parameters: 11(Integer)
2020-11-09 23:13:38 -<==      Total: 1
2020-11-09 23:13:38 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:13:38 -==> Parameters: 12(Integer)
2020-11-09 23:13:38 -<==      Total: 1
2020-11-09 23:20:55 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:20:55 -==> Parameters: 4(Integer)
2020-11-09 23:20:55 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:20:55 -==> Parameters: 4(Integer)
2020-11-09 23:20:55 -<==      Total: 1
2020-11-09 23:20:55 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:20:55 -==> Parameters: 4(Integer)
2020-11-09 23:20:55 -<==      Total: 0
2020-11-09 23:20:55 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:20:55 -==> Parameters: 4(Integer)
2020-11-09 23:20:55 -<==      Total: 1
2020-11-09 23:20:55 -<==      Total: 1
2020-11-09 23:20:55 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:20:55 -==> Parameters: 6(Integer)
2020-11-09 23:20:55 -<==      Total: 1
2020-11-09 23:20:55 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:20:55 -==> Parameters: 6(Integer)
2020-11-09 23:20:55 -<==      Total: 2
2020-11-09 23:20:55 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:20:55 -==> Parameters: 11(Integer)
2020-11-09 23:20:55 -<==      Total: 1
2020-11-09 23:20:55 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:20:55 -==> Parameters: 12(Integer)
2020-11-09 23:20:55 -<==      Total: 1
2020-11-09 23:20:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:20:57 -==> Parameters: 2(Integer)
2020-11-09 23:20:57 -<==      Total: 1
2020-11-09 23:20:57 -Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2020-11-09 23:23:40 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:23:40 -==> Parameters: 5(Integer)
2020-11-09 23:23:40 -<==      Total: 1
2020-11-09 23:23:40 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:23:40 -==> Parameters: 5(Integer)
2020-11-09 23:23:40 -<==      Total: 0
2020-11-09 23:23:40 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:23:40 -==> Parameters: 5(Integer)
2020-11-09 23:23:41 -<==      Total: 2
2020-11-09 23:23:41 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:23:41 -==> Parameters: 5(Integer)
2020-11-09 23:23:41 -<==      Total: 1
2020-11-09 23:23:41 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:23:41 -==> Parameters: 6(Integer)
2020-11-09 23:23:41 -<==      Total: 1
2020-11-09 23:23:41 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:23:41 -==> Parameters: 6(Integer)
2020-11-09 23:23:41 -<==      Total: 2
2020-11-09 23:23:41 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:23:41 -==> Parameters: 11(Integer)
2020-11-09 23:23:41 -<==      Total: 1
2020-11-09 23:23:41 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:23:41 -==> Parameters: 12(Integer)
2020-11-09 23:23:41 -<==      Total: 1
2020-11-09 23:23:48 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:23:48 -==> Parameters: 6(Integer)
2020-11-09 23:23:48 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:23:48 -==> Parameters: 6(Integer)
2020-11-09 23:23:48 -<==      Total: 1
2020-11-09 23:23:48 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:23:48 -==> Parameters: 6(Integer)
2020-11-09 23:23:48 -<==      Total: 2
2020-11-09 23:23:48 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:23:48 -==> Parameters: 6(Integer)
2020-11-09 23:23:48 -<==      Total: 0
2020-11-09 23:23:48 -<==      Total: 1
2020-11-09 23:23:48 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:23:48 -==> Parameters: 6(Integer)
2020-11-09 23:23:48 -<==      Total: 1
2020-11-09 23:23:48 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:23:48 -==> Parameters: 6(Integer)
2020-11-09 23:23:48 -<==      Total: 2
2020-11-09 23:23:48 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:23:48 -==> Parameters: 11(Integer)
2020-11-09 23:23:48 -<==      Total: 1
2020-11-09 23:23:48 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:23:48 -==> Parameters: 12(Integer)
2020-11-09 23:23:48 -<==      Total: 1
2020-11-09 23:23:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:23:56 -==> Parameters: 6(Integer)
2020-11-09 23:23:56 -<==      Total: 1
2020-11-09 23:23:56 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:23:56 -==> Parameters: 6(Integer)
2020-11-09 23:23:56 -<==      Total: 1
2020-11-09 23:23:56 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:23:56 -==> Parameters: 6(Integer)
2020-11-09 23:23:56 -<==      Total: 2
2020-11-09 23:23:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:23:56 -==> Parameters: 11(Integer)
2020-11-09 23:23:56 -<==      Total: 1
2020-11-09 23:23:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:23:56 -==> Parameters: 12(Integer)
2020-11-09 23:23:56 -<==      Total: 1
2020-11-09 23:24:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:24:10 -==> Parameters: 2(Integer)
2020-11-09 23:24:10 -<==      Total: 1
2020-11-09 23:24:10 -Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2020-11-09 23:24:27 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:24:27 -==> Parameters: 2(Integer)
2020-11-09 23:24:27 -<==      Total: 1
2020-11-09 23:24:27 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 23:24:27 -==> Parameters: 6(Integer)
2020-11-09 23:24:27 -<==      Total: 3
2020-11-09 23:24:29 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:24:29 -==> Parameters: 4(Integer)
2020-11-09 23:24:29 -<==      Total: 1
2020-11-09 23:24:29 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:24:29 -==> Parameters: 4(Integer)
2020-11-09 23:24:29 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:24:29 -==> Parameters: 4(Integer)
2020-11-09 23:24:29 -<==      Total: 1
2020-11-09 23:24:29 -<==      Total: 0
2020-11-09 23:24:29 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:24:29 -==> Parameters: 4(Integer)
2020-11-09 23:24:29 -<==      Total: 1
2020-11-09 23:24:29 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:24:29 -==> Parameters: 6(Integer)
2020-11-09 23:24:29 -<==      Total: 1
2020-11-09 23:24:29 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:24:29 -==> Parameters: 6(Integer)
2020-11-09 23:24:29 -<==      Total: 2
2020-11-09 23:24:29 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:24:29 -==> Parameters: 11(Integer)
2020-11-09 23:24:29 -<==      Total: 1
2020-11-09 23:24:29 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:24:29 -==> Parameters: 12(Integer)
2020-11-09 23:24:29 -<==      Total: 1
2020-11-09 23:24:31 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:24:31 -==> Parameters: 5(Integer)
2020-11-09 23:24:31 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:24:31 -==> Parameters: 5(Integer)
2020-11-09 23:24:31 -<==      Total: 2
2020-11-09 23:24:31 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:24:31 -==> Parameters: 5(Integer)
2020-11-09 23:24:31 -<==      Total: 1
2020-11-09 23:24:31 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:24:31 -==> Parameters: 5(Integer)
2020-11-09 23:24:31 -<==      Total: 1
2020-11-09 23:24:31 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:24:31 -==> Parameters: 6(Integer)
2020-11-09 23:24:31 -<==      Total: 0
2020-11-09 23:24:31 -<==      Total: 1
2020-11-09 23:24:31 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:24:31 -==> Parameters: 6(Integer)
2020-11-09 23:24:32 -<==      Total: 2
2020-11-09 23:24:32 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:24:32 -==> Parameters: 11(Integer)
2020-11-09 23:24:32 -<==      Total: 1
2020-11-09 23:24:32 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:24:32 -==> Parameters: 12(Integer)
2020-11-09 23:24:32 -<==      Total: 1
2020-11-09 23:24:42 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:24:42 -==> Parameters: 2(Integer)
2020-11-09 23:24:42 -<==      Total: 1
2020-11-09 23:24:42 -Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: "undefined"
2020-11-09 23:25:44 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:25:44 -==> Parameters: 5(Integer)
2020-11-09 23:25:44 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:25:44 -==> Parameters: 5(Integer)
2020-11-09 23:25:44 -<==      Total: 2
2020-11-09 23:25:44 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:25:44 -==> Parameters: 5(Integer)
2020-11-09 23:25:44 -<==      Total: 1
2020-11-09 23:25:44 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:25:44 -==> Parameters: 5(Integer)
2020-11-09 23:25:44 -<==      Total: 1
2020-11-09 23:25:44 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:25:44 -==> Parameters: 6(Integer)
2020-11-09 23:25:44 -<==      Total: 0
2020-11-09 23:25:44 -<==      Total: 1
2020-11-09 23:25:44 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:25:44 -==> Parameters: 6(Integer)
2020-11-09 23:25:44 -<==      Total: 2
2020-11-09 23:25:44 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:25:44 -==> Parameters: 11(Integer)
2020-11-09 23:25:45 -<==      Total: 1
2020-11-09 23:25:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:25:45 -==> Parameters: 12(Integer)
2020-11-09 23:25:45 -<==      Total: 1
2020-11-09 23:31:15 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:31:15 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:31:15 -==> Parameters: 5(Integer)
2020-11-09 23:31:15 -==> Parameters: 5(Integer)
2020-11-09 23:31:15 -<==      Total: 1
2020-11-09 23:31:15 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:31:15 -==> Parameters: 5(Integer)
2020-11-09 23:31:15 -<==      Total: 2
2020-11-09 23:31:15 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:31:15 -==> Parameters: 5(Integer)
2020-11-09 23:31:15 -<==      Total: 0
2020-11-09 23:31:15 -<==      Total: 1
2020-11-09 23:31:15 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:31:15 -==> Parameters: 6(Integer)
2020-11-09 23:31:15 -<==      Total: 1
2020-11-09 23:31:15 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:31:15 -==> Parameters: 6(Integer)
2020-11-09 23:31:15 -<==      Total: 2
2020-11-09 23:31:15 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:31:15 -==> Parameters: 11(Integer)
2020-11-09 23:31:15 -<==      Total: 1
2020-11-09 23:31:15 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:31:15 -==> Parameters: 12(Integer)
2020-11-09 23:31:16 -<==      Total: 1
2020-11-09 23:32:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:32:56 -==> Parameters: 5(Integer)
2020-11-09 23:32:56 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:32:56 -==> Parameters: 5(Integer)
2020-11-09 23:32:56 -<==      Total: 2
2020-11-09 23:32:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:32:56 -==> Parameters: 5(Integer)
2020-11-09 23:32:56 -<==      Total: 1
2020-11-09 23:32:56 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:32:56 -==> Parameters: 5(Integer)
2020-11-09 23:32:56 -<==      Total: 1
2020-11-09 23:32:56 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:32:56 -==> Parameters: 6(Integer)
2020-11-09 23:32:56 -<==      Total: 0
2020-11-09 23:32:56 -<==      Total: 1
2020-11-09 23:32:56 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:32:56 -==> Parameters: 6(Integer)
2020-11-09 23:32:56 -<==      Total: 2
2020-11-09 23:32:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:32:56 -==> Parameters: 11(Integer)
2020-11-09 23:32:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:32:56 -==> Parameters: 5(Integer)
2020-11-09 23:32:56 -<==      Total: 1
2020-11-09 23:32:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:32:56 -==> Parameters: 12(Integer)
2020-11-09 23:32:56 -<==      Total: 1
2020-11-09 23:32:56 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:32:56 -==> Parameters: 5(Integer)
2020-11-09 23:32:56 -<==      Total: 1
2020-11-09 23:32:56 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:32:56 -==> Parameters: 5(Integer)
2020-11-09 23:32:56 -<==      Total: 0
2020-11-09 23:32:56 -<==      Total: 2
2020-11-09 23:32:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:32:56 -==> Parameters: 5(Integer)
2020-11-09 23:32:56 -<==      Total: 1
2020-11-09 23:32:56 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:32:56 -==> Parameters: 6(Integer)
2020-11-09 23:32:56 -<==      Total: 1
2020-11-09 23:32:56 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:32:56 -==> Parameters: 6(Integer)
2020-11-09 23:32:56 -<==      Total: 2
2020-11-09 23:32:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:32:56 -==> Parameters: 11(Integer)
2020-11-09 23:32:56 -<==      Total: 1
2020-11-09 23:32:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:32:56 -==> Parameters: 12(Integer)
2020-11-09 23:32:56 -<==      Total: 1
2020-11-09 23:32:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:32:58 -==> Parameters: 2(Integer)
2020-11-09 23:32:58 -<==      Total: 1
2020-11-09 23:32:58 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:32:58 -==> Parameters: 2(Integer)
2020-11-09 23:32:58 -<==      Total: 1
2020-11-09 23:32:58 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:32:58 -==> Parameters: 2(Integer)
2020-11-09 23:32:58 -<==      Total: 2
2020-11-09 23:32:58 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:32:58 -==> Parameters: 2(Integer)
2020-11-09 23:32:58 -<==      Total: 3
2020-11-09 23:33:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:33:08 -==> Parameters: 2(Integer)
2020-11-09 23:33:08 -<==      Total: 1
2020-11-09 23:33:08 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:33:08 -==> Parameters: 2(Integer)
2020-11-09 23:33:08 -<==      Total: 1
2020-11-09 23:33:08 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:33:08 -==> Parameters: 2(Integer)
2020-11-09 23:33:08 -<==      Total: 2
2020-11-09 23:33:08 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:33:08 -==> Parameters: 2(Integer)
2020-11-09 23:33:08 -<==      Total: 3
2020-11-09 23:33:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:33:58 -==> Parameters: 2(Integer)
2020-11-09 23:33:58 -<==      Total: 1
2020-11-09 23:33:58 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:33:58 -==> Parameters: 2(Integer)
2020-11-09 23:33:58 -<==      Total: 1
2020-11-09 23:33:58 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:33:58 -==> Parameters: 2(Integer)
2020-11-09 23:33:58 -<==      Total: 2
2020-11-09 23:33:58 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:33:58 -==> Parameters: 2(Integer)
2020-11-09 23:33:58 -<==      Total: 3
2020-11-09 23:36:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:36:08 -==> Parameters: 2(Integer)
2020-11-09 23:36:08 -<==      Total: 1
2020-11-09 23:36:08 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 23:36:09 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:36:09 -==> Parameters: 2(Integer)
2020-11-09 23:36:09 -<==      Total: 1
2020-11-09 23:36:09 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 23:36:11 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:36:11 -==> Parameters: 2(Integer)
2020-11-09 23:36:11 -<==      Total: 1
2020-11-09 23:36:11 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 23:36:16 -==>  Preparing: SELECT * from selectClass WHERE studentId = ? 
2020-11-09 23:36:16 -==> Parameters: 2(Integer)
2020-11-09 23:36:17 -<==      Total: 0
2020-11-09 23:36:21 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:36:21 -==> Parameters: 2(Integer)
2020-11-09 23:36:21 -<==      Total: 1
2020-11-09 23:36:21 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 23:36:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:36:22 -==> Parameters: 2(Integer)
2020-11-09 23:36:22 -<==      Total: 1
2020-11-09 23:36:22 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 23:36:30 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:36:30 -==> Parameters: 2(Integer)
2020-11-09 23:36:30 -<==      Total: 1
2020-11-09 23:36:30 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 23:36:31 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:36:31 -==> Parameters: 2(Integer)
2020-11-09 23:36:31 -<==      Total: 1
2020-11-09 23:36:31 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: 401] with root cause
java.lang.RuntimeException: 401
	at cn.org.test.Interceptor.AuthenticationInterceptor.preHandle(AuthenticationInterceptor.java:69)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:134)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:958)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 23:36:37 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 23:36:37 -==> Parameters: 1586880804@163.com(String)
2020-11-09 23:36:37 -<==      Total: 0
2020-11-09 23:36:37 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at cn.org.test.controller.UserController.loginPwd(UserController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 23:36:39 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 23:36:39 -==> Parameters: 1586880804@163.com(String)
2020-11-09 23:36:39 -<==      Total: 0
2020-11-09 23:36:39 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at cn.org.test.controller.UserController.loginPwd(UserController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-09 23:36:47 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 23:36:47 -==> Parameters: 15868808504@163.com(String)
2020-11-09 23:36:47 -<==      Total: 1
2020-11-09 23:36:47 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 23:36:47 -==> Parameters: 15868808504@163.com(String)
2020-11-09 23:36:47 -<==      Total: 1
2020-11-09 23:36:54 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 23:36:54 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 23:36:54 -<==      Total: 1
2020-11-09 23:36:54 -==>  Preparing: SELECT * from USER where address = ? 
2020-11-09 23:36:54 -==> Parameters: 1653611386@qq.com(String)
2020-11-09 23:36:54 -<==      Total: 1
2020-11-09 23:36:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:36:56 -==> Parameters: 2(Integer)
2020-11-09 23:36:56 -<==      Total: 1
2020-11-09 23:36:56 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:36:56 -==> Parameters: 2(Integer)
2020-11-09 23:36:56 -<==      Total: 3
2020-11-09 23:36:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:36:58 -==> Parameters: 2(Integer)
2020-11-09 23:36:58 -<==      Total: 1
2020-11-09 23:36:58 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:36:58 -==> Parameters: 2(Integer)
2020-11-09 23:36:58 -<==      Total: 1
2020-11-09 23:36:58 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:36:58 -==> Parameters: 2(Integer)
2020-11-09 23:36:58 -<==      Total: 2
2020-11-09 23:36:58 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:36:58 -==> Parameters: 2(Integer)
2020-11-09 23:36:58 -<==      Total: 3
2020-11-09 23:38:31 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:38:31 -==> Parameters: 2(Integer)
2020-11-09 23:38:31 -<==      Total: 1
2020-11-09 23:38:31 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:38:31 -==> Parameters: 2(Integer)
2020-11-09 23:38:31 -<==      Total: 1
2020-11-09 23:38:31 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:38:31 -==> Parameters: 2(Integer)
2020-11-09 23:38:31 -<==      Total: 2
2020-11-09 23:38:31 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:38:31 -==> Parameters: 2(Integer)
2020-11-09 23:38:31 -<==      Total: 3
2020-11-09 23:38:38 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:38:38 -==> Parameters: 2(Integer)
2020-11-09 23:38:38 -<==      Total: 1
2020-11-09 23:38:38 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:38:38 -==> Parameters: 3(Integer)
2020-11-09 23:38:38 -<==      Total: 1
2020-11-09 23:38:38 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:38:38 -==> Parameters: 3(Integer)
2020-11-09 23:38:38 -<==      Total: 2
2020-11-09 23:38:38 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:38:38 -==> Parameters: 3(Integer)
2020-11-09 23:38:38 -<==      Total: 5
2020-11-09 23:43:23 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:43:23 -==> Parameters: 5(Integer)
2020-11-09 23:43:23 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:43:23 -==> Parameters: 5(Integer)
2020-11-09 23:43:23 -<==      Total: 1
2020-11-09 23:43:23 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:43:23 -==> Parameters: 5(Integer)
2020-11-09 23:43:23 -<==      Total: 2
2020-11-09 23:43:23 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:43:23 -==> Parameters: 5(Integer)
2020-11-09 23:43:23 -<==      Total: 0
2020-11-09 23:43:23 -<==      Total: 1
2020-11-09 23:43:23 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:43:23 -==> Parameters: 6(Integer)
2020-11-09 23:43:23 -<==      Total: 1
2020-11-09 23:43:23 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:43:23 -==> Parameters: 6(Integer)
2020-11-09 23:43:23 -<==      Total: 2
2020-11-09 23:43:23 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:43:23 -==> Parameters: 11(Integer)
2020-11-09 23:43:23 -<==      Total: 1
2020-11-09 23:43:23 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:43:23 -==> Parameters: 12(Integer)
2020-11-09 23:43:23 -<==      Total: 1
2020-11-09 23:44:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:44:22 -==> Parameters: 2(Integer)
2020-11-09 23:44:22 -<==      Total: 1
2020-11-09 23:44:22 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:44:22 -==> Parameters: 2(Integer)
2020-11-09 23:44:22 -<==      Total: 1
2020-11-09 23:44:22 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:44:22 -==> Parameters: 2(Integer)
2020-11-09 23:44:23 -<==      Total: 2
2020-11-09 23:44:23 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:44:23 -==> Parameters: 2(Integer)
2020-11-09 23:44:23 -<==      Total: 3
2020-11-09 23:44:31 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:44:31 -==> Parameters: 2(Integer)
2020-11-09 23:44:31 -<==      Total: 1
2020-11-09 23:44:31 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:44:31 -==> Parameters: 3(Integer)
2020-11-09 23:44:31 -<==      Total: 1
2020-11-09 23:44:31 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:44:31 -==> Parameters: 3(Integer)
2020-11-09 23:44:31 -<==      Total: 2
2020-11-09 23:44:31 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:44:31 -==> Parameters: 3(Integer)
2020-11-09 23:44:31 -<==      Total: 5
2020-11-09 23:46:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:46:45 -==> Parameters: 2(Integer)
2020-11-09 23:46:45 -<==      Total: 1
2020-11-09 23:46:45 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:46:45 -==> Parameters: 2(Integer)
2020-11-09 23:46:45 -<==      Total: 1
2020-11-09 23:46:45 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:46:45 -==> Parameters: 2(Integer)
2020-11-09 23:46:45 -<==      Total: 2
2020-11-09 23:46:45 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:46:45 -==> Parameters: 2(Integer)
2020-11-09 23:46:46 -<==      Total: 3
2020-11-09 23:47:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:47:22 -==> Parameters: 2(Integer)
2020-11-09 23:47:22 -<==      Total: 1
2020-11-09 23:47:22 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:47:22 -==> Parameters: 2(Integer)
2020-11-09 23:47:22 -<==      Total: 1
2020-11-09 23:47:22 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:47:22 -==> Parameters: 2(Integer)
2020-11-09 23:47:22 -<==      Total: 2
2020-11-09 23:47:22 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:47:22 -==> Parameters: 2(Integer)
2020-11-09 23:47:22 -<==      Total: 3
2020-11-09 23:48:42 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:48:42 -==> Parameters: 2(Integer)
2020-11-09 23:48:42 -<==      Total: 1
2020-11-09 23:48:42 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:48:42 -==> Parameters: 2(Integer)
2020-11-09 23:48:42 -<==      Total: 1
2020-11-09 23:48:42 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:48:42 -==> Parameters: 2(Integer)
2020-11-09 23:48:42 -<==      Total: 2
2020-11-09 23:48:42 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:48:42 -==> Parameters: 2(Integer)
2020-11-09 23:48:42 -<==      Total: 3
2020-11-09 23:48:52 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:48:52 -==> Parameters: 2(Integer)
2020-11-09 23:48:52 -<==      Total: 1
2020-11-09 23:48:52 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:48:52 -==> Parameters: 2(Integer)
2020-11-09 23:48:52 -<==      Total: 1
2020-11-09 23:48:52 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:48:52 -==> Parameters: 2(Integer)
2020-11-09 23:48:52 -<==      Total: 2
2020-11-09 23:48:52 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:48:52 -==> Parameters: 2(Integer)
2020-11-09 23:48:52 -<==      Total: 3
2020-11-09 23:49:34 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:49:34 -==> Parameters: 2(Integer)
2020-11-09 23:49:34 -<==      Total: 1
2020-11-09 23:49:34 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:49:34 -==> Parameters: 2(Integer)
2020-11-09 23:49:34 -<==      Total: 3
2020-11-09 23:49:34 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:49:34 -==> Parameters: 2(Integer)
2020-11-09 23:49:34 -<==      Total: 1
2020-11-09 23:49:34 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:49:34 -==> Parameters: 2(Integer)
2020-11-09 23:49:34 -<==      Total: 3
2020-11-09 23:49:34 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:49:34 -==> Parameters: 2(Integer)
2020-11-09 23:49:34 -<==      Total: 1
2020-11-09 23:49:34 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:49:34 -==> Parameters: 2(Integer)
2020-11-09 23:49:34 -<==      Total: 3
2020-11-09 23:49:34 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:49:34 -==> Parameters: 2(Integer)
2020-11-09 23:49:34 -<==      Total: 1
2020-11-09 23:49:34 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:49:34 -==> Parameters: 2(Integer)
2020-11-09 23:49:34 -<==      Total: 3
2020-11-09 23:49:35 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:49:35 -==> Parameters: 2(Integer)
2020-11-09 23:49:35 -<==      Total: 1
2020-11-09 23:49:35 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:49:35 -==> Parameters: 2(Integer)
2020-11-09 23:49:35 -<==      Total: 3
2020-11-09 23:49:36 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:49:36 -==> Parameters: 2(Integer)
2020-11-09 23:49:36 -<==      Total: 1
2020-11-09 23:49:36 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:49:36 -==> Parameters: 2(Integer)
2020-11-09 23:49:36 -<==      Total: 1
2020-11-09 23:49:36 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:49:36 -==> Parameters: 2(Integer)
2020-11-09 23:49:36 -<==      Total: 2
2020-11-09 23:49:36 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:49:36 -==> Parameters: 2(Integer)
2020-11-09 23:49:36 -<==      Total: 3
2020-11-09 23:52:54 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:52:54 -==> Parameters: 5(Integer)
2020-11-09 23:52:54 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:52:54 -==> Parameters: 5(Integer)
2020-11-09 23:52:54 -<==      Total: 2
2020-11-09 23:52:54 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:52:54 -==> Parameters: 5(Integer)
2020-11-09 23:52:54 -<==      Total: 1
2020-11-09 23:52:54 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:52:54 -==> Parameters: 5(Integer)
2020-11-09 23:52:54 -<==      Total: 1
2020-11-09 23:52:54 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:52:54 -==> Parameters: 6(Integer)
2020-11-09 23:52:54 -<==      Total: 0
2020-11-09 23:52:54 -<==      Total: 1
2020-11-09 23:52:54 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:52:54 -==> Parameters: 6(Integer)
2020-11-09 23:52:54 -<==      Total: 2
2020-11-09 23:52:54 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:52:54 -==> Parameters: 11(Integer)
2020-11-09 23:52:54 -<==      Total: 1
2020-11-09 23:52:54 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:52:54 -==> Parameters: 12(Integer)
2020-11-09 23:52:54 -<==      Total: 1
2020-11-09 23:53:26 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:26 -==> Parameters: 2(Integer)
2020-11-09 23:53:26 -<==      Total: 1
2020-11-09 23:53:26 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:53:26 -==> Parameters: 2(Integer)
2020-11-09 23:53:26 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:26 -==> Parameters: 5(Integer)
2020-11-09 23:53:26 -<==      Total: 3
2020-11-09 23:53:26 -<==      Total: 1
2020-11-09 23:53:26 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:53:26 -==> Parameters: 5(Integer)
2020-11-09 23:53:26 -<==      Total: 0
2020-11-09 23:53:30 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:30 -==> Parameters: 2(Integer)
2020-11-09 23:53:30 -<==      Total: 1
2020-11-09 23:53:30 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:53:30 -==> Parameters: 2(Integer)
2020-11-09 23:53:30 -<==      Total: 3
2020-11-09 23:53:32 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:32 -==> Parameters: 2(Integer)
2020-11-09 23:53:32 -<==      Total: 1
2020-11-09 23:53:32 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:53:32 -==> Parameters: 2(Integer)
2020-11-09 23:53:32 -<==      Total: 1
2020-11-09 23:53:32 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:53:32 -==> Parameters: 2(Integer)
2020-11-09 23:53:32 -<==      Total: 2
2020-11-09 23:53:32 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:53:32 -==> Parameters: 2(Integer)
2020-11-09 23:53:32 -<==      Total: 3
2020-11-09 23:53:37 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:37 -==> Parameters: 2(Integer)
2020-11-09 23:53:37 -<==      Total: 1
2020-11-09 23:53:37 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 23:53:37 -==> Parameters: 6(Integer)
2020-11-09 23:53:37 -<==      Total: 3
2020-11-09 23:53:38 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:53:38 -==> Parameters: 4(Integer)
2020-11-09 23:53:38 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:38 -==> Parameters: 4(Integer)
2020-11-09 23:53:38 -<==      Total: 0
2020-11-09 23:53:38 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:38 -==> Parameters: 4(Integer)
2020-11-09 23:53:38 -<==      Total: 1
2020-11-09 23:53:38 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:53:38 -==> Parameters: 4(Integer)
2020-11-09 23:53:38 -<==      Total: 1
2020-11-09 23:53:38 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:53:38 -==> Parameters: 6(Integer)
2020-11-09 23:53:38 -<==      Total: 1
2020-11-09 23:53:39 -<==      Total: 1
2020-11-09 23:53:39 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:53:39 -==> Parameters: 6(Integer)
2020-11-09 23:53:39 -<==      Total: 2
2020-11-09 23:53:39 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:39 -==> Parameters: 11(Integer)
2020-11-09 23:53:39 -<==      Total: 1
2020-11-09 23:53:39 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:39 -==> Parameters: 12(Integer)
2020-11-09 23:53:39 -<==      Total: 1
2020-11-09 23:53:41 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:41 -==> Parameters: 5(Integer)
2020-11-09 23:53:41 -<==      Total: 1
2020-11-09 23:53:41 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:53:41 -==> Parameters: 5(Integer)
2020-11-09 23:53:41 -<==      Total: 0
2020-11-09 23:53:46 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:53:46 -==> Parameters: 6(Integer)
2020-11-09 23:53:46 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:46 -==> Parameters: 6(Integer)
2020-11-09 23:53:46 -<==      Total: 2
2020-11-09 23:53:46 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:46 -==> Parameters: 6(Integer)
2020-11-09 23:53:46 -<==      Total: 1
2020-11-09 23:53:46 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:53:46 -==> Parameters: 6(Integer)
2020-11-09 23:53:46 -<==      Total: 1
2020-11-09 23:53:46 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:53:46 -==> Parameters: 6(Integer)
2020-11-09 23:53:46 -<==      Total: 0
2020-11-09 23:53:46 -<==      Total: 1
2020-11-09 23:53:46 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:53:46 -==> Parameters: 6(Integer)
2020-11-09 23:53:46 -<==      Total: 2
2020-11-09 23:53:46 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:46 -==> Parameters: 11(Integer)
2020-11-09 23:53:46 -<==      Total: 1
2020-11-09 23:53:46 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:46 -==> Parameters: 12(Integer)
2020-11-09 23:53:46 -<==      Total: 1
2020-11-09 23:53:48 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:48 -==> Parameters: 5(Integer)
2020-11-09 23:53:49 -<==      Total: 1
2020-11-09 23:53:49 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:53:49 -==> Parameters: 5(Integer)
2020-11-09 23:53:49 -<==      Total: 0
2020-11-09 23:53:54 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:54 -==> Parameters: 4(Integer)
2020-11-09 23:53:54 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:53:54 -==> Parameters: 4(Integer)
2020-11-09 23:53:54 -<==      Total: 1
2020-11-09 23:53:54 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:53:54 -==> Parameters: 4(Integer)
2020-11-09 23:53:54 -<==      Total: 0
2020-11-09 23:53:54 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:54 -==> Parameters: 4(Integer)
2020-11-09 23:53:54 -<==      Total: 1
2020-11-09 23:53:54 -<==      Total: 1
2020-11-09 23:53:54 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:53:54 -==> Parameters: 6(Integer)
2020-11-09 23:53:54 -<==      Total: 1
2020-11-09 23:53:54 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:53:54 -==> Parameters: 6(Integer)
2020-11-09 23:53:54 -<==      Total: 2
2020-11-09 23:53:54 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:54 -==> Parameters: 11(Integer)
2020-11-09 23:53:55 -<==      Total: 1
2020-11-09 23:53:55 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:55 -==> Parameters: 12(Integer)
2020-11-09 23:53:55 -<==      Total: 1
2020-11-09 23:53:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:56 -==> Parameters: 5(Integer)
2020-11-09 23:53:56 -<==      Total: 1
2020-11-09 23:53:56 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:53:56 -==> Parameters: 5(Integer)
2020-11-09 23:53:56 -<==      Total: 0
2020-11-09 23:53:56 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:53:56 -==> Parameters: 5(Integer)
2020-11-09 23:53:56 -<==      Total: 2
2020-11-09 23:53:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:56 -==> Parameters: 5(Integer)
2020-11-09 23:53:56 -<==      Total: 1
2020-11-09 23:53:56 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:53:56 -==> Parameters: 6(Integer)
2020-11-09 23:53:56 -<==      Total: 1
2020-11-09 23:53:56 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:53:56 -==> Parameters: 6(Integer)
2020-11-09 23:53:56 -<==      Total: 2
2020-11-09 23:53:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:56 -==> Parameters: 11(Integer)
2020-11-09 23:53:56 -<==      Total: 1
2020-11-09 23:53:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:56 -==> Parameters: 12(Integer)
2020-11-09 23:53:56 -<==      Total: 1
2020-11-09 23:53:56 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:53:56 -==> Parameters: 5(Integer)
2020-11-09 23:53:57 -<==      Total: 2
2020-11-09 23:53:57 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:57 -==> Parameters: 5(Integer)
2020-11-09 23:53:57 -<==      Total: 1
2020-11-09 23:53:57 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:53:57 -==> Parameters: 6(Integer)
2020-11-09 23:53:57 -<==      Total: 1
2020-11-09 23:53:57 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:53:57 -==> Parameters: 6(Integer)
2020-11-09 23:53:57 -<==      Total: 2
2020-11-09 23:53:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:57 -==> Parameters: 11(Integer)
2020-11-09 23:53:57 -<==      Total: 1
2020-11-09 23:53:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:57 -==> Parameters: 12(Integer)
2020-11-09 23:53:57 -<==      Total: 1
2020-11-09 23:53:57 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:53:57 -==> Parameters: 5(Integer)
2020-11-09 23:53:57 -<==      Total: 2
2020-11-09 23:53:57 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:57 -==> Parameters: 5(Integer)
2020-11-09 23:53:57 -<==      Total: 1
2020-11-09 23:53:57 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:53:57 -==> Parameters: 6(Integer)
2020-11-09 23:53:57 -<==      Total: 1
2020-11-09 23:53:57 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:53:57 -==> Parameters: 6(Integer)
2020-11-09 23:53:57 -<==      Total: 2
2020-11-09 23:53:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:57 -==> Parameters: 11(Integer)
2020-11-09 23:53:57 -<==      Total: 1
2020-11-09 23:53:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:57 -==> Parameters: 12(Integer)
2020-11-09 23:53:57 -<==      Total: 1
2020-11-09 23:53:57 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:53:57 -==> Parameters: 6(Integer)
2020-11-09 23:53:57 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:57 -==> Parameters: 6(Integer)
2020-11-09 23:53:57 -<==      Total: 2
2020-11-09 23:53:57 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:53:57 -==> Parameters: 6(Integer)
2020-11-09 23:53:57 -<==      Total: 1
2020-11-09 23:53:57 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:53:57 -==> Parameters: 6(Integer)
2020-11-09 23:53:57 -<==      Total: 1
2020-11-09 23:53:57 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:53:57 -==> Parameters: 6(Integer)
2020-11-09 23:53:57 -<==      Total: 0
2020-11-09 23:53:57 -<==      Total: 1
2020-11-09 23:53:57 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:53:57 -==> Parameters: 6(Integer)
2020-11-09 23:53:57 -<==      Total: 2
2020-11-09 23:53:57 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:57 -==> Parameters: 11(Integer)
2020-11-09 23:53:58 -<==      Total: 1
2020-11-09 23:53:58 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:53:58 -==> Parameters: 12(Integer)
2020-11-09 23:53:58 -<==      Total: 1
2020-11-09 23:54:19 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:54:19 -==> Parameters: 4(Integer)
2020-11-09 23:54:19 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:54:19 -==> Parameters: 4(Integer)
2020-11-09 23:54:19 -<==      Total: 0
2020-11-09 23:54:19 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:54:19 -<==      Total: 1
2020-11-09 23:54:19 -==> Parameters: 4(Integer)
2020-11-09 23:54:19 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:54:19 -==> Parameters: 4(Integer)
2020-11-09 23:54:19 -<==      Total: 1
2020-11-09 23:54:19 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:54:19 -==> Parameters: 6(Integer)
2020-11-09 23:54:19 -<==      Total: 1
2020-11-09 23:54:19 -<==      Total: 1
2020-11-09 23:54:19 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:54:19 -==> Parameters: 6(Integer)
2020-11-09 23:54:19 -<==      Total: 2
2020-11-09 23:54:19 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:19 -==> Parameters: 11(Integer)
2020-11-09 23:54:19 -<==      Total: 1
2020-11-09 23:54:19 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:19 -==> Parameters: 12(Integer)
2020-11-09 23:54:19 -<==      Total: 1
2020-11-09 23:54:21 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:54:21 -==> Parameters: 5(Integer)
2020-11-09 23:54:21 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:54:21 -==> Parameters: 5(Integer)
2020-11-09 23:54:21 -<==      Total: 1
2020-11-09 23:54:21 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:54:21 -==> Parameters: 5(Integer)
2020-11-09 23:54:21 -<==      Total: 2
2020-11-09 23:54:21 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:54:21 -==> Parameters: 5(Integer)
2020-11-09 23:54:21 -<==      Total: 0
2020-11-09 23:54:21 -<==      Total: 1
2020-11-09 23:54:21 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:54:21 -==> Parameters: 6(Integer)
2020-11-09 23:54:21 -<==      Total: 1
2020-11-09 23:54:21 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:54:21 -==> Parameters: 6(Integer)
2020-11-09 23:54:21 -<==      Total: 2
2020-11-09 23:54:21 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:21 -==> Parameters: 11(Integer)
2020-11-09 23:54:21 -<==      Total: 1
2020-11-09 23:54:21 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:21 -==> Parameters: 12(Integer)
2020-11-09 23:54:21 -<==      Total: 1
2020-11-09 23:54:24 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:54:24 -==> Parameters: 6(Integer)
2020-11-09 23:54:24 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:54:24 -==> Parameters: 6(Integer)
2020-11-09 23:54:24 -<==      Total: 2
2020-11-09 23:54:24 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:54:24 -==> Parameters: 6(Integer)
2020-11-09 23:54:24 -<==      Total: 1
2020-11-09 23:54:24 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:54:24 -==> Parameters: 6(Integer)
2020-11-09 23:54:24 -<==      Total: 1
2020-11-09 23:54:24 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:54:24 -==> Parameters: 6(Integer)
2020-11-09 23:54:24 -<==      Total: 0
2020-11-09 23:54:24 -<==      Total: 1
2020-11-09 23:54:24 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:54:24 -==> Parameters: 6(Integer)
2020-11-09 23:54:24 -<==      Total: 2
2020-11-09 23:54:24 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:24 -==> Parameters: 11(Integer)
2020-11-09 23:54:24 -<==      Total: 1
2020-11-09 23:54:24 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:24 -==> Parameters: 12(Integer)
2020-11-09 23:54:24 -<==      Total: 1
2020-11-09 23:54:27 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:54:27 -==> Parameters: 5(Integer)
2020-11-09 23:54:27 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:54:27 -==> Parameters: 5(Integer)
2020-11-09 23:54:27 -<==      Total: 1
2020-11-09 23:54:27 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:54:27 -==> Parameters: 5(Integer)
2020-11-09 23:54:27 -<==      Total: 2
2020-11-09 23:54:27 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:54:27 -==> Parameters: 5(Integer)
2020-11-09 23:54:28 -<==      Total: 0
2020-11-09 23:54:28 -<==      Total: 1
2020-11-09 23:54:28 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:54:28 -==> Parameters: 6(Integer)
2020-11-09 23:54:28 -<==      Total: 1
2020-11-09 23:54:28 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:54:28 -==> Parameters: 6(Integer)
2020-11-09 23:54:28 -<==      Total: 2
2020-11-09 23:54:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:28 -==> Parameters: 11(Integer)
2020-11-09 23:54:28 -<==      Total: 1
2020-11-09 23:54:28 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:28 -==> Parameters: 12(Integer)
2020-11-09 23:54:28 -<==      Total: 1
2020-11-09 23:54:42 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:54:42 -==> Parameters: 4(Integer)
2020-11-09 23:54:42 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:54:42 -==> Parameters: 4(Integer)
2020-11-09 23:54:42 -<==      Total: 0
2020-11-09 23:54:42 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:54:42 -==> Parameters: 4(Integer)
2020-11-09 23:54:42 -<==      Total: 1
2020-11-09 23:54:42 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:54:42 -==> Parameters: 4(Integer)
2020-11-09 23:54:42 -<==      Total: 1
2020-11-09 23:54:42 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:54:42 -==> Parameters: 6(Integer)
2020-11-09 23:54:42 -<==      Total: 1
2020-11-09 23:54:42 -<==      Total: 1
2020-11-09 23:54:42 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:54:42 -==> Parameters: 6(Integer)
2020-11-09 23:54:42 -<==      Total: 2
2020-11-09 23:54:42 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:42 -==> Parameters: 11(Integer)
2020-11-09 23:54:42 -<==      Total: 1
2020-11-09 23:54:42 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:42 -==> Parameters: 12(Integer)
2020-11-09 23:54:42 -<==      Total: 1
2020-11-09 23:54:45 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:54:45 -==> Parameters: 4(Integer)
2020-11-09 23:54:45 -<==      Total: 1
2020-11-09 23:54:45 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:54:45 -==> Parameters: 6(Integer)
2020-11-09 23:54:45 -<==      Total: 1
2020-11-09 23:54:45 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:54:45 -==> Parameters: 6(Integer)
2020-11-09 23:54:45 -<==      Total: 2
2020-11-09 23:54:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:45 -==> Parameters: 11(Integer)
2020-11-09 23:54:45 -<==      Total: 1
2020-11-09 23:54:45 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:54:45 -==> Parameters: 12(Integer)
2020-11-09 23:54:45 -<==      Total: 1
2020-11-09 23:56:47 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:56:47 -==> Parameters: 4(Integer)
2020-11-09 23:56:47 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:56:47 -==> Parameters: 4(Integer)
2020-11-09 23:56:47 -<==      Total: 0
2020-11-09 23:56:47 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:56:47 -==> Parameters: 4(Integer)
2020-11-09 23:56:47 -<==      Total: 1
2020-11-09 23:56:47 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:56:47 -==> Parameters: 4(Integer)
2020-11-09 23:56:47 -<==      Total: 1
2020-11-09 23:56:47 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:56:47 -==> Parameters: 6(Integer)
2020-11-09 23:56:47 -<==      Total: 1
2020-11-09 23:56:47 -<==      Total: 1
2020-11-09 23:56:47 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:56:47 -==> Parameters: 6(Integer)
2020-11-09 23:56:47 -<==      Total: 2
2020-11-09 23:56:47 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:56:47 -==> Parameters: 11(Integer)
2020-11-09 23:56:47 -<==      Total: 1
2020-11-09 23:56:47 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:56:47 -==> Parameters: 12(Integer)
2020-11-09 23:56:47 -<==      Total: 1
2020-11-09 23:56:56 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:56:56 -==> Parameters: 4(Integer)
2020-11-09 23:56:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:56:56 -==> Parameters: 4(Integer)
2020-11-09 23:56:56 -<==      Total: 0
2020-11-09 23:56:56 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:56:56 -==> Parameters: 4(Integer)
2020-11-09 23:56:56 -<==      Total: 1
2020-11-09 23:56:56 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:56:56 -==> Parameters: 4(Integer)
2020-11-09 23:56:56 -<==      Total: 1
2020-11-09 23:56:56 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:56:56 -==> Parameters: 6(Integer)
2020-11-09 23:56:56 -<==      Total: 1
2020-11-09 23:56:56 -<==      Total: 1
2020-11-09 23:56:56 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:56:56 -==> Parameters: 6(Integer)
2020-11-09 23:56:56 -<==      Total: 2
2020-11-09 23:56:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:56:56 -==> Parameters: 11(Integer)
2020-11-09 23:56:56 -<==      Total: 1
2020-11-09 23:56:56 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:56:56 -==> Parameters: 12(Integer)
2020-11-09 23:56:56 -<==      Total: 1
2020-11-09 23:57:00 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:57:00 -==> Parameters: 2(Integer)
2020-11-09 23:57:00 -<==      Total: 1
2020-11-09 23:57:00 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:57:00 -==> Parameters: 2(Integer)
2020-11-09 23:57:00 -<==      Total: 3
2020-11-09 23:57:04 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:57:04 -==> Parameters: 2(Integer)
2020-11-09 23:57:04 -<==      Total: 1
2020-11-09 23:57:04 -==>  Preparing: SELECT * from course WHERE id = ? 
2020-11-09 23:57:04 -==> Parameters: 2(Integer)
2020-11-09 23:57:04 -<==      Total: 1
2020-11-09 23:57:04 -==>  Preparing: SELECT * from class WHERE courseId = ? 
2020-11-09 23:57:04 -==> Parameters: 2(Integer)
2020-11-09 23:57:05 -<==      Total: 2
2020-11-09 23:57:05 -==>  Preparing: SELECT * from courseWare WHERE courseId = ? 
2020-11-09 23:57:05 -==> Parameters: 2(Integer)
2020-11-09 23:57:05 -<==      Total: 3
2020-11-09 23:57:08 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:57:08 -==> Parameters: 2(Integer)
2020-11-09 23:57:08 -<==      Total: 1
2020-11-09 23:57:08 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 23:57:08 -==> Parameters: 6(Integer)
2020-11-09 23:57:08 -<==      Total: 3
2020-11-09 23:57:10 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:57:10 -==> Parameters: 4(Integer)
2020-11-09 23:57:10 -<==      Total: 1
2020-11-09 23:57:10 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:57:10 -==> Parameters: 4(Integer)
2020-11-09 23:57:10 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:57:10 -==> Parameters: 4(Integer)
2020-11-09 23:57:10 -<==      Total: 1
2020-11-09 23:57:10 -<==      Total: 0
2020-11-09 23:57:10 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:57:10 -==> Parameters: 4(Integer)
2020-11-09 23:57:10 -<==      Total: 1
2020-11-09 23:57:10 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:57:10 -==> Parameters: 6(Integer)
2020-11-09 23:57:10 -<==      Total: 1
2020-11-09 23:57:10 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:57:10 -==> Parameters: 6(Integer)
2020-11-09 23:57:10 -<==      Total: 2
2020-11-09 23:57:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:57:10 -==> Parameters: 11(Integer)
2020-11-09 23:57:10 -<==      Total: 1
2020-11-09 23:57:10 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:57:10 -==> Parameters: 12(Integer)
2020-11-09 23:57:10 -<==      Total: 1
2020-11-09 23:57:17 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:57:17 -==> Parameters: 2(Integer)
2020-11-09 23:57:17 -<==      Total: 1
2020-11-09 23:57:17 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 23:57:17 -==> Parameters: 6(Integer)
2020-11-09 23:57:17 -<==      Total: 3
2020-11-09 23:57:21 -==>  Preparing: SELECT * from taskStu WHERE taskId = ? 
2020-11-09 23:57:21 -==> Parameters: 4(Integer)
2020-11-09 23:57:21 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:57:21 -==> Parameters: 4(Integer)
2020-11-09 23:57:21 -<==      Total: 0
2020-11-09 23:57:21 -==>  Preparing: SELECT * from task WHERE id = ? 
2020-11-09 23:57:21 -==> Parameters: 4(Integer)
2020-11-09 23:57:22 -<==      Total: 1
2020-11-09 23:57:22 -==>  Preparing: SELECT * from taskWare WHERE taskId = ? 
2020-11-09 23:57:22 -==> Parameters: 4(Integer)
2020-11-09 23:57:22 -<==      Total: 1
2020-11-09 23:57:22 -==>  Preparing: SELECT * from class WHERE id = ? 
2020-11-09 23:57:22 -==> Parameters: 6(Integer)
2020-11-09 23:57:22 -<==      Total: 1
2020-11-09 23:57:22 -<==      Total: 1
2020-11-09 23:57:22 -==>  Preparing: SELECT * from selectClass WHERE classId = ? 
2020-11-09 23:57:22 -==> Parameters: 6(Integer)
2020-11-09 23:57:22 -<==      Total: 2
2020-11-09 23:57:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:57:22 -==> Parameters: 11(Integer)
2020-11-09 23:57:22 -<==      Total: 1
2020-11-09 23:57:22 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:57:22 -==> Parameters: 12(Integer)
2020-11-09 23:57:22 -<==      Total: 1
2020-11-09 23:57:29 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:57:29 -==> Parameters: 2(Integer)
2020-11-09 23:57:29 -<==      Total: 1
2020-11-09 23:57:29 -==>  Preparing: SELECT * from task WHERE classId = ? 
2020-11-09 23:57:29 -==> Parameters: 6(Integer)
2020-11-09 23:57:29 -<==      Total: 3
2020-11-09 23:57:50 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:57:50 -==> Parameters: 2(Integer)
2020-11-09 23:57:50 -<==      Total: 1
2020-11-09 23:57:50 -==>  Preparing: SELECT * from createApplication WHERE teacherId = ? 
2020-11-09 23:57:50 -==> Parameters: 2(Integer)
2020-11-09 23:57:50 -<==      Total: 5
2020-11-09 23:57:59 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:57:59 -==> Parameters: 2(Integer)
2020-11-09 23:57:59 -==>  Preparing: SELECT * from semester 
2020-11-09 23:57:59 -==> Parameters: 
2020-11-09 23:57:59 -<==      Total: 1
2020-11-09 23:57:59 -<==      Total: 4
2020-11-09 23:57:59 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:57:59 -==> Parameters: 2(Integer)
2020-11-09 23:57:59 -<==      Total: 3
2020-11-09 23:58:02 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:58:02 -==> Parameters: 2(Integer)
2020-11-09 23:58:02 -<==      Total: 1
2020-11-09 23:58:02 -==>  Preparing: SELECT * from createApplication WHERE teacherId = ? 
2020-11-09 23:58:02 -==> Parameters: 2(Integer)
2020-11-09 23:58:02 -<==      Total: 5
2020-11-09 23:58:05 -==>  Preparing: SELECT * from semester 
2020-11-09 23:58:05 -==> Parameters: 
2020-11-09 23:58:05 -<==      Total: 4
2020-11-09 23:58:05 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:58:05 -==> Parameters: 2(Integer)
2020-11-09 23:58:05 -<==      Total: 1
2020-11-09 23:58:05 -==>  Preparing: SELECT * from course WHERE teacherId = ? 
2020-11-09 23:58:05 -==> Parameters: 2(Integer)
2020-11-09 23:58:05 -<==      Total: 3
2020-11-09 23:58:25 -==>  Preparing: SELECT * from USER where id = ? 
2020-11-09 23:58:25 -==> Parameters: 2(Integer)
2020-11-09 23:58:25 -==>  Preparing: SELECT * from grade 
2020-11-09 23:58:25 -==> Parameters: 
2020-11-09 23:58:25 -<==      Total: 1
2020-11-09 23:58:25 -==>  Preparing: SELECT * from createClassApplication WHERE teacherId = ? 
2020-11-09 23:58:25 -==> Parameters: 2(Integer)
2020-11-09 23:58:25 -<==      Total: 7
2020-11-09 23:58:25 -<==      Total: 6
